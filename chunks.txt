sp {chunk*__copy__task__goal__elaboration__*complete-copy-task-goal*OpNoChange*t915-1
    :chunk
    (state <s1> ^copy-task-goal <c1> ^deep-copy-world <d1>)
    (<c1> ^pred-count 1 ^1 <i1> ^handle <h1>)
    (<i1> ^type state ^property-handle <p1> ^handle <h2> ^1 <i2>)
    (<d1> ^copy-objects-map <c2>)
    (<c2> ^<i2> <i3>)
    -->
    (<s1> ^desired <d2>)
    (<d2> ^duplicate-of <c1> ^handle <h1> ^1 <i4> ^pred-count 1)
    (<i4> ^1 <i3> ^property-handle <p1> ^handle <h2> ^type state)
}

sp {chunk*__copy__task__operator__elaboration__*complete-copy-task-operator*OpNoChange*t908-1
    :chunk
    (state <s1> ^copy-task-operator <c1>)
    (<c1> ^object-map <o1> ^copy-name <c2> ^destination <d1>
          ^task-operator <t1>)
    (<t1> ^perform <p1> ^task-handle <t2> ^name <n1> ^<a1> <a2>)
   -{ (<t1> ^{ <a3> <> <a1> } <a4>)
      (<a4> ^arg-type <a5>)}
    (<a2> ^arg-type object ^id <i1>)
    (<o1> ^<i1> <i2>)
    -->
    (<d1> ^<c2> <c3>)
    (<c3> ^perform <p1> ^task-handle <t2> ^item-type task-operator ^name <n1>
           ^<a1> <a6>)
    (<a6> ^id <i2> ^arg-type object)
}

sp {chunkx2*TASK*PROPOSE*SUBTASK*learn-subtask-proposal*unmatched*subtask*OpNoChange*t890-1
    :chunk
    (state <s1> ^task-operator <t1> ^name <n1> ^problem-space <p1> ^world <w1>)
    (<t1> ^task-handle put-down1 ^name <n1>)
    (<p1> ^name action)
    (<w1> ^objects <o1>)
    (<o1> ^object <o2>)
    (<o2> ^predicates <p2>)
    (<p2> ^shape soda1 ^category block)
    -->
    (<s1> ^operator <o3> +)
    (<o3> ^perform multiple ^task-handle pick-up1 ^item-type task-operator
           ^name op_pick-up1 ^arg1 <a1> ^subtask-handle subtask3)
    (<a1> ^id <o2> ^arg-type object)
}

sp {chunk*__instantiate__task__operator__application__*complete-instantiate-task-operator*1*arguments*OpNoChange*t886-1
    :chunk
    (state <s1> ^operator <o1>)
    (<o1> ^name instantiate-task-operator ^general-task-rep <g1>
          ^general-task-rep <g2> ^reference-tcn-proc <r1>
          ^reference-task-op <r2> ^destination <d1> ^world <w1>)
    (<g1> ^perform <p1> ^op_name <o2> ^task-handle <t1> ^handle <h1>)
    (<w1> ^objects <o3>)
    (<o3> ^object <o4>)
    (<o4> ^predicates <p2>)
    (<g2> ^{ <a1> <> conditions } <a2>)
   -{ (<g2> ^{ <a3> <> <a1> <> conditions } <a4>)
      (<a4> ^arg-type <a5>)}
    (<a2> ^arg-type object ^id <i1>)
    (<i1> ^default <d2>)
    (<p2> ^<a6> <a7> ^{ <a8> < <a6> } <a9>)
    (<d2> ^<a6> <a7> -^{ <a10> <> <a8> <> <a6> } <a11> ^<a8> <a9>)
    -->
    (<d1> ^instantiation <i2>)
    (<i2> ^<a1> <a12> ^perform <p1> ^task-handle <t1> ^item-type task-operator
           ^name <o2>)
    (<a12> ^arg-type object ^id <o4>)
}

sp {chunk*__copy__task__goal__elaboration__*complete-copy-task-goal*OpNoChange*t669-1
    :chunk
    (state <s1> ^copy-task-goal <c1> ^deep-copy-world <d1>)
    (<c1> ^pred-count 1 ^1 <i1> ^handle <h1>)
    (<i1> ^type relation ^handle <h2> ^2 <i2> ^1 <i3>)
    (<d1> ^copy-objects-map <c2>)
    (<c2> ^<i3> <i4> ^<i2> <i5>)
    -->
    (<s1> ^desired <d2>)
    (<d2> ^duplicate-of <c1> ^handle <h1> ^1 <i6> ^pred-count 1)
    (<i6> ^2 <i5> ^1 <i4> ^handle <h2> ^type relation)
}

sp {chunk*__copy__task__operator__elaboration__*complete-copy-task-operator*OpNoChange*t661-1
    :chunk
    (state <s1> ^copy-task-operator <c1>)
    (<c1> ^object-map <o1> ^copy-name <c2> ^destination <d1>
          ^task-operator <t1>)
    (<t1> ^perform <p1> ^task-handle <t2> ^name <n1> ^<a1> <a2>
          ^{ <a3> < <a1> } <a4>)
    (<a2> ^arg-type partial-predicate ^handle <h1> ^2 <i1>)
    (<o1> ^<i1> <i2> ^<i3> <i4>)
   -{ (<t1> ^{ <a5> <> <a1> <> <a3> } <a6>)
      (<a6> ^arg-type <a7>)}
    (<a4> ^arg-type object ^id <i3>)
    -->
    (<d1> ^<c2> <c3>)
    (<c3> ^perform <p1> ^task-handle <t2> ^item-type task-operator ^name <n1>
           ^<a1> <a8> ^<a3> <a9>)
    (<a8> ^2 <i2> ^handle <h1> ^arg-type partial-predicate)
    (<a9> ^id <i4> ^arg-type object)
}

sp {chunkx2*__task__goal__elaboration__*complete-learn-desired-elaboration-rule*OpNoChange*t648-1
    :chunk
    (state <s1> ^world <w1> -^copy-task-goal <c1> ^task-operator <t1>
          ^name <n1> ^problem-space <p1>)
    (<t1> ^current-subgoal put-down1sg1 ^task-handle put-down1 ^arg2 <a1>
          ^arg2 <a2> ^arg1 <a3> ^name <n1>)
    (<a1> ^arg-type partial-predicate ^handle <h1>)
    (<a2> ^arg-type partial-predicate ^2 <i2>)
    (<a3> ^arg-type object ^id <i1>)
    (<p1> ^name action)
    -->
    (<s1> ^desired <d1>)
    (<d1> ^1 <i3> ^pred-count 1 ^handle put-down1sg1)
    (<i3> ^2 <i2> ^1 <i1> ^handle <h1> ^type relation)
}

sp {chunk*__instantiate__task__goal__application__*complete-instantiate-task-goal*OpNoChange*t647-1
    :chunk
    (state <s1> ^operator <o1>)
    (<o1> ^name instantiate-task-goal ^general-goal-rep <g1>
          ^general-goal-rep <g2> ^reference-tcn-proc <r1>
          ^reference-task-op <r2> ^destination <d1> ^world <w1>)
    (<g1> ^pred-count 1 ^1 <i1>)
    (<i1> ^type relation ^id <i2> ^2 <i3> ^1 <i4>)
    (<r2> ^<a1> <a2> ^<a4> <a5> ^<a7> <a8>)
    (<a2> ^arg-type object ^id <i5>)
    (<r1> ^<a1> <a3> ^<a4> <a6> ^<a7> <a9>)
    (<a3> ^arg-type object ^id <i4>)
    (<a5> ^arg-type partial-predicate ^2 <i6>)
    (<a6> ^arg-type partial-predicate ^2 <i3>)
    (<a8> ^arg-type partial-predicate ^handle <h1>)
    (<a9> ^arg-type partial-predicate ^id <i2>)
    -->
    (<d1> ^instantiation <i7>)
    (<i7> ^1 <i8> ^pred-count 1)
    (<i8> ^2 <i6> ^1 <i5> ^handle <h1> ^type relation)
}

sp {chunkx2*__task__goal__elaboration__*complete-learn-desired-elaboration-rule*OpNoChange*t489-1
    :chunk
    (state <s1> ^world <w1> -^copy-task-goal <c1> ^task-operator <t1>
          ^name <n1> ^problem-space <p1>)
    (<t1> ^current-subgoal pick-up1sg1 ^task-handle pick-up1 ^arg1 <a1>
          ^name <n1>)
    (<a1> ^arg-type object ^id <i1>)
    (<p1> ^name action)
    -->
    (<s1> ^desired <d1>)
    (<d1> ^1 <i2> ^pred-count 1 ^handle pick-up1sg1)
    (<i2> ^1 <i1> ^property-handle arm-status ^handle grabbed ^type state)
}

sp {chunk*__instantiate__task__goal__application__*complete-instantiate-task-goal*OpNoChange*t488-1
    :chunk
    (state <s1> ^operator <o1>)
    (<o1> ^name instantiate-task-goal ^general-goal-rep <g1>
          ^general-goal-rep <g2> ^reference-tcn-proc <r1>
          ^reference-task-op <r2> ^destination <d1> ^world <w1>)
    (<g1> ^pred-count 1 ^1 <i1>)
    (<i1> ^type state ^id <i2> ^1 <i3>)
    (<i2> ^default <d2>)
    (<d2> ^predicate-handle <p1> ^property-handle <p2>)
    (<r2> ^<a1> <a2>)
    (<a2> ^arg-type object ^id <i4>)
    (<r1> ^<a1> <a3>)
    (<a3> ^arg-type object ^id <i3>)
    -->
    (<d1> ^instantiation <i5>)
    (<i5> ^1 <i6> ^pred-count 1)
    (<i6> ^1 <i4> ^property-handle <p2> ^handle <p1> ^type state)
}



