smem-rep



<action> 
  ^handle <action-handle>
  ^item-type action
  ^action-type << primitive composite >>
  ^procedural <proc>
    ^op_name <name>
    ^arg1 <obj-arg>
      ^arg-type object
      ^id <obj-slot>
      ^arg-status << real imagined >>
    ^arg2 <conc-arg>
      ^arg-type concept
      ^id <conc-slot>
    ^arg3 <pred-arg>
      ^arg-type pred-arg
      ^id <pred-slot>
      ^2 <obj-slot>
  ^goal <goal>
    ^predicate <goal-pred>
      ^type << relation state >>
      ^id <pred-slot>
      ^1 <obj-slot>
      ^2 <obj-slot>

Slots:
  A slot connects between goals and procedural items
  A slot can have a default/imagined structure giving information used during matching

object-slot
  ^prop1 pred1 ^prop2 pred2 ...
predicate-slot
  ^predicate-handle handle
    


action-operator
  ^action-handle <handle>
  ^name <op-name>
  ^action-type << primitive composite >>
  ^arg1 <obj-arg>
    ^arg-type object
    ^id <top-state-object>


  
