sp {chunk*top-pair*apply*complete*t4349-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^negative false ^type state-pair ^args <a3>
          ^parameter <p2> ^result <r1> ^name <n2> ^attribute <a4>)
    (<a3> ^num 1 ^1 <i1>)
    (<i1> -^rtype set)
    (<p2> ^num { <n1> < 2 })
    (<r1> ^set <s2>)
    (<p1> ^predicate <p3>)
    (<p3> ^handle <n2> ^instance <i2>)
    (<i2> ^1 <i3>)
   -{ (<i3> ^<a5> <a6>)
     -{ (<i1> ^result <r2>)
        (<r2> ^set <s3>)
        (<s3> ^instance <i4>)
        (<i4> ^1 <a6>)}}
   -{ (<i3> -^<a7> <a8>)
      (<s1> ^<a9> <a10>)}
    -->
    (<s2> ^instance <i5> +)
    (<i5> ^1 <i3> +)
}

sp {chunk*board-between*elaborate*object*instance*t4085-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype set ^type function ^args <a3>
          ^negative <n1> ^parameter <p1> ^result <r3> ^name <n2>)
    (<a3> ^num 3 ^3 <i1> ^2 <i2> ^1 <i3>)
    (<i1> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i4>)
    (<i4> ^1 <i5>)
    (<i2> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i6>)
    (<i6> ^1 { <i7> <> <i5> })
    (<r3> ^set <s4>)
    -->
    (<s4> ^instance <i8> +)
    (<i8> ^1 <i9> + ^3 <i5> + ^2 <i7> +)
}

sp {chunk*top-pair*apply*complete*t2505-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^negative false ^type state-pair ^parameter <p2>
          ^args <a3> ^result <r3> ^name <n1> ^attribute <a4>)
    (<p2> ^num 2)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<i1> -^rtype set ^result <r2>)
    (<i2> -^rtype set ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i3>)
    (<i3> ^1 <i4>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i5>)
    (<i5> ^1 <i6>)
    (<r3> ^set <s4>)
    (<p1> ^predicate <p3>)
    (<p3> ^handle <n1> ^instance <i7>)
    (<i7> ^2 <i6> ^1 <i4>)
    -->
    (<s4> ^instance <i8> +)
    (<i8> ^2 <i6> + ^1 <i4> +)
}

sp {chunk*with-attribute*apply*complete*instance*t3710-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^type attribute ^negative <n1> ^parameter <p1> ^args <a3>
          ^result <r1> ^name <n2> ^attribute <a4>)
    (<a3> ^1 <i1>)
    (<i1> -^rtype set)
    (<r1> ^set <s2>)
    -->
    (<s2> ^instance <i2> +)
    (<i2> ^2 <n2> + ^3 <a4> + ^1 <i3> +)
}

sp {chunk*soar-compare*greater*param-2*OpNoChange*t2141-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function soar-greater ^type function ^parameter <p1> ^args <a3>
          ^negative <n1> ^result <r3> ^name <n2>)
    (<p1> ^num 2)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<i1> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i3>)
    (<i3> ^1 <i4>)
    (<i2> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i5>)
    (<i5> ^1 { <i6> > <i4> })
    (<r3> ^set <s4>)
    -->
    (<s4> ^instance <i7> +)
    (<i7> ^1 <i6> + ^2 <i4> +)
}

sp {chunk*top-pair*apply*complete*t1257-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^negative true ^type state-pair ^parameter <p2>
          ^args <a3> ^result <r3> ^name <n1> ^attribute <a4>)
    (<p2> ^num 2)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<i1> -^rtype set ^result <r2>)
    (<i2> -^rtype set ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i3>)
    (<i3> ^1 <i4>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i5>)
    (<i5> ^1 { <i6> <> <i4> })
    (<r3> ^set <s4>)
    (<p1> ^predicate <p3>)
   -{ (<p3> ^instance <i7>)
      (<i7> ^2 <i6> ^1 <i4>)}
    (<p3> ^handle <n1>)
    -->
    (<s4> ^instance <i8> +)
    (<i8> ^2 <i6> + ^1 <i4> +)
}

sp {chunk*with-attribute*apply*complete*instance*t1890-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^objects <o1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^name object ^type attribute ^attribute primitive
          ^args <a3> ^negative <n1> ^parameter <p1> ^result <r1>)
    (<a3> -^1 <i1>)
    (<r1> ^set <s2>)
    (<o1> ^object <o2>)
    (<o2> -^handle self)
    -->
    (<s2> ^instance <i2> +)
    (<i2> ^1 <o2> +)
}

sp {chunk*top-pair*apply*complete*t1896-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^negative true ^type state-pair ^args <a3>
          ^parameter <p2> ^result <r2> ^name <n2> ^attribute <a4>)
    (<a3> ^num 2 ^1 <i1> ^2 <i2>)
    (<i1> -^rtype set ^result <r1>)
    (<p2> ^num { <n1> < 2 })
    (<r1> ^set <s2>)
    (<s2> ^instance <i3>)
    (<i3> ^1 <i4>)
    (<r2> ^set <s3>)
    (<p1> ^predicate <p3>)
   -{ (<p3> ^instance <i5>)
      (<i5> ^1 <i4> ^2 <i6>)
      (<i2> ^result <r3>)
      (<r3> ^set <s4>)
      (<s4> ^instance <i7>)
      (<i7> ^1 <i6>)}
    (<p3> ^handle <n2>)
    -->
    (<s3> ^instance <i8> +)
    (<i8> ^1 <i4> +)
}

sp {chunk*attribute-of*apply*complete*t3380-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^type attribute-of ^parameter <p1> ^args <a3> ^negative <n1>
          ^result <r2> ^result <r3> ^name <n2>)
    (<p1> ^num 2)
    (<a3> ^num 1 ^2 <i1>)
    (<i1> -^rtype set ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i2>)
    (<i2> ^1 <i3>)
    (<i3> ^predicates <p2>)
    (<r2> ^set <s3>)
    (<r3> ^set <s4>)
    (<p2> ^<n2> <n3>)
    -->
    (<s4> ^instance <i4> +)
    (<i4> ^2 <i3> + ^1 <n3> +)
}

sp {chunk*top-pair*apply*complete*t4508-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^negative false ^type state-pair ^parameter <p2>
          ^args <a3> ^result <r2> ^name <n1> ^attribute <a8>)
    (<p2> ^num 1)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<i1> -^rtype set)
    (<i2> ^rtype set ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i3>)
    (<i3> ^1 <i4>)
   -{ (<i4> -^<a4> <a5>)
      (<s1> ^<a6> <a7>)}
    (<r2> ^set <s3>)
    (<p1> ^predicate <p3>)
   -{ (<i4> ^<a9> <a10>)
     -{ (<p3> ^instance <i5>)
        (<i5> ^1 <a10> ^2 <i6>)
        (<i1> ^result <r3>)
        (<r3> ^set <s4>)
        (<s4> ^instance <i7>)
        (<i7> ^1 <i6>)}}
    (<p3> ^handle <n1>)
    -->
    (<s3> ^instance <i8> +)
    (<i8> ^1 <i4> +)
}

sp {chunk*top-pair*apply*complete*t3934-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^negative false ^type state-pair ^parameter <p1>
          ^args <a3> ^result <r2> ^name <n1> ^attribute <a4>)
    (<p1> ^num 2)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<i1> -^rtype set ^result <r1>)
    (<i2> -^rtype set)
    (<r1> ^set <s2>)
    (<s2> ^instance <i3>)
    (<i3> ^1 <i4>)
    (<r2> ^set <s3>)
    -->
    (<s3> ^instance <i5> +)
    (<i5> ^2 <i4> + ^1 <i6> +)
}

sp {chunk*soar-compare*greater*OpNoChange*t2479-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function soar-greater ^type function ^parameter <p1> ^args <a3>
          ^negative <n1> ^result <r3> ^name <n2>)
    (<p1> ^num 1)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<i1> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i3>)
    (<i3> ^1 <i4>)
    (<i2> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i5>)
    (<i5> ^1 { <i6> > <i4> })
    (<r3> ^set <s4>)
    -->
    (<s4> ^instance <i7> +)
    (<i7> ^1 <i6> +)
}

sp {chunk*top-pair*with-type*1param*set*noarg-set1*apply*OpNoChange*t2468-2
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^negative false ^type state-pair ^parameter <p2>
          ^args <a3> ^result <r4> ^name <n1> ^attribute <a4>)
    (<p2> ^num 2)
    (<a3> ^num 2 ^2 <i1> ^1 <i2> ^2 <i3> ^1 <i4>)
    (<i1> -^rtype set ^result <r3>)
    (<i2> -^rtype set ^result <r2>)
    (<i3> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i5>)
    (<i5> ^1 <i6>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i7>)
    (<i7> ^1 <i8>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i9>)
    (<i9> ^1 <i10>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i11>)
    (<i11> ^2 <i10> ^1 <i12>)
    (<p1> ^predicate <p3>)
    (<p3> ^handle <n1> ^instance <i13>)
    (<i13> ^2 <i10> ^1 <i8>)
    -->
    (<i12> ^object <i8> +)
}

sp {chunk*soar-count*apply*complete*t2474-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function soar-count ^type function ^parameter <p1> ^args <a3>
          ^negative <n1> ^result <r2> ^name <n2>)
    (<p1> ^num 2)
    (<a3> ^num 1 ^2 <i1>)
    (<i1> ^rtype set ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i2>)
    (<i2> ^1 <i3>)
   -{ (<i3> -^<a4> <a5>)
      (<s1> ^<a6> <a7>)}
    (<r2> ^set <s3>)
    -->
    (<s3> ^instance <i4> +)
    (<i4> ^1 (size <i3>) + ^2 <i3> +)
}

sp {chunk*board-between*elaborate*instances*samexy*set*OpNoChange*t4085-2
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype set ^name between ^type function
          ^args <a3> ^negative <n1> ^parameter <p1> ^result <r6>)
    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
    (<i1> ^rtype set ^result <r5>)
    (<i2> ^result <r1> ^result <r2>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i4>)
    (<i4> ^1 <i5>)
    (<i5> ^predicates <p2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i6>)
    (<i6> ^1 <i7>)
    (<i3> ^result <r3> ^result <r4>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i8>)
    (<i8> ^1 <i9>)
    (<i9> ^predicates <p3>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i10>)
    (<i10> ^1 { <i11> <> <i7> })
    (<r5> ^set <s6>)
    (<s6> ^instance <i12>)
    (<i12> ^1 <i13>)
    (<r6> ^set <s7>)
    (<s7> ^instance <i14>)
    (<i14> ^3 <i5> ^2 <i9> ^1 <i15>)
    (<p2> ^{ <a4> << x y >> } <a5> ^{ <a8> <> <a4> << x y >> } <a9>)
    (<p3> ^<a4> <a5> ^<a8> <a10>)
    (<i13> ^<a6> <a7>)
    (<a7> ^predicates <p4>)
    (<p4> ^<a4> <a5>)
   -{ (<p4> ^<a8> { <a11> <= <a9> <= <a10> } ^<a8> <a11>)}
   -{ (<p4> ^<a8> { <a12> >= <a9> >= <a10> } ^<a8> <a12>)}
    -->
    (<i15> ^object <a7> +)
}

sp {chunk*with-attribute*apply*complete*instance*objects*OpNoChange*t4079-2
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^type attribute ^negative <n1> ^parameter <p1> ^args <a3>
          ^result <r2> ^attribute <i5> ^name <i6>)
    (<a3> ^1 <i1>)
    (<i1> -^rtype set ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i2>)
    (<i2> ^1 <i3>)
    (<i3> ^predicates <p2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i4>)
    (<i4> ^3 <i5> ^2 <i6> ^1 <i7>)
    (<p2> ^<i5> <i6>)
    -->
    (<i7> ^object <i3> +)
}

sp {chunk*with-attribute*apply*complete*instance*t1507-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^type attribute ^negative <n1> ^parameter <p1>
          ^args <a3> ^result <r2> ^name <n3> ^attribute <a4>)
    (<p1> ^num { <n2> < 2 })
    (<a3> ^1 <i1>)
    (<i1> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i2>)
    (<i2> ^1 <i3>)
    (<i3> ^predicates <p2>)
    (<r2> ^set <s3>)
    (<p2> ^<a4> <n3>)
    -->
    (<s3> ^instance <i4> +)
    (<i4> ^1 <i3> +)
}

sp {chunk*top-pair*apply*complete*t2935-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^negative false ^type state-pair ^args <a3>
          ^parameter <p2> ^result <r3> ^name <n2> ^attribute <a4>)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<i1> -^rtype set ^result <r2>)
    (<i2> -^rtype set ^result <r1>)
    (<p2> ^num { <n1> < 2 })
    (<r1> ^set <s2>)
    (<s2> ^instance <i3>)
    (<i3> ^1 <i4>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i5>)
    (<i5> ^1 <i6>)
    (<r3> ^set <s4>)
    (<p1> ^predicate <p3>)
    (<p3> ^handle <n2> ^instance <i7>)
    (<i7> ^2 <i6> ^1 <i4>)
    -->
    (<s4> ^instance <i8> +)
    (<i8> ^1 <i4> +)
}



