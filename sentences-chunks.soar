sp {chunk*apply*finish-comprehend*t13487-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling |string test|)}
    (<w1> ^spelling |string test|)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13472-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^quoted true ^spelling <c1>)
    (<s1> ^current-word <w1>)
    -->
    (<s1> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^not-merged-receiver <i1> +)
    (<i1> ^semantics <s3> + ^lt <i2> + ^structure-type DP +
           ^lt-referent <r1> + ^current-word <w1> +)
    (<i2> ^referent <r1> + ^spelling <c1> + ^structure-type DP +)
    (<r1> ^sentence <c1> +
           ^handle (make-constant-symbol string-object-handle) +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13466-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling say)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S48 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> + ^not-merged-assigner <n7> +)
    (@S48 ^super-type @T999 + ^tense present + ^referent @A1116 +
           ^spelling say +)
    (<n1> ^structure-type PP + ^parent-receiver <i1> + ^lt @V31 +
           ^current-word <w1> +)
    (<n2> ^structure-type DP + ^parent-receiver <i1> + ^lt @V27 +
           ^current-word <w1> +)
    (<n3> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V26 +
           ^current-word <w1> +)
    (<n4> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V30 +
           ^current-word <w1> +)
    (<n5> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V32 +
           ^current-word <w1> +)
    (<n6> ^structure-type DP + ^parent-receiver <i1> + ^lt @V29 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T999 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n8> +)
    (<p1> ^spelling say + ^referent @A1116 + ^tense present + ^copied yes +
           ^number singular + ^att test + ^structure-type V +
           ^assigners @V32 + ^assigners @V31 + ^assigners @V30 +
           ^assigners @V29 + ^assigners @V28 + ^assigners @V27 +
           ^assigners @V26 + ^semantic-structure action + ^converts-to VP +)
    (@A1116 ^procedural @E7 + ^handle say + ^type action +)
    (@E7 ^op_name initiate-say1 +)
    (<n8> ^type action + ^handle say + ^procedural @E7 +)
    (<n7> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V28 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13433-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling |string test|)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i2>)
    (<i2> -^merged-with true ^lt <i1>)
    (<i1> ^structure-type CP ^spelling |string test|)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i3> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i3> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13421-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^quoted true ^next <w1> ^spelling <c2> ^spelling <c1>)
    (<s1> ^current-word <w2> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<w1> ^spelling |.|)
    -->
    (<s1> ^comprehension-structure <c3> +)
    (<c3> ^processed true + ^type word + ^not-merged-receiver <i1> +)
    (<i1> ^semantics <s3> + ^lt <i2> + ^structure-type CP +
           ^lt-referent <r1> + ^current-word <w2> +)
    (<i2> ^referent <r1> + ^semantic-structure arg1 +
           ^message-type quoted-sentence + ^spelling <c1> +
           ^structure-type CP +)
    (<r1> ^sentence <c1> +
           ^handle (make-constant-symbol string-object-handle) +)
    (<w2> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t13312-1
    :chunk
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o1> ^constraint-count 3 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <p5> ^constraint <n1> ^constraint <n2> ^constraint <n3>)
    (<p5> -^demonstrative true ^specifier { << definite universal >> <c8> })
    (<s2> ^dialog-world <w1>)
    (<w1> ^objects <o2>)
    (<n3> ^handle <c10> ^property <p3>)
    (<n2> ^handle { < <c10> <c9> } ^property <p2>)
    (<n1> ^handle { < <c9> < <c10> <c7> } ^property <p1>)
    (<p3> ^{ << name handle >> <c5> } <c6>)
    (<p2> ^{ << name handle >> <c3> } <c4>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    (<o2> ^object <p6>)
    (<p6> -^dialog-ignore true ^predicates <p4>)
    (<p4> ^<c4> <c9> ^<c6> <c10> ^<c2> <c7>)
    -->
    (<i1> ^referent <p6> +)
}

sp {chunk*apply*finish-comprehend*t13295-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling small)}
    (<w1> ^spelling small)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling green)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10001 +
           ^not-merged-receiver <i2> +)
    (@G10001 ^attachment immediate + ^referent @P1004 + ^structure-type ADJ +
           ^spelling green +)
    (@P1004 ^property @P1000 + ^item-type predicate + ^handle green1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @G10001 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle green1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13269-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling carefully)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling pick)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <c1> ^lt <c3> ^lt <c2>)
    (<c1> ^structure-type ADV)
    (<c3> ^structure-type ADV)
    (<c2> ^spelling carefully)
    -->
    (<s2> ^comprehension-structure <c4> +)
    (<c4> ^processed true + ^type word + ^retrieved-lexical-item @P90120 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +)
    (@P90120 ^super-type @T998 + ^can-be-part-of pick-up + ^referent @A1001 +
           ^spelling pick +)
    (<n1> ^structure-type CONJP + ^parent-receiver <i2> + ^lt @V36 +
           ^current-word <w2> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V37 +
           ^current-word <w2> +)
    (<n3> ^structure-type DP + ^parent-receiver <i2> + ^lt @V35 +
           ^current-word <w2> +)
    (<n4> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V34 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p1> + ^super-type @T998 +
           ^current-word <w2> + ^lt <p1> + ^structure-type V +
           ^lt-referent <n6> +)
    (@T998 ^converts-to VP + ^semantic-structure action + ^assigners @V37 +
           ^assigners @V36 + ^assigners @V35 + ^assigners @V34 +
           ^assigners @V33 + ^tense present + ^structure-type V + ^att test +
           ^number singular +)
    (<p1> ^spelling pick + ^referent @A1001 + ^can-be-part-of pick-up +
           ^copied yes + ^number singular + ^att test + ^structure-type V +
           ^tense present + ^assigners @V37 + ^assigners @V36 +
           ^assigners @V35 + ^assigners @V34 + ^assigners @V33 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1001 ^procedural @P90003 + ^action-type primitive + ^item-type action +
           ^handle pick-up1 +)
    (@V37 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V36 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V35 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V35 ^relative-position after + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@V34 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@P90003 ^op_name initiate-pick-up1 + ^arg1 @P90004 +)
    (@P90004 ^arg-type object + ^arg-status real + ^id @O2 +)
    (<n6> ^handle pick-up1 + ^item-type action + ^action-type primitive +
           ^procedural @P90003 +)
    (@V33 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n5> ^structure-type V-AUX + ^parent-receiver <i2> + ^lt @V33 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13252-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling carefully)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C59 +
           ^not-merged-receiver <i1> +)
    (@C59 ^referent @C60 + ^structure-type ADV + ^spelling carefully +)
    (@C60 ^handle careful1 +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @C59 + ^current-word <w1> +
           ^structure-type ADV + ^lt-referent <n1> +)
    (<n1> ^handle careful1 +)
    (<w1> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t13208-1
    :chunk
    (state <s2> ^top-state <s3> ^operator <o1>)
   -{ (<s2> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o1> ^constraint-count 1 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <s1> ^constraint <n1>)
    (<s1> -^specifier <s*1> -^demonstrative true)
    (<s3> ^dialog-world <w1>)
    (<w1> ^objects <o2>)
    (<n1> ^handle <c3> ^property <p1>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    (<o2> ^object <p3>)
    (<p3> -^dialog-ignore true ^predicates <p2>)
    (<p2> ^<c2> <c3>)
    -->
    (<i1> ^referent <p3> +)
}

sp {chunk*apply*finish-comprehend*t13200-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling locations)}
    (<w1> ^spelling locations)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type P-N-X)
    (<s2> ^structure-type P-N-X)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s5> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13185-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o4>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling on)
    (<o4> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling locations)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <o1> ^lt <o3> ^lt <o2>)
    (<o1> ^structure-type P)
    (<o3> ^structure-type P)
    (<o2> ^spelling on)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L13 +
           ^not-merged-receiver <i2> +)
    (@L13 ^syntactic-referent-type DP + ^referent @P7005 + ^structure-type N +
           ^spelling locations + ^number plural +)
    (@P7005 ^multiple true + ^property @P7000 + ^handle location +)
    (<i2> ^semantics <s3> + ^lt @L13 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle location + ^property @P7000 + ^multiple true +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13113-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling locations)}
    (<w1> ^spelling locations)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type P-ADJ-X)
    (<s2> ^structure-type P-ADJ-X)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s5> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13100-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling clear)}
    (<w1> ^spelling clear)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling locations)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type P-ADJ-X)
    (<s2> ^structure-type P-ADJ-X)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L13 +
           ^not-merged-receiver <i2> +)
    (@L13 ^syntactic-referent-type DP + ^referent @P7005 + ^structure-type N +
           ^spelling locations + ^number plural +)
    (@P7005 ^multiple true + ^property @P7000 + ^handle location +)
    (<i2> ^semantics <s5> + ^lt @L13 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle location + ^property @P7000 + ^multiple true +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t13087-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type P)
    (<i2> ^structure-type ADJ)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @S68 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> +)
    (<x1> ^prior-word-first false + ^prior-word P + ^current-word ADJ +)
    (<n1> ^structure-type ADJ + ^parent-receiver <i3> + ^lt @T9030 +
           ^current-word @S68 +)
    (<n2> ^structure-type N + ^parent-receiver <i3> + ^lt @T9031 +
           ^current-word @S68 +)
    (<i3> ^lt @S68 + ^current-word @S68 + ^structure-type P-ADJ-X +)
    (@S68 ^processed true + ^converts-to DP + ^assigners @T9032 +
           ^assigners @T9031 + ^assigners @T9030 + ^prior-word-first false +
           ^construction P-ADJ + ^prior-word P + ^current-word ADJ +
           ^structure-type P-ADJ-X + ^number singular +)
    (@T9030 ^repeatable true + ^before @T9031 + ^syntactic-structure adjoin +
           ^structure-type ADJ +)
    (@T9032 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type PP +)
    (@T9031 ^before @T9032 + ^syntactic-structure head + ^required true +
           ^structure-type N +)
    (<n3> ^structure-type PP + ^parent-receiver <i3> + ^lt @T9032 +
           ^current-word @S68 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t13075-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o4>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling on)
    (<o4> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling clear)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <o1> ^lt <o3> ^lt <o2>)
    (<o1> ^structure-type P)
    (<o3> ^structure-type P)
    (<o2> ^spelling on)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C36 +
           ^not-merged-receiver <i2> +)
    (@C36 ^referent @C37 + ^structure-type ADJ + ^spelling clear +)
    (@C37 ^property @C38 + ^handle clear +)
    (<i2> ^semantics <s3> + ^lt @C36 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle clear + ^property @C38 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13046-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling blocks)}
    (<w1> ^spelling blocks)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling are)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10053 +
           ^not-merged-receiver <i2> +)
    (@A10053 ^tense present + ^structure-type IS-V + ^spelling are +
           ^number plural +)
    (<i2> ^semantics <s4> + ^lt @A10053 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13033-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling captured)}
    (<w1> ^spelling captured)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling blocks)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B14 +
           ^not-merged-receiver <i2> +)
    (@B14 ^referent @P7004 + ^structure-type N + ^spelling blocks +
           ^number plural +)
    (@P7004 ^multiple true + ^property @P7000 + ^handle block +)
    (@P7000 ^item-type property + ^handle category + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @B14 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle block + ^property @P7000 + ^multiple true +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t13020-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling captured)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C46 +
           ^not-merged-receiver <i2> +)
    (@C46 ^referent @C47 + ^structure-type ADJ + ^spelling captured +)
    (@C47 ^property @C38 + ^handle captured +)
    (@C38 ^handle property + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @C46 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle captured + ^property @C38 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12979-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling square)}
    (<w1> ^spelling square)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12966-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling captured)}
    (<w1> ^spelling captured)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling square)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S35 +
           ^not-merged-receiver <i2> +)
    (<i2> ^semantics <s3> + ^lt @S35 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle square1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12950-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling and)}
    (<w1> ^spelling and)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type P)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (<p2> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12914-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling clear)}
    (<w1> ^spelling clear)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling square)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S35 +
           ^not-merged-receiver <i2> +)
    (@S35 ^referent @P2003 + ^structure-type N + ^spelling square +
           ^number signular +)
    (@P2003 ^property @P2000 + ^item-type predicate + ^handle square1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @S35 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle square1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12895-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling are)}
    (<w1> ^spelling are)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling between)
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B27 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +)
    (@B27 ^super-type @T9001 + ^attachment immediate + ^spelling between +
           ^relation @R1022 +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90111 +
           ^current-word <w2> +)
    (<n2> ^structure-type CONJ + ^parent-receiver <i2> + ^lt @P90110 +
           ^current-word <w2> +)
    (<i2> ^semantics <s6> + ^proto-lt <p1> + ^super-type @T9001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type P +)
    (@T9001 ^relation-type ternary + ^converts-to PP + ^assigners @P90111 +
           ^assigners @P90110 + ^assigners @P90109 + ^structure-type P +)
    (<p1> ^spelling between + ^relation @R1022 + ^attachment immediate +
           ^copied yes + ^structure-type P + ^assigners @P90111 +
           ^assigners @P90110 + ^assigners @P90109 + ^converts-to PP +
           ^relation-type ternary +)
    (@R1022 ^handle between +)
    (@P90109 ^relative-position after + ^before @P90111 + ^before @P90110 +
           ^syntactic-structure head + ^required true + ^structure-type DP +)
    (@P90111 ^relative-position after + ^syntactic-structure complement +
           ^required true + ^structure-type DP +)
    (@P90110 ^before @P90111 + ^syntactic-structure CONJ + ^required true +
           ^structure-type CONJ +)
    (<n3> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90109 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12866-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling locations)}
    (<w1> ^spelling locations)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling are)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10053 +
           ^not-merged-receiver <i2> +)
    (@A10053 ^tense present + ^structure-type IS-V + ^spelling are +
           ^number plural +)
    (<i2> ^semantics <s4> + ^lt @A10053 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12853-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling enemy)}
    (<w1> ^spelling enemy)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling locations)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L13 +
           ^not-merged-receiver <i2> +)
    (@L13 ^syntactic-referent-type DP + ^referent @P7005 + ^structure-type N +
           ^spelling locations + ^number plural +)
    (@P7005 ^multiple true + ^property @P7000 + ^handle location +)
    (@P7000 ^item-type property + ^handle category + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @L13 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle location + ^property @P7000 + ^multiple true +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12840-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling enemy)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @E17 +
           ^not-merged-receiver <i2> +)
    (@E17 ^referent @E18 + ^structure-type ADJ + ^spelling enemy +)
    (@E18 ^property @C38 + ^handle enemy +)
    (@C38 ^handle property + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @E17 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle enemy + ^property @C38 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12665-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling and)}
    (<w1> ^spelling and)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type P)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12616-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling purple)}
    (<w1> ^spelling purple)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling triangle)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1010 +
           ^not-merged-receiver <i2> +)
    (@T1010 ^referent @P2001 + ^structure-type N + ^spelling triangle +
           ^number singular +)
    (@P2001 ^property @P2000 + ^item-type predicate + ^handle triangle1 +)
    (<i2> ^semantics <s3> + ^lt @T1010 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle triangle1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12600-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling between)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling between)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*retry-create-receiver*create-item*onc*t12518-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retried-sentence true ^retry <i1>)
    (<i1> -^lt @A10098 ^lt <a1> ^structure-type { <> CONJ <c1> } ^lt <a2>)
    (<a1> ^alternative-structure CONJ)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling and)
    -->
    (<s1> ^retry <i1> - ^parse-failed-end-of-sentence true - ^retried <i1> +)
    (<w1> ^processed true +)
    (<i1> ^lt @A10098 + ^lt <a2> - ^structure-type CONJ +
           ^structure-type <c1> -)
    (@A10098 ^merge-delay true + ^super-converts-to CONJP +
           ^semantic-structure conjunction + ^alternative-structure CP-CONJ +
           ^structure-type CONJ + ^spelling and +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete2*onc*t12510-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s4>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type C ^current-word <s1> ^current-word <s2>)
    (<i2> ^structure-type T)
    (<s1> ^first-word true)
    (<s2> ^first-word true)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete*onc*t12505-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*1>)
      (<c*1> ^first-word true)}
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type CP-CONJ)
    (<i2> ^structure-type T)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete*onc*t12496-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*1>)
      (<c*1> ^first-word true)}
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type DP)
    (<i2> ^structure-type T)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*apply*finish-comprehend*t12478-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling captured)}
    (<w1> ^spelling captured)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling location)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L12 +
           ^not-merged-receiver <i2> +)
    (<i2> ^semantics <s3> + ^lt @L12 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle location + ^property @P7000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12465-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling captured)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C46 +
           ^not-merged-receiver <i2> +)
    (@C46 ^referent @C47 + ^structure-type ADJ + ^spelling captured +)
    (@C47 ^property @C38 + ^handle captured +)
    (<i2> ^semantics <s3> + ^lt @C46 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle captured + ^property @C38 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12453-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling and)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <a1> ^lt <a3> ^lt <a2>)
    (<a1> ^structure-type CP-CONJ)
    (<a3> ^structure-type CP-CONJ)
    (<a2> ^spelling and)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n4> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (<p1> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete2*onc*t12437-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s4>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type C ^current-word <s1> ^current-word <s2>)
    (<i2> ^structure-type CP-CONJ)
    (<s1> ^first-word true)
    (<s2> ^first-word true)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete*onc*t12432-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*1>)
      (<c*1> ^first-word true)}
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type P)
    (<i2> ^structure-type CP-CONJ)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*apply*finish-comprehend*t12406-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling clear)}
    (<w1> ^spelling clear)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling location)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L12 +
           ^not-merged-receiver <i2> +)
    (@L12 ^syntactic-referent-type DP + ^referent @P7002 + ^structure-type N +
           ^spelling location + ^number singular +)
    (@P7002 ^property @P7000 + ^handle location +)
    (@P7000 ^item-type property + ^handle category + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @L12 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle location + ^property @P7000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12393-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling clear)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C36 +
           ^not-merged-receiver <i2> +)
    (@C36 ^referent @C37 + ^structure-type ADJ + ^spelling clear +)
    (@C37 ^property @C38 + ^handle clear +)
    (@C38 ^handle property + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @C36 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle clear + ^property @C38 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12381-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling between)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling between)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (<p2> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12365-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling between)
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B27 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +)
    (@B27 ^super-type @T9001 + ^attachment immediate + ^spelling between +
           ^relation @R1022 +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90111 +
           ^current-word <w2> +)
    (<n2> ^structure-type CONJ + ^parent-receiver <i2> + ^lt @P90110 +
           ^current-word <w2> +)
    (<i2> ^semantics <s6> + ^proto-lt <p1> + ^super-type @T9001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type P +)
    (@T9001 ^relation-type ternary + ^converts-to PP + ^assigners @P90111 +
           ^assigners @P90110 + ^assigners @P90109 + ^structure-type P +)
    (<p1> ^spelling between + ^relation @R1022 + ^attachment immediate +
           ^copied yes + ^structure-type P + ^assigners @P90111 +
           ^assigners @P90110 + ^assigners @P90109 + ^converts-to PP +
           ^relation-type ternary +)
    (@R1022 ^handle between +)
    (@P90109 ^relative-position after + ^before @P90111 + ^before @P90110 +
           ^syntactic-structure head + ^required true + ^structure-type DP +)
    (@P90111 ^relative-position after + ^syntactic-structure complement +
           ^required true + ^structure-type DP +)
    (@P90110 ^before @P90111 + ^syntactic-structure CONJ + ^required true +
           ^structure-type CONJ +)
    (<n3> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90109 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12105-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling then)}
    (<w1> ^spelling then)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling pick)
    (<s1> ^item <i2>)
    (<i2> ^lt <i1> ^lt <i3>)
    (<i1> ^structure-type C)
    (<i3> ^structure-type C)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @P90120 +
           ^not-merged-receiver <i4> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +)
    (@P90120 ^super-type @T998 + ^can-be-part-of pick-up + ^referent @A1001 +
           ^spelling pick +)
    (<n1> ^structure-type CONJP + ^parent-receiver <i4> + ^lt @V36 +
           ^current-word <w2> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i4> + ^lt @V34 +
           ^current-word <w2> +)
    (<n3> ^structure-type V-AUX + ^parent-receiver <i4> + ^lt @V33 +
           ^current-word <w2> +)
    (<n4> ^structure-type DP + ^parent-receiver <i4> + ^lt @V35 +
           ^current-word <w2> +)
    (<i4> ^semantics <s4> + ^proto-lt <p1> + ^super-type @T998 +
           ^current-word <w2> + ^lt <p1> + ^structure-type V +
           ^lt-referent <n6> +)
    (@T998 ^converts-to VP + ^semantic-structure action + ^assigners @V37 +
           ^assigners @V36 + ^assigners @V35 + ^assigners @V34 +
           ^assigners @V33 + ^tense present + ^structure-type V + ^att test +
           ^number singular +)
    (<p1> ^spelling pick + ^referent @A1001 + ^can-be-part-of pick-up +
           ^copied yes + ^number singular + ^att test + ^structure-type V +
           ^tense present + ^assigners @V37 + ^assigners @V36 +
           ^assigners @V35 + ^assigners @V34 + ^assigners @V33 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1001 ^procedural @P90003 + ^action-type primitive + ^item-type action +
           ^handle pick-up1 +)
    (@V36 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V35 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V35 ^relative-position after + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@V34 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V33 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (@P90003 ^op_name initiate-pick-up1 + ^arg1 @P90004 +)
    (@P90004 ^arg-type object + ^arg-status real + ^id @O2 +)
    (<n6> ^handle pick-up1 + ^item-type action + ^action-type primitive +
           ^procedural @P90003 +)
    (@V37 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n5> ^structure-type ADV + ^parent-receiver <i4> + ^lt @V37 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12057-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling soda)}
    (<w1> ^spelling soda)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling then)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10026 +
           ^not-merged-receiver <i2> +)
    (@T10026 ^structure-type THEN + ^spelling then +)
    (<i2> ^semantics <s3> + ^lt @T10026 + ^current-word <w2> +
           ^structure-type THEN +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t12044-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling soda)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S39 +
           ^not-merged-receiver <i2> +)
    (@S39 ^referent @P2010 + ^structure-type N + ^spelling soda +
           ^number singular +)
    (@P2010 ^property @P2000 + ^item-type predicate + ^handle soda1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @S39 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle soda1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete2*onc*t12007-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type C ^current-word <w1>)
    (<i2> ^structure-type DP)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*apply*finish-comprehend*t12000-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling if)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling you)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i2>)
    (<i2> -^merged-with true ^lt <i1> ^lt <i4> ^lt <i3>)
    (<i1> ^structure-type C)
    (<i4> ^structure-type C)
    (<i3> ^spelling if)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @Y10007 +
           ^not-merged-receiver <i5> +)
    (@Y10007 ^super-converts-to CP + ^specifier personal + ^referent @I114 +
           ^structure-type DP + ^spelling you + ^number singular +)
    (@I114 ^property @P90124 + ^handle rosie +)
    (@P90124 ^handle handle + ^type visual +)
    (<i5> ^semantics <s4> + ^lt @Y10007 + ^current-word <w2> +
           ^structure-type DP + ^lt-referent <n1> +)
    (<n1> ^handle rosie + ^property @P90124 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t11962-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type VP)
    (<i2> ^structure-type T)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @V4 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> +)
    (<x1> ^prior-word-first false + ^prior-word VP + ^current-word T +)
    (<i3> ^lt @V4 + ^current-word @V4 + ^structure-type C +)
    (@V4 ^processed true + ^converts-to CP + ^message-type command +
           ^assigners @A10037 + ^prior-word-first false + ^construction VP-T +
           ^prior-word VP + ^current-word T + ^structure-type C +)
    (@A10037 ^syntactic-structure predicate + ^semantic-structure *copy* +
           ^required true + ^structure-type VP +)
    (<n1> ^structure-type VP + ^parent-receiver <i3> + ^lt @A10037 +
           ^current-word @V4 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete2*onc*t11939-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type C ^current-word <w1>)
    (<i2> ^structure-type V)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*apply*finish-comprehend*t11932-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling then)}
    (<w1> ^spelling then)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling go)
    (<s1> ^item <i2>)
    (<i2> ^lt <i1> ^lt <i3>)
    (<i1> ^structure-type C)
    (<i3> ^structure-type C)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10013 +
           ^not-merged-receiver <i4> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +)
    (@G10013 ^super-type @T992 + ^referent @A1103 + ^spelling go +)
    (<n1> ^structure-type ADV + ^parent-receiver <i4> + ^lt @V69 +
           ^current-word <w2> +)
    (<n2> ^structure-type DP + ^parent-receiver <i4> + ^lt @V65 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i4> + ^lt @V68 +
           ^current-word <w2> +)
    (<n4> ^structure-type UNTIL-PP + ^parent-receiver <i4> + ^lt @V66 +
           ^current-word <w2> +)
    (<i4> ^semantics <s4> + ^proto-lt <p1> + ^super-type @T992 +
           ^current-word <w2> + ^lt <p1> + ^structure-type V +
           ^lt-referent <n6> +)
    (@T992 ^converts-to VP + ^semantic-structure action + ^assigners @V69 +
           ^assigners @V68 + ^assigners @V67 + ^assigners @V66 +
           ^assigners @V65 + ^tense present + ^structure-type V +
           ^number singular +)
    (<p1> ^spelling go + ^referent @A1103 + ^copied yes + ^number singular +
           ^structure-type V + ^tense present + ^assigners @V69 +
           ^assigners @V68 + ^assigners @V67 + ^assigners @V66 +
           ^assigners @V65 + ^semantic-structure action + ^converts-to VP +)
    (@A1103 ^procedural @P90029 + ^action-type primitive + ^item-type action +
           ^handle go-to-location1 +)
    (@V69 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V65 ^referent-type literal + ^optional true + ^relative-position after +
           ^before @V68 + ^before @V66 + ^syntactic-structure head +
           ^semantic-structure arg1 + ^structure-type DP +)
    (@V68 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure relation +
           ^structure-type PP +)
    (@V66 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^semantic-structure arg2 +
           ^structure-type UNTIL-PP +)
    (@P90029 ^arg2 @P90030 + ^op_name initiate-go-to-location1 +)
    (@P90030 ^arg-type predicate + ^arg-status imagined + ^2 @O14 +
           ^id @P90031 +)
    (<n6> ^handle go-to-location1 + ^item-type action +
           ^action-type primitive + ^procedural @P90029 +)
    (@V67 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n5> ^structure-type ADV + ^parent-receiver <i4> + ^lt @V67 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete*onc*t11912-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*1>)
      (<c*1> ^first-word true)}
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type CP)
    (<i2> ^structure-type THEN)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*apply*finish-comprehend*t11904-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling large)}
    (<w1> ^spelling large)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling then)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10026 +
           ^not-merged-receiver <i2> +)
    (@T10026 ^structure-type THEN + ^spelling then +)
    (<i2> ^semantics <s5> + ^lt @T10026 + ^current-word <w2> +
           ^structure-type THEN +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11890-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling large)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L5 +
           ^not-merged-receiver <i2> +)
    (@L5 ^attachment immediate + ^referent @P3003 + ^structure-type ADJ +
           ^spelling large +)
    (@P3003 ^property @P3000 + ^item-type predicate + ^handle large1 +)
    (@P3000 ^item-type property + ^handle size + ^type visual +)
    (<i2> ^semantics <s5> + ^lt @L5 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle large1 + ^item-type predicate + ^property @P3000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11855-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling box)}
    (<w1> ^spelling box)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s3> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete2*onc*t11831-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type C ^current-word <w1>)
    (<i2> ^structure-type D)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*apply*finish-comprehend*t11824-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling if)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i2>)
    (<i2> -^merged-with true ^lt <i1> ^lt <i4> ^lt <i3>)
    (<i1> ^structure-type C)
    (<i4> ^structure-type C)
    (<i3> ^spelling if)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i5> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type PP + ^parent-receiver <i5> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i5> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i5> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i5> ^semantics <s4> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type N + ^parent-receiver <i5> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11808-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling if)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I121 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +)
    (<n1> ^structure-type CP + ^parent-receiver <i1> + ^lt @I122 +
           ^current-word <w1> +)
    (<n2> ^structure-type CP + ^parent-receiver <i1> + ^lt @I124 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @I121 +
           ^current-word <w1> + ^structure-type C +)
    (@I121 ^current-word-first true + ^converts-to CP +
           ^message-type conditional + ^assigners @I124 + ^assigners @I123 +
           ^assigners @I122 + ^structure-type C + ^spelling if +)
    (@I122 ^delay-merge true + ^embed-structure if-subclause +
           ^relative-position after + ^before @I124 + ^before @I123 +
           ^syntactic-structure nil + ^semantic-structure *embed* +
           ^required true + ^structure-type CP +)
    (@I124 ^embed-structure then-subclause + ^syntactic-structure nil +
           ^semantic-structure *embed* + ^required true + ^structure-type CP +)
    (@I123 ^before @I124 + ^syntactic-structure nil + ^required true +
           ^structure-type THEN +)
    (<n3> ^structure-type THEN + ^parent-receiver <i1> + ^lt @I123 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11743-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling green)}
    (<w1> ^spelling green)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling box)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B17 +
           ^not-merged-receiver <i2> +)
    (@B17 ^referent @P2011 + ^structure-type N + ^spelling box +
           ^number singular +)
    (@P2011 ^property @P2000 + ^item-type predicate + ^handle box1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @B17 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle box1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11721-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling larger)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type RC)
    (<s2> ^structure-type RC)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L22 +
           ^not-merged-receiver <i2> +)
    (@L22 ^converts-to C-ADJ-P + ^structure-type C-ADJ + ^spelling bigger +
           ^spelling larger + ^relation @R1015 +)
    (@R1015 ^handle larger-than1 +)
    (<i2> ^semantics <s5> + ^lt @L22 + ^current-word <w2> +
           ^structure-type C-ADJ +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11643-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling stove)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S37 +
           ^not-merged-receiver <i2> +)
    (@S37 ^on-off-state-change true + ^referent @P4023 + ^structure-type N +
           ^spelling stove + ^number singular +)
    (@P4023 ^property @P4000 + ^handle stove +)
    (@P4000 ^item-type property + ^handle name + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @S37 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle stove + ^property @P4000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t11468-1
    :chunk
    (state <s3> ^top-state <s4> ^operator <o1>)
   -{ (<s3> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o1> ^constraint-count 1 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <s1> ^constraint <c2>)
    (<s1> -^specifier <s*1> -^demonstrative true)
    (<s4> ^world <w1>)
    (<w1> ^objects <o5> ^predicates <p1>)
    (<p1> ^predicate <o4>)
    (<o4> ^instance <o2> ^handle <c1>)
    (<o2> ^2 <l1> ^1 <o3>)
    (<o5> ^object <o3>)
    (<c2> ^relation <s2>)
    (<s2> ^2 <l1> ^handle <c1>)
    -->
    (<i1> ^referent <o3> +)
}

sp {chunk*apply*finish-comprehend*t11432-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling on)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type RC)
    (<s2> ^structure-type RC)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O42 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (<i2> ^semantics <s5> + ^lt @O42 + ^current-word <w2> +
           ^structure-type P +)
    (@O42 ^relation-type binary + ^converts-to PP + ^assigners @O43 +
           ^structure-type P + ^spelling on + ^relation @R1000 +)
    (@O43 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @O43 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11352-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling green)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10001 +
           ^not-merged-receiver <i2> +)
    (@G10001 ^attachment immediate + ^referent @P1004 + ^structure-type ADJ +
           ^spelling green +)
    (@P1004 ^property @P1000 + ^item-type predicate + ^handle green1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @G10001 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle green1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11340-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling pick)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling pick)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n1> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11280-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling small)}
    (<w1> ^spelling small)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type RC)
    (<s2> ^structure-type RC)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s5> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11267-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling small)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type RC)
    (<s2> ^structure-type RC)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S10 +
           ^not-merged-receiver <i2> +)
    (@S10 ^attachment immediate + ^referent @P3001 + ^structure-type ADJ +
           ^spelling small +)
    (@P3001 ^property @P3000 + ^item-type predicate + ^handle small1 +)
    (@P3000 ^item-type property + ^handle size + ^type visual +)
    (<i2> ^semantics <s5> + ^lt @S10 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle small1 + ^item-type predicate + ^property @P3000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11251-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling block)}
    (<w1> ^spelling block)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> ^spelling that)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S92 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> + ^not-merged-assigner <n6> +
           ^not-merged-assigner <n7> +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @I120 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADV + ^parent-receiver <i2> + ^lt @I119 +
           ^current-word <w2> +)
    (<n4> ^structure-type IS-V + ^parent-receiver <i2> + ^lt @I115 +
           ^current-word <w2> +)
    (<n5> ^structure-type DP + ^parent-receiver <i2> + ^lt @I116 +
           ^current-word <w2> +)
    (<n6> ^structure-type C-ADJ-P + ^parent-receiver <i2> + ^lt @I118 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^lt @S92 + ^current-word <w2> +
           ^structure-type RC +)
    (@S92 ^converts-to RCP + ^assigners @I120 + ^assigners @I119 +
           ^assigners @I118 + ^assigners @I117 + ^assigners @I116 +
           ^assigners @I115 + ^prior-word-first false +
           ^construction that-is-ADJ/DP/PP/C-ADJP-CONJP/RP + ^prior-word D +
           ^current-word that + ^attachment immediate + ^structure-type RC +)
    (@I119 ^referent-type literal + ^optional true +
           ^relative-position after + ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@I115 ^syntactic-structure predicate + ^required true +
           ^structure-type IS-V +)
    (@I117 ^exclusive @I120 + ^exclusive @I118 + ^exclusive @I116 +
           ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^attachment immediately-follow +
           ^structure-type PP +)
    (@I116 ^referent-type literal + ^exclusive @I120 + ^exclusive @I118 +
           ^exclusive @I117 + ^optional true + ^relative-position after +
           ^syntactic-structure predicate + ^structure-type DP +)
    (@I120 ^referent-type literal + ^exclusive @I118 + ^exclusive @I117 +
           ^exclusive @I116 + ^optional true + ^relative-position after +
           ^syntactic-structure predicate + ^structure-type ADJ +)
    (@I118 ^exclusive @I120 + ^exclusive @I117 + ^exclusive @I116 +
           ^optional true + ^relative-position after +
           ^syntactic-structure predicate + ^structure-type C-ADJ-P +)
    (<n7> ^structure-type PP + ^parent-receiver <i2> + ^lt @I117 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11192-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling box)}
    (<w1> ^spelling box)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11179-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling red)}
    (<w1> ^spelling red)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling box)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B17 +
           ^not-merged-receiver <i2> +)
    (@B17 ^referent @P2011 + ^structure-type N + ^spelling box +
           ^number singular +)
    (@P2011 ^property @P2000 + ^item-type predicate + ^handle box1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @B17 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle box1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11141-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling left)}
    (<w1> ^spelling left)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <t1> ^lt <t4> ^lt <t3> ^lt <t2>)
    (<t1> ^spelling turn-left)
    (<t4> ^structure-type CP)
    (<t3> ^structure-type CP)
    (<t2> ^spelling turn-left)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11127-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^spelling left)
    (<s2> ^prior-word <w1> ^not-merged-receiver <i1> ^retrieved-stack <s1>)
    (<w1> ^first-word true ^spelling <c1>)
    (<i1> -^merged-with true ^lt <t1> ^lt <t2>)
    (<s1> ^item <i1>)
    (<t1> ^spelling turn)
    -->
    (<s2> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^first-word true +
           ^remove-receiver <i1> + ^retrieved-lexical-item @T9008 +
           ^not-merged-receiver <i2> +)
    (@T9008 ^semantic-structure2 arg1 + ^referent2 @P9002 +
           ^message-type command + ^semantic-structure action +
           ^prior-word-first true + ^prior-word turn + ^current-word left +
           ^referent @A1100 + ^structure-type CP + ^spelling turn-left +)
    (@P9002 ^side 1 + ^yaw 1.1 + ^property @P9000 + ^item-type predicate +
           ^handle left1 +)
    (@A1100 ^procedural @P90027 + ^action-type primitive + ^item-type action +
           ^handle turn1 +)
    (@P9000 ^item-type property + ^handle relative-direction1 +)
    (@P90027 ^op_name initiate-turn1 + ^arg1 @P90028 +)
    (@P90028 ^arg-type concept + ^id @C4 +)
    (<i2> ^semantics <s4> + ^lt @T9008 + ^current-word <w2> +
           ^structure-type CP + ^lt-referent2 <n1> + ^lt-referent <n2> +)
    (<n1> ^handle left1 + ^item-type predicate + ^property @P9000 + ^yaw 1.1 +
           ^side 1 +)
    (<n2> ^handle turn1 + ^item-type action + ^action-type primitive +
           ^procedural @P90027 +)
    (<w2> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-lexical-retrieval-assigner-prior-word-stale*onc*t11125-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling left)
    (<s2> ^retrieved-stack <s1> ^not-merged-assigner <n1>)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <t1>)
    (<n1> ^parent-receiver <i1> ^lt <t2>)
    (<t1> ^spelling turn)
    -->
    (<s2> ^not-merged-assigner <n1> -)
}

sp {chunk*apply*finish-comprehend*t11100-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling right)}
    (<w1> ^spelling right)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <t1> ^lt <t4> ^lt <t3> ^lt <t2>)
    (<t1> ^spelling turn-right)
    (<t4> ^structure-type CP)
    (<t3> ^structure-type CP)
    (<t2> ^spelling turn-right)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11086-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^spelling right)
    (<s2> ^prior-word <w1> ^not-merged-receiver <i1> ^retrieved-stack <s1>)
    (<w1> ^first-word true ^spelling <c1>)
    (<i1> -^merged-with true ^lt <t1> ^lt <t2>)
    (<s1> ^item <i1>)
    (<t1> ^spelling turn)
    -->
    (<s2> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^first-word true +
           ^remove-receiver <i1> + ^retrieved-lexical-item @T9009 +
           ^not-merged-receiver <i2> +)
    (@T9009 ^semantic-structure2 arg1 + ^referent2 @P9001 +
           ^message-type command + ^semantic-structure action +
           ^prior-word-first true + ^prior-word turn + ^current-word right +
           ^referent @A1100 + ^structure-type CP + ^spelling turn-right +)
    (@P9001 ^side -1 + ^yaw 1.1 + ^property @P9000 + ^item-type predicate +
           ^handle right1 +)
    (@A1100 ^procedural @P90027 + ^action-type primitive + ^item-type action +
           ^handle turn1 +)
    (@P9000 ^item-type property + ^handle relative-direction1 +)
    (@P90027 ^op_name initiate-turn1 + ^arg1 @P90028 +)
    (@P90028 ^arg-type concept + ^id @C4 +)
    (<i2> ^semantics <s4> + ^lt @T9009 + ^current-word <w2> +
           ^structure-type CP + ^lt-referent2 <n1> + ^lt-referent <n2> +)
    (<n1> ^handle right1 + ^item-type predicate + ^property @P9000 +
           ^yaw 1.1 + ^side -1 +)
    (<n2> ^handle turn1 + ^item-type action + ^action-type primitive +
           ^procedural @P90027 +)
    (<w2> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-lexical-retrieval-assigner-prior-word-stale*onc*t11084-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling right)
    (<s2> ^retrieved-stack <s1> ^not-merged-assigner <n1>)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <t1>)
    (<n1> ^parent-receiver <i1> ^lt <t2>)
    (<t1> ^spelling turn)
    -->
    (<s2> ^not-merged-assigner <n1> -)
}

sp {chunk*apply*finish-comprehend*t11059-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling around)}
    (<w1> ^spelling around)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <t1> ^lt <t4> ^lt <t3> ^lt <t2>)
    (<t1> ^spelling turn-around)
    (<t4> ^structure-type CP)
    (<t3> ^structure-type CP)
    (<t2> ^spelling turn-around)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t11045-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^spelling around)
    (<s2> ^prior-word <w1> ^not-merged-receiver <i1> ^retrieved-stack <s1>)
    (<w1> ^first-word true ^spelling <c1>)
    (<i1> -^merged-with true ^lt <t1> ^lt <t2>)
    (<s1> ^item <i1>)
    (<t1> ^spelling turn)
    -->
    (<s2> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^first-word true +
           ^remove-receiver <i1> + ^retrieved-lexical-item @T9010 +
           ^not-merged-receiver <i2> +)
    (@T9010 ^semantic-structure2 arg1 + ^referent2 @P9003 +
           ^message-type command + ^semantic-structure action +
           ^prior-word-first true + ^prior-word turn + ^current-word around +
           ^referent @A1100 + ^structure-type CP + ^spelling turn-around +)
    (@P9003 ^side -1 + ^yaw 2.7 + ^property @P9000 + ^item-type predicate +
           ^handle around1 +)
    (@A1100 ^procedural @P90027 + ^action-type primitive + ^item-type action +
           ^handle turn1 +)
    (@P9000 ^item-type property + ^handle relative-direction1 +)
    (@P90027 ^op_name initiate-turn1 + ^arg1 @P90028 +)
    (@P90028 ^arg-type concept + ^id @C4 +)
    (<i2> ^semantics <s4> + ^lt @T9010 + ^current-word <w2> +
           ^structure-type CP + ^lt-referent2 <n1> + ^lt-referent <n2> +)
    (<n1> ^handle around1 + ^item-type predicate + ^property @P9000 +
           ^yaw 2.7 + ^side -1 +)
    (<n2> ^handle turn1 + ^item-type action + ^action-type primitive +
           ^procedural @P90027 +)
    (<w2> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-lexical-retrieval-assigner-prior-word-stale*onc*t11043-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling around)
    (<s2> ^retrieved-stack <s1> ^not-merged-assigner <n1>)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <t1>)
    (<n1> ^parent-receiver <i1> ^lt <t2>)
    (<t1> ^spelling turn)
    -->
    (<s2> ^not-merged-assigner <n1> -)
}

sp {chunk*apply*finish-comprehend*t10987-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling forward)}
    (<w1> ^spelling forward)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10973-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling drive)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling forward)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling drive)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @F7 +
           ^not-merged-receiver <i2> +)
    (@F7 ^referent @F8 + ^structure-type ADV + ^spelling forward +)
    (@F8 ^handle forward +)
    (<i2> ^semantics <s4> + ^lt @F7 + ^current-word <w2> +
           ^structure-type ADV + ^lt-referent <n1> +)
    (<n1> ^handle forward +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10942-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling go)}
    (<w1> ^spelling go)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <g1> ^lt <g2>)
    (<g1> ^structure-type CP)
    (<g2> ^structure-type CP)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10930-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^first-word true ^spelling go ^next <w1> ^spelling <c1>)
    (<s1> ^current-word <w2> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<w1> ^spelling |.|)
    -->
    (<s1> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^retrieved-lexical-item @G10014 +
           ^not-merged-receiver <i1> +)
    (@G10014 ^spelling-single-word go + ^message-type command +
           ^semantic-structure action + ^referent @A1103 +
           ^structure-type CP +)
    (@A1103 ^procedural @P90029 + ^action-type primitive + ^item-type action +
           ^handle go-to-location1 +)
    (@P90029 ^arg2 @P90030 + ^op_name initiate-go-to-location1 +)
    (@P90030 ^arg-type predicate + ^arg-status imagined + ^2 @O14 +
           ^id @P90031 +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @G10014 +
           ^current-word <w2> + ^structure-type CP + ^lt-referent <n1> +)
    (<n1> ^handle go-to-location1 + ^item-type action +
           ^action-type primitive + ^procedural @P90029 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10906-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling forward)}
    (<w1> ^spelling forward)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <f1> ^lt <f2>)
    (<f1> ^structure-type CP)
    (<f2> ^structure-type CP)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10894-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^first-word true ^spelling forward ^next <w1> ^spelling <c1>)
    (<s1> ^current-word <w2> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<w1> ^spelling |.|)
    -->
    (<s1> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^retrieved-lexical-item @F20 +
           ^not-merged-receiver <i1> +)
    (@F20 ^spelling-single-word forward + ^message-type command +
           ^semantic-structure action + ^referent @A1103 +
           ^structure-type CP +)
    (@A1103 ^procedural @P90029 + ^action-type primitive + ^item-type action +
           ^handle go-to-location1 +)
    (@P90029 ^arg2 @P90030 + ^op_name initiate-go-to-location1 +)
    (@P90030 ^arg-type predicate + ^arg-status imagined + ^2 @O14 +
           ^id @P90031 +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @F20 + ^current-word <w2> +
           ^structure-type CP + ^lt-referent <n1> +)
    (<n1> ^handle go-to-location1 + ^item-type action +
           ^action-type primitive + ^procedural @P90029 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10853-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling lefty)}
    (<w1> ^spelling lefty)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling wall)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W14 +
           ^not-merged-receiver <i2> +)
    (@W14 ^referent @P12002 + ^structure-type N + ^spelling wall +
           ^number singular +)
    (@P12002 ^property @P12000 + ^item-type predicate + ^handle wall1 +)
    (@P12000 ^item-type property + ^handle spatial-shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @W14 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle wall1 + ^item-type predicate + ^property @P12000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10840-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling lefty)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L31 +
           ^not-merged-receiver <i2> +)
    (@L31 ^referent @L32 + ^structure-type ADJ + ^spelling lefty +)
    (<i2> ^semantics <s3> + ^lt @L31 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10770-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling righty)}
    (<w1> ^spelling righty)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling wall)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W14 +
           ^not-merged-receiver <i2> +)
    (@W14 ^referent @P12002 + ^structure-type N + ^spelling wall +
           ^number singular +)
    (@P12002 ^property @P12000 + ^item-type predicate + ^handle wall1 +)
    (@P12000 ^item-type property + ^handle spatial-shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @W14 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle wall1 + ^item-type predicate + ^property @P12000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10757-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling righty)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10085 +
           ^not-merged-receiver <i2> +)
    (@R10085 ^referent @R10084 + ^structure-type ADJ + ^spelling righty +)
    (<i2> ^semantics <s3> + ^lt @R10085 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10745-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling follow)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling follow)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10729-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling follow)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @F21 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> +)
    (@F21 ^super-type @T993 + ^referent @A1104 + ^spelling follow +)
    (<n1> ^structure-type PP + ^parent-receiver <i1> + ^lt @V63 +
           ^current-word <w1> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V60 +
           ^current-word <w1> +)
    (<n3> ^structure-type UNTIL-PP + ^parent-receiver <i1> + ^lt @V62 +
           ^current-word <w1> +)
    (<n4> ^structure-type DP + ^parent-receiver <i1> + ^lt @V61 +
           ^current-word <w1> +)
    (<n5> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V59 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T993 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n7> +)
    (@T993 ^converts-to VP + ^semantic-structure action + ^assigners @V64 +
           ^assigners @V63 + ^assigners @V62 + ^assigners @V61 +
           ^assigners @V60 + ^assigners @V59 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling follow + ^referent @A1104 + ^copied yes +
           ^number singular + ^structure-type V + ^tense present +
           ^assigners @V64 + ^assigners @V63 + ^assigners @V62 +
           ^assigners @V61 + ^assigners @V60 + ^assigners @V59 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1104 ^procedural @P90032 + ^action-type primitive + ^item-type action +
           ^handle follow-wall1 +)
    (@V63 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^semantic-structure arg1 +
           ^structure-type PP +)
    (@V61 ^optional true + ^relative-position after + ^before @V62 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^structure-type DP +)
    (@V62 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^semantic-structure arg2 +
           ^structure-type UNTIL-PP +)
    (@V60 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V59 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (@P90032 ^op_name initiate-follow-wall1 + ^arg1 @P90033 +)
    (@P90033 ^arg-type concept + ^id @C5 +)
    (<n7> ^handle follow-wall1 + ^item-type action + ^action-type primitive +
           ^procedural @P90032 +)
    (@V64 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n6> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V64 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10697-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling stop)}
    (<w1> ^spelling stop)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type CP)
    (<s2> ^structure-type CP)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10685-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^first-word true ^spelling stop ^next <w1> ^spelling <c1>)
    (<s1> ^current-word <w2> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<w1> ^spelling |.|)
    -->
    (<s1> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^retrieved-lexical-item @S52 +
           ^not-merged-receiver <i1> +)
    (@S52 ^spelling-single-word stop + ^message-type command +
           ^semantic-structure action + ^referent @A1106 +
           ^structure-type CP +)
    (@A1106 ^procedural @P90034 + ^action-type primitive + ^item-type action +
           ^handle stop1 +)
    (@P90034 ^op_name initiate-stop1 +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @S52 + ^current-word <w2> +
           ^structure-type CP + ^lt-referent <n1> +)
    (<n1> ^handle stop1 + ^item-type action + ^action-type primitive +
           ^procedural @P90034 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10659-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o3>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling north)}
    (<w1> ^spelling north)
    (<o3> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <o1> ^lt <o2>)
    (<o1> ^structure-type V)
    (<o2> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10645-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o4>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling orient)
    (<o4> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling north)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <o1> ^lt <o3> ^lt <o2>)
    (<o1> ^structure-type V)
    (<o3> ^structure-type V)
    (<o2> ^spelling orient)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @N10011 +
           ^not-merged-receiver <i2> +)
    (@N10011 ^referent @P8001 + ^structure-type CARDINAL + ^spelling north +
           ^number singular +)
    (@P8001 ^yaw 1.507 + ^property @P8000 + ^item-type concept +
           ^handle north1 +)
    (@P8000 ^item-type property + ^handle cardinal-direction1 +)
    (<i2> ^semantics <s4> + ^lt @N10011 + ^current-word <w2> +
           ^structure-type CARDINAL + ^lt-referent <n1> +)
    (<n1> ^handle north1 + ^item-type concept + ^property @P8000 +
           ^yaw 1.507 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10612-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o3>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling s)}
    (<w1> ^spelling s)
    (<o3> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <o1> ^lt <o2>)
    (<o1> ^structure-type V)
    (<o2> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10598-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o4>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling orient)
    (<o4> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling s)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <o1> ^lt <o3> ^lt <o2>)
    (<o1> ^structure-type V)
    (<o3> ^structure-type V)
    (<o2> ^spelling orient)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S43 +
           ^not-merged-receiver <i2> +)
    (@S43 ^referent @P8003 + ^structure-type CARDINAL + ^spelling s +
           ^number singular +)
    (@P8003 ^yaw -1.507 + ^property @P8000 + ^item-type concept +
           ^handle south1 +)
    (@P8000 ^item-type property + ^handle cardinal-direction1 +)
    (<i2> ^semantics <s4> + ^lt @S43 + ^current-word <w2> +
           ^structure-type CARDINAL + ^lt-referent <n1> +)
    (<n1> ^handle south1 + ^item-type concept + ^property @P8000 +
           ^yaw -1.507 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10586-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling orient)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O8011 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @O8011 +
           ^current-word <w1> + ^structure-type V + ^lt-referent <n2> +)
    (@O8011 ^converts-to VP + ^semantic-structure action + ^assigners @V24 +
           ^tense present + ^referent @A1107 + ^structure-type V +
           ^spelling orient + ^number singular +)
    (@A1107 ^procedural @P90035 + ^action-type primitive + ^item-type action +
           ^handle orient1 +)
    (@P90035 ^op_name initiate-orient1 + ^arg1 @P90036 +)
    (@P90036 ^arg-type concept + ^id @C6 +)
    (<n2> ^handle orient1 + ^item-type action + ^action-type primitive +
           ^procedural @P90035 +)
    (@V24 ^referent-type literal + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true +
           ^structure-type CARDINAL +)
    (<n1> ^structure-type CARDINAL + ^parent-receiver <i1> + ^lt @V24 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t10553-1
    :chunk
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o1> ^constraint-count 1 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <p3> ^constraint <n1>)
    (<p3> -^demonstrative true ^specifier { << definite universal >> <c4> })
    (<s2> ^dialog-world <w1>)
    (<w1> ^objects <o2>)
    (<n1> ^handle <c3> ^property <p1>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    (<o2> ^object <p4>)
    (<p4> -^dialog-ignore true ^predicates <p2>)
    (<p2> ^<c2> <c3>)
    -->
    (<i1> ^referent <p4> +)
}

sp {chunk*apply*finish-comprehend*t10546-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling waypoint)}
    (<w1> ^spelling waypoint)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10533-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling waypoint)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W17 +
           ^not-merged-receiver <i2> +)
    (@W17 ^referent @P12009 + ^structure-type N + ^spelling waypoint +
           ^number singular +)
    (@P12009 ^property @P12000 + ^item-type predicate + ^handle waypoint +)
    (@P12000 ^item-type property + ^handle spatial-shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @W17 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle waypoint + ^item-type predicate + ^property @P12000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10482-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling waypoint)}
    (<w1> ^spelling waypoint)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type P-N-X)
    (<s2> ^structure-type P-N-X)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s5> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t10469-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type P)
    (<i2> ^structure-type N)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @S67 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +)
    (<x1> ^prior-word-first false + ^prior-word P + ^current-word N +)
    (<n1> ^structure-type PP + ^parent-receiver <i3> + ^lt @T9029 +
           ^current-word @S67 +)
    (<i3> ^lt @S67 + ^current-word @S67 + ^structure-type P-N-X +)
    (@S67 ^processed true + ^converts-to DP + ^assigners @T9029 +
           ^assigners @T9028 + ^prior-word-first false + ^construction |P-N| +
           ^prior-word P + ^current-word N + ^structure-type P-N-X +
           ^number singular +)
    (@T9029 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type PP +)
    (@T9028 ^before @T9029 + ^syntactic-structure head + ^required true +
           ^structure-type N +)
    (<n2> ^structure-type N + ^parent-receiver <i3> + ^lt @T9028 +
           ^current-word @S67 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t10458-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling to)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling waypoint)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling to)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W17 +
           ^not-merged-receiver <i2> +)
    (@W17 ^referent @P12009 + ^structure-type N + ^spelling waypoint +
           ^number singular +)
    (@P12009 ^property @P12000 + ^item-type predicate + ^handle waypoint +)
    (@P12000 ^item-type property + ^handle spatial-shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @W17 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle waypoint + ^item-type predicate + ^property @P12000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10446-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling go)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling to)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling go)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T9003 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (@T9003 ^super-type @T9000 + ^spelling to + ^relation @R1031 +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling to + ^relation @R1031 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1031 ^handle to1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10381-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling intersection)}
    (<w1> ^spelling intersection)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10368-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling intersection)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I12 +
           ^not-merged-receiver <i2> +)
    (@I12 ^referent @P12005 + ^structure-type N + ^spelling intersection +
           ^number singular +)
    (@P12005 ^output-word intersection + ^property @P12000 +
           ^item-type predicate + ^handle intersection +)
    (@P12000 ^item-type property + ^handle spatial-shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @I12 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle intersection + ^item-type predicate + ^property @P12000 +
           ^output-word intersection +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10356-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling see)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling see)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n5> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10332-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling you)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling see)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <y1> ^lt <y3> ^lt <y2>)
    (<y1> ^structure-type DP)
    (<y3> ^structure-type DP)
    (<y2> ^spelling you)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S55 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> + ^not-merged-assigner <n6> +
           ^not-merged-assigner <n7> +)
    (@S55 ^super-type @T997 + ^referent @A1111 + ^spelling see +)
    (<n2> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V43 +
           ^current-word <w2> +)
    (<n3> ^structure-type CONJP + ^parent-receiver <i2> + ^lt @V40 +
           ^current-word <w2> +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @V42 +
           ^current-word <w2> +)
    (<n5> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V41 +
           ^current-word <w2> +)
    (<n6> ^structure-type DP + ^parent-receiver <i2> + ^lt @V39 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p1> + ^super-type @T997 +
           ^current-word <w2> + ^lt <p1> + ^structure-type V +
           ^lt-referent <n8> +)
    (@T997 ^converts-to VP + ^semantic-structure action + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling see + ^referent @A1111 + ^copied yes + ^number singular +
           ^structure-type V + ^tense present + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^semantic-structure action +
           ^converts-to VP +)
    (@A1111 ^procedural @E3 + ^item-type action + ^handle sense1 +)
    (@V43 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V42 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (@V41 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V39 ^relative-position after + ^before @V40 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (@V40 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V39 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@E3 ^op_name initiate-sense1 +)
    (<n8> ^handle sense1 + ^item-type action + ^procedural @E3 +)
    (@V38 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n7> ^structure-type V-AUX + ^parent-receiver <i2> + ^lt @V38 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10307-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling forward)}
    (<w1> ^spelling forward)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling until)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @U5 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s4> + ^lt @U5 + ^current-word <w2> + ^structure-type P +)
    (@U5 ^converts-to UNTIL-PP + ^assigners @U7 + ^attachment immediate +
           ^structure-type P + ^spelling until + ^relation @U6 +)
    (@U6 ^handle until1 +)
    (@U7 ^embed-structure until-clause + ^relative-position after +
           ^syntactic-structure head + ^semantic-structure *embed* +
           ^required true + ^structure-type CP +)
    (<n1> ^structure-type CP + ^parent-receiver <i2> + ^lt @U7 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10292-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling go)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling forward)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling go)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @F7 +
           ^not-merged-receiver <i2> +)
    (@F7 ^referent @F8 + ^structure-type ADV + ^spelling forward +)
    (@F8 ^handle forward +)
    (<i2> ^semantics <s4> + ^lt @F7 + ^current-word <w2> +
           ^structure-type ADV + ^lt-referent <n1> +)
    (<n1> ^handle forward +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10227-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling wall)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W14 +
           ^not-merged-receiver <i2> +)
    (@W14 ^referent @P12002 + ^structure-type N + ^spelling wall +
           ^number singular +)
    (@P12002 ^property @P12000 + ^item-type predicate + ^handle wall1 +)
    (@P12000 ^item-type property + ^handle spatial-shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @W14 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle wall1 + ^item-type predicate + ^property @P12000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10215-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling sense)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling sense)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n4> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n5> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t10182-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type DP)
    (<i2> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @S22 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +)
    (<x1> ^prior-word-first false + ^prior-word DP + ^current-word V +)
    (<n1> ^structure-type VP + ^parent-receiver <i3> + ^lt @A10047 +
           ^current-word @S22 +)
    (<i3> ^lt @S22 + ^current-word @S22 + ^structure-type C +)
    (@S22 ^processed true + ^converts-to CP + ^assigners @A10047 +
           ^assigners @A10046 + ^prior-word-first false +
           ^construction DP-VP + ^prior-word DP + ^current-word V +
           ^structure-type C +)
    (@A10047 ^syntactic-structure predicate + ^semantic-structure *copy* +
           ^required true + ^structure-type VP +)
    (@A10046 ^before @A10047 + ^syntactic-structure head +
           ^semantic-structure agent + ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i3> + ^lt @A10046 +
           ^current-word @S22 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t10169-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling you)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling sense)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <y1> ^lt <y3> ^lt <y2>)
    (<y1> ^structure-type DP)
    (<y3> ^structure-type DP)
    (<y2> ^spelling you)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S56 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> + ^not-merged-assigner <n6> +
           ^not-merged-assigner <n7> +)
    (@S56 ^super-type @T997 + ^referent @A1111 + ^spelling sense +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @V39 +
           ^current-word <w2> +)
    (<n3> ^structure-type V-AUX + ^parent-receiver <i2> + ^lt @V38 +
           ^current-word <w2> +)
    (<n4> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V43 +
           ^current-word <w2> +)
    (<n5> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V41 +
           ^current-word <w2> +)
    (<n6> ^structure-type CONJP + ^parent-receiver <i2> + ^lt @V40 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p1> + ^super-type @T997 +
           ^current-word <w2> + ^lt <p1> + ^structure-type V +
           ^lt-referent <n8> +)
    (@T997 ^converts-to VP + ^semantic-structure action + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling sense + ^referent @A1111 + ^copied yes +
           ^number singular + ^structure-type V + ^tense present +
           ^assigners @V43 + ^assigners @V42 + ^assigners @V41 +
           ^assigners @V40 + ^assigners @V39 + ^assigners @V38 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1111 ^procedural @E3 + ^item-type action + ^handle sense1 +)
    (@V43 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V41 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V39 ^relative-position after + ^before @V40 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (@V40 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V39 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V38 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (@E3 ^op_name initiate-sense1 +)
    (<n8> ^handle sense1 + ^item-type action + ^procedural @E3 +)
    (@V42 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (<n7> ^structure-type PP + ^parent-receiver <i2> + ^lt @V42 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete2*onc*t10151-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type V ^current-word <w1>)
    (<i2> ^structure-type DP)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete*onc*t10144-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*1>)
      (<c*1> ^first-word true)}
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type P)
    (<i2> ^structure-type DP)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*apply*finish-comprehend*t10137-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling until)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling you)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <u1> ^lt <u3> ^lt <u2>)
    (<u1> ^structure-type P)
    (<u3> ^structure-type P)
    (<u2> ^spelling until)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @Y10007 +
           ^not-merged-receiver <i2> +)
    (@Y10007 ^super-converts-to CP + ^specifier personal + ^referent @I114 +
           ^structure-type DP + ^spelling you + ^number singular +)
    (@I114 ^property @P90124 + ^handle rosie +)
    (@P90124 ^handle handle + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @Y10007 + ^current-word <w2> +
           ^structure-type DP + ^lt-referent <n2> +)
    (<n2> ^handle rosie + ^property @P90124 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10125-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling drive)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling until)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling drive)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @U5 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s4> + ^lt @U5 + ^current-word <w2> + ^structure-type P +)
    (@U5 ^converts-to UNTIL-PP + ^assigners @U7 + ^attachment immediate +
           ^structure-type P + ^spelling until + ^relation @U6 +)
    (@U6 ^handle until1 +)
    (@U7 ^embed-structure until-clause + ^relative-position after +
           ^syntactic-structure head + ^semantic-structure *embed* +
           ^required true + ^structure-type CP +)
    (<n1> ^structure-type CP + ^parent-receiver <i2> + ^lt @U7 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10078-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling doorway)}
    (<w1> ^spelling doorway)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t10065-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling doorway)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @D1010 +
           ^not-merged-receiver <i2> +)
    (@D1010 ^referent @P12004 + ^structure-type N + ^spelling doorway +
           ^number singular +)
    (@P12004 ^output-word door + ^property @P12000 + ^item-type predicate +
           ^handle door +)
    (@P12000 ^item-type property + ^handle spatial-shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @D1010 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle door + ^item-type predicate + ^property @P12000 +
           ^output-word door +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t10049-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i2> ^structure-type IS-V ^structure-type <c6>)
    (<i1> ^lt <t1> ^structure-type <c5> ^structure-type <c3>
          ^structure-type <c2> ^current-word <w1> ^lt <t2>)
    (<t1> ^spelling there)
    (<s1> ^not-merged-receiver <i1> ^retrieved-stack <n2>)
    (<n2> ^prior <n1>)
    (<n1> ^item <i1>)
    (<t2> ^spelling <c4>)
    (<w1> ^spelling <c1>)
    -->
    (<s1> ^comprehension-structure <c7> + ^construction-comprehended <c8> +)
    (<c7> ^processed true + ^type construction + ^words prior-word +
           ^successful-query <x1> + ^retrieved-lexical-item @S81 +
           ^not-merged-receiver <i3> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> + ^not-merged-assigner <n7> +
           ^remove-receiver <i1> +)
    (<x1> ^prior-word-first false + ^prior-word there + ^current-word IS-V +)
    (<n3> ^structure-type PP + ^parent-receiver <i3> + ^lt @I107 +
           ^current-word @S81 +)
    (<n4> ^structure-type ADV + ^parent-receiver <i3> + ^lt @I103 +
           ^current-word @S81 +)
    (<n5> ^structure-type DP + ^parent-receiver <i3> + ^lt @I105 +
           ^current-word @S81 +)
    (<n6> ^structure-type ADJ + ^parent-receiver <i3> + ^lt @I104 +
           ^current-word @S81 +)
    (<i3> ^lt @S81 + ^current-word @S81 + ^structure-type C +)
    (@S81 ^processed true + ^converts-to CP +
           ^message-type object-description + ^assigners @I107 +
           ^assigners @I106 + ^assigners @I105 + ^assigners @I104 +
           ^assigners @I103 + ^prior-word-first false +
           ^construction There-is-ADJ/DP/PP + ^prior-word there +
           ^current-word IS-V + ^structure-type C +)
    (@I106 ^before @I107 + ^before @I105 + ^before @I104 + ^before @I103 +
           ^syntactic-structure predicate + ^required true +
           ^structure-type IS-V +)
    (@I104 ^referent-type literal + ^exclusive @I107 + ^exclusive @I105 +
           ^optional true + ^syntactic-structure predicate +
           ^semantic-structure predicate + ^structure-type ADJ +)
    (@I107 ^exclusive @I105 + ^exclusive @I104 + ^optional true +
           ^syntactic-structure complement + ^semantic-structure arg2 +
           ^structure-type PP +)
    (@I105 ^exclusive @I107 + ^exclusive @I104 + ^optional true +
           ^syntactic-structure predicate + ^semantic-structure predicate +
           ^structure-type DP +)
    (@I103 ^referent-type literal + ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n7> ^structure-type IS-V + ^parent-receiver <i3> + ^lt @I106 +
           ^current-word @S81 +)
    (<c8> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t10034-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling there)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <t1> ^lt <t3> ^lt <t2>)
    (<t1> ^structure-type DPX)
    (<t3> ^structure-type DPX)
    (<t2> ^spelling there)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s3> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete2*onc*t10022-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type V ^current-word <w1>)
    (<i2> ^structure-type DPX)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete*onc*t10015-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*1>)
      (<c*1> ^first-word true)}
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type P)
    (<i2> ^structure-type DPX)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*apply*finish-comprehend*t10008-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling until)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling there)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <u1> ^lt <u3> ^lt <u2>)
    (<u1> ^structure-type P)
    (<u3> ^structure-type P)
    (<u2> ^spelling until)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1018 +
           ^not-merged-receiver <i2> +)
    (@T1018 ^referent @R10062 + ^structure-type DPX + ^spelling there +
           ^number singular +)
    (@R10062 ^property @P90107 + ^handle there +)
    (@P90107 ^handle handle + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @T1018 + ^current-word <w2> +
           ^structure-type DPX + ^lt-referent <n2> +)
    (<n2> ^handle there + ^property @P90107 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9996-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling go)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling until)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling go)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @U5 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s4> + ^lt @U5 + ^current-word <w2> + ^structure-type P +)
    (@U5 ^converts-to UNTIL-PP + ^assigners @U7 + ^attachment immediate +
           ^structure-type P + ^spelling until + ^relation @U6 +)
    (@U6 ^handle until1 +)
    (@U7 ^embed-structure until-clause + ^relative-position after +
           ^syntactic-structure head + ^semantic-structure *embed* +
           ^required true + ^structure-type CP +)
    (<n1> ^structure-type CP + ^parent-receiver <i2> + ^lt @U7 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9983-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling go)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10013 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +)
    (@G10013 ^super-type @T992 + ^referent @A1103 + ^spelling go +)
    (<n1> ^structure-type UNTIL-PP + ^parent-receiver <i1> + ^lt @V66 +
           ^current-word <w1> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V67 +
           ^current-word <w1> +)
    (<n3> ^structure-type PP + ^parent-receiver <i1> + ^lt @V68 +
           ^current-word <w1> +)
    (<n4> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V69 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T992 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n6> +)
    (@T992 ^converts-to VP + ^semantic-structure action + ^assigners @V69 +
           ^assigners @V68 + ^assigners @V67 + ^assigners @V66 +
           ^assigners @V65 + ^tense present + ^structure-type V +
           ^number singular +)
    (<p1> ^spelling go + ^referent @A1103 + ^copied yes + ^number singular +
           ^structure-type V + ^tense present + ^assigners @V69 +
           ^assigners @V68 + ^assigners @V67 + ^assigners @V66 +
           ^assigners @V65 + ^semantic-structure action + ^converts-to VP +)
    (@A1103 ^procedural @P90029 + ^action-type primitive + ^item-type action +
           ^handle go-to-location1 +)
    (@V69 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V67 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@P90029 ^arg2 @P90030 + ^op_name initiate-go-to-location1 +)
    (@P90030 ^arg-type predicate + ^arg-status imagined + ^2 @O14 +
           ^id @P90031 +)
    (<n6> ^handle go-to-location1 + ^item-type action +
           ^action-type primitive + ^procedural @P90029 +)
    (@V65 ^referent-type literal + ^optional true + ^relative-position after +
           ^before @V68 + ^before @V66 + ^syntactic-structure head +
           ^semantic-structure arg1 + ^structure-type DP +)
    (@V68 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure relation +
           ^structure-type PP +)
    (@V66 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^semantic-structure arg2 +
           ^structure-type UNTIL-PP +)
    (<n5> ^structure-type DP + ^parent-receiver <i1> + ^lt @V65 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9938-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling wall)}
    (<w1> ^spelling wall)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9925-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling wall)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W14 +
           ^not-merged-receiver <i2> +)
    (@W14 ^referent @P12002 + ^structure-type N + ^spelling wall +
           ^number singular +)
    (@P12002 ^property @P12000 + ^item-type predicate + ^handle wall1 +)
    (@P12000 ^item-type property + ^handle spatial-shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @W14 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle wall1 + ^item-type predicate + ^property @P12000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9908-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling drive)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling to)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling drive)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T9003 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (@T9003 ^super-type @T9000 + ^spelling to + ^relation @R1031 +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling to + ^relation @R1031 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1031 ^handle to1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9895-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling drive)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @D1015 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +)
    (@D1015 ^super-type @T992 + ^referent @A1103 + ^spelling drive +)
    (<n1> ^structure-type DP + ^parent-receiver <i1> + ^lt @V65 +
           ^current-word <w1> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V67 +
           ^current-word <w1> +)
    (<n3> ^structure-type PP + ^parent-receiver <i1> + ^lt @V68 +
           ^current-word <w1> +)
    (<n4> ^structure-type UNTIL-PP + ^parent-receiver <i1> + ^lt @V66 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T992 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n6> +)
    (@T992 ^converts-to VP + ^semantic-structure action + ^assigners @V69 +
           ^assigners @V68 + ^assigners @V67 + ^assigners @V66 +
           ^assigners @V65 + ^tense present + ^structure-type V +
           ^number singular +)
    (<p1> ^spelling drive + ^referent @A1103 + ^copied yes +
           ^number singular + ^structure-type V + ^tense present +
           ^assigners @V69 + ^assigners @V68 + ^assigners @V67 +
           ^assigners @V66 + ^assigners @V65 + ^semantic-structure action +
           ^converts-to VP +)
    (@A1103 ^procedural @P90029 + ^action-type primitive + ^item-type action +
           ^handle go-to-location1 +)
    (@V67 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V65 ^referent-type literal + ^optional true + ^relative-position after +
           ^before @V68 + ^before @V66 + ^syntactic-structure head +
           ^semantic-structure arg1 + ^structure-type DP +)
    (@V68 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure relation +
           ^structure-type PP +)
    (@V66 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^semantic-structure arg2 +
           ^structure-type UNTIL-PP +)
    (@P90029 ^arg2 @P90030 + ^op_name initiate-go-to-location1 +)
    (@P90030 ^arg-type predicate + ^arg-status imagined + ^2 @O14 +
           ^id @P90031 +)
    (<n6> ^handle go-to-location1 + ^item-type action +
           ^action-type primitive + ^procedural @P90029 +)
    (@V69 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n5> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V69 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9793-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling large)}
    (<w1> ^spelling large)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling triangle)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1010 +
           ^not-merged-receiver <i2> +)
    (@T1010 ^referent @P2001 + ^structure-type N + ^spelling triangle +
           ^number singular +)
    (@P2001 ^property @P2000 + ^item-type predicate + ^handle triangle1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @T1010 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle triangle1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9703-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling table)}
    (<w1> ^spelling table)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |?|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W24 +
           ^not-merged-receiver <i2> +)
    (@W24 ^delay-retry true + ^structure-type QT + ^spelling |?| +)
    (<i2> ^semantics <s3> + ^lt @W24 + ^current-word <w2> +
           ^structure-type QT +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9582-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling triangle)}
    (<w1> ^spelling triangle)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling behind)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B23 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@B23 ^super-type @T9000 + ^spelling behind + ^relation @R1014 +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling behind + ^relation @R1014 + ^copied yes +
           ^structure-type P + ^assigners @P90108 + ^converts-to PP +
           ^relation-type binary +)
    (@R1014 ^handle behind1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9564-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling small)}
    (<w1> ^spelling small)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling orange)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O22 +
           ^not-merged-receiver <i2> +)
    (@O22 ^attachment immediate + ^referent @P1002 + ^structure-type ADJ +
           ^spelling orange +)
    (@P1002 ^property @P1000 + ^item-type predicate + ^handle orange1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @O22 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle orange1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9551-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling small)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S10 +
           ^not-merged-receiver <i2> +)
    (@S10 ^attachment immediate + ^referent @P3001 + ^structure-type ADJ +
           ^spelling small +)
    (@P3001 ^property @P3000 + ^item-type predicate + ^handle small1 +)
    (@P3000 ^item-type property + ^handle size + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @S10 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle small1 + ^item-type predicate + ^property @P3000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9521-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling red)}
    (<w1> ^spelling red)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |?|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W24 +
           ^not-merged-receiver <i2> +)
    (@W24 ^delay-retry true + ^structure-type QT + ^spelling |?| +)
    (<i2> ^semantics <s6> + ^lt @W24 + ^current-word <w2> +
           ^structure-type QT +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9507-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling this)}
    (<w1> ^spelling this)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling red)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10048 +
           ^not-merged-receiver <i2> +)
    (@R10048 ^attachment immediate + ^referent @P1001 + ^structure-type ADJ +
           ^spelling red +)
    (@P1001 ^property @P1000 + ^item-type predicate + ^handle red1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s6> + ^lt @R10048 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle red1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9460-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling green)}
    (<w1> ^spelling green)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |?|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W24 +
           ^not-merged-receiver <i2> +)
    (@W24 ^delay-retry true + ^structure-type QT + ^spelling |?| +)
    (<i2> ^semantics <s6> + ^lt @W24 + ^current-word <w2> +
           ^structure-type QT +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9426-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling sphere)}
    (<w1> ^spelling sphere)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling green)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10001 +
           ^not-merged-receiver <i2> +)
    (@G10001 ^attachment immediate + ^referent @P1004 + ^structure-type ADJ +
           ^spelling green +)
    (@P1004 ^property @P1000 + ^item-type predicate + ^handle green1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @G10001 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle green1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9377-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling this)}
    (<w1> ^spelling this)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n1> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<i2> ^semantics <s6> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9329-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling sphere)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S36 +
           ^not-merged-receiver <i2> +)
    (@S36 ^referent @P2006 + ^structure-type N + ^spelling sphere +
           ^number singular +)
    (@P2006 ^property @P2000 + ^item-type predicate + ^handle sphere1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @S36 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle sphere1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9296-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling block)}
    (<w1> ^spelling block)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n4> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (<p2> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9275-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling large)}
    (<w1> ^spelling large)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling orange)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O22 +
           ^not-merged-receiver <i2> +)
    (@O22 ^attachment immediate + ^referent @P1002 + ^structure-type ADJ +
           ^spelling orange +)
    (@P1002 ^property @P1000 + ^item-type predicate + ^handle orange1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @O22 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle orange1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9256-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^first-word true ^spelling is)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S82 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +)
    (<n1> ^structure-type DP + ^parent-receiver <i1> + ^lt @I110 +
           ^current-word <w1> +)
    (<n2> ^structure-type DP + ^parent-receiver <i1> + ^lt @I111 +
           ^current-word <w1> +)
    (<n3> ^structure-type PP + ^parent-receiver <i1> + ^lt @I109 +
           ^current-word <w1> +)
    (<n4> ^structure-type QT + ^parent-receiver <i1> + ^lt @I112 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @S82 + ^current-word <w1> +
           ^structure-type S +)
    (@S82 ^message-type object-question + ^assigners @I112 +
           ^assigners @I111 + ^assigners @I110 + ^assigners @I109 +
           ^assigners @I108 + ^construction *-Is-DP-DP/ADJ/PP? +
           ^prior-word * + ^current-word is + ^structure-type S +)
    (@I112 ^syntactic-structure terminator + ^required true +
           ^structure-type QT +)
    (@I110 ^demonstrative true + ^specifier definite + ^before @I111 +
           ^before @I109 + ^before @I108 + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@I108 ^referent-type literal + ^exclusive @I111 + ^exclusive @I109 +
           ^optional true + ^syntactic-structure predicate +
           ^semantic-structure predicate + ^structure-type ADJ +)
    (@I111 ^referent-type literal + ^exclusive @I109 + ^exclusive @I108 +
           ^optional true + ^syntactic-structure predicate +
           ^semantic-structure predicate + ^structure-type DP +)
    (@I109 ^exclusive @I111 + ^exclusive @I108 + ^optional true +
           ^syntactic-structure complement + ^semantic-structure relation +
           ^structure-type PP +)
    (<n5> ^structure-type ADJ + ^parent-receiver <i1> + ^lt @I108 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9195-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling size)}
    (<w1> ^spelling size)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s5> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9179-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w3> ^retrieved-stack <s1>)
    (<w3> ^spelling what)
    (<o1> ^name comprehend-word ^current-word <w5>)
    (<w5> -^first-word true ^spelling size)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w5> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <w1> ^lt <w4> ^lt <w2>)
    (<w1> ^structure-type QP)
    (<w4> ^structure-type QP)
    (<w2> ^spelling what)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S24 +
           ^not-merged-receiver <i2> +)
    (@S24 ^syntactic-referent-type ADJ + ^referent @P3000 +
           ^structure-type N + ^spelling size + ^number singular +)
    (@P3000 ^item-type property + ^handle size + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @S24 + ^current-word <w5> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^type visual + ^handle size + ^item-type property +)
    (<w5> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9128-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling shape)}
    (<w1> ^spelling shape)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s5> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9112-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w3> ^retrieved-stack <s1>)
    (<w3> ^spelling what)
    (<o1> ^name comprehend-word ^current-word <w5>)
    (<w5> -^first-word true ^spelling shape)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w5> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <w1> ^lt <w4> ^lt <w2>)
    (<w1> ^structure-type QP)
    (<w4> ^structure-type QP)
    (<w2> ^spelling what)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S23 +
           ^not-merged-receiver <i2> +)
    (@S23 ^syntactic-referent-type N + ^referent @P2000 + ^structure-type N +
           ^spelling shape + ^number singular +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @S23 + ^current-word <w5> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^type visual + ^handle shape + ^item-type property +)
    (<w5> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9075-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling sphere)}
    (<w1> ^spelling sphere)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |?|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W24 +
           ^not-merged-receiver <i2> +)
    (@W24 ^delay-retry true + ^structure-type QT + ^spelling |?| +)
    (<i2> ^semantics <s3> + ^lt @W24 + ^current-word <w2> +
           ^structure-type QT +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9062-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling large)}
    (<w1> ^spelling large)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling sphere)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S36 +
           ^not-merged-receiver <i2> +)
    (@S36 ^referent @P2006 + ^structure-type N + ^spelling sphere +
           ^number singular +)
    (@P2006 ^property @P2000 + ^item-type predicate + ^handle sphere1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @S36 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle sphere1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t9042-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling color)}
    (<w1> ^spelling color)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s5> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t9028-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^current-item <i2> ^prior-item <i1>)
    (<i2> ^structure-type N ^structure-type <c6>)
    (<i1> ^current-word <w2> ^lt <w1> ^structure-type <c5>
          ^structure-type <c3> ^structure-type <c1> ^lt <w3>)
    (<w2> ^first-word true ^spelling <c2>)
    (<w1> ^spelling what)
    (<s2> ^not-merged-receiver <i1> ^retrieved-stack <n1>)
    (<n1> ^prior <s1>)
    (<s1> ^item <i1>)
    (<w3> ^spelling <c4>)
    -->
    (<s2> ^comprehension-structure <c7> + ^construction-comprehended <c8> +)
    (<c7> ^processed true + ^type construction + ^words prior-word +
           ^successful-query <x1> + ^retrieved-lexical-item @S78 +
           ^not-merged-receiver <i3> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> + ^not-merged-assigner <n6> +
           ^remove-receiver <i1> +)
    (<x1> ^prior-word-first true + ^prior-word what + ^current-word N +)
    (<n2> ^structure-type N + ^parent-receiver <i3> + ^lt @I93 +
           ^current-word @S78 +)
    (<n3> ^structure-type DP + ^parent-receiver <i3> + ^lt @I90 +
           ^current-word @S78 +)
    (<n4> ^structure-type IS-V + ^parent-receiver <i3> + ^lt @I94 +
           ^current-word @S78 +)
    (<n5> ^structure-type QT + ^parent-receiver <i3> + ^lt @I92 +
           ^current-word @S78 +)
    (<i3> ^lt @S78 + ^current-word @S78 + ^structure-type S +)
    (@S78 ^processed true + ^message-type predicate-question +
           ^assigners @I94 + ^assigners @I93 + ^assigners @I92 +
           ^assigners @I91 + ^assigners @I90 + ^prior-word-first true +
           ^construction *-What-N-is-DP-QT + ^prior-word what +
           ^current-word N + ^structure-type S +)
    (@I93 ^referent-type literal + ^before @I94 + ^before @I92 +
           ^syntactic-structure predicate + ^semantic-structure property +
           ^required true + ^structure-type N +)
    (@I94 ^before @I92 + ^syntactic-structure nil + ^semantic-structure nil +
           ^required true + ^structure-type IS-V +)
    (@I92 ^syntactic-structure terminator + ^required true +
           ^structure-type QT +)
    (@I91 ^exclusive @I90 + ^optional true + ^demonstrative true +
           ^specifier definite + ^relative-position after +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^structure-type THIS +)
    (@I90 ^exclusive @I91 + ^optional true + ^relative-position after +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^structure-type DP +)
    (<n6> ^structure-type THIS + ^parent-receiver <i3> + ^lt @I91 +
           ^current-word @S78 +)
    (<c8> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t9013-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w3> ^retrieved-stack <s1>)
    (<w3> ^spelling what)
    (<o1> ^name comprehend-word ^current-word <w5>)
    (<w5> -^first-word true ^spelling color)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w5> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <w1> ^lt <w4> ^lt <w2>)
    (<w1> ^structure-type QP)
    (<w4> ^structure-type QP)
    (<w2> ^spelling what)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C63 +
           ^not-merged-receiver <i2> +)
    (@C63 ^syntactic-referent-type ADJ + ^referent @C64 + ^structure-type N +
           ^spelling color + ^number singular +)
    (@C64 ^property @C62 + ^handle color +)
    (@C62 ^handle concept + ^type conceptual +)
    (<i2> ^semantics <s4> + ^lt @C63 + ^current-word <w5> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle color + ^property @C62 +)
    (<w5> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t8978-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling relation)}
    (<w1> ^spelling relation)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t8965-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling relation)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10051 +
           ^not-merged-receiver <i2> +)
    (@R10051 ^syntactic-referent-type P + ^referent @R10050 +
           ^structure-type N + ^spelling relation + ^number singular +)
    (@R10050 ^property @C62 + ^handle relation +)
    (@C62 ^handle concept + ^type conceptual +)
    (<i2> ^semantics <s3> + ^lt @R10051 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle relation + ^property @C62 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t8945-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s2> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling in-a-row)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <n1>)
    (<n1> ^spelling in-a-row)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t8903-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling action)}
    (<w1> ^spelling action)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t8890-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling an)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling action)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling an)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10055 +
           ^not-merged-receiver <i2> +)
    (@A10055 ^syntactic-referent-type V + ^object-feature handle +
           ^referent @A10054 + ^structure-type N + ^spelling action +
           ^number singular +)
    (@A10054 ^property @C62 + ^handle action +)
    (@C62 ^handle concept + ^type conceptual +)
    (<i2> ^semantics <s3> + ^lt @A10055 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle action + ^property @C62 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t8878-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling an)
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type CP)
    (<s2> ^structure-type CP)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10050 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@A10050 ^super-type @D1001 + ^specifier indefinite + ^spelling an +
           ^number singular +)
    (<n1> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n2> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s6> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling an + ^number singular + ^specifier indefinite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t8857-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s2> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling transport)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <n1>)
    (<n1> ^spelling transport)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t8591-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> -^structure-type <s*1> ^current-word <w1>)
    (<i2> ^structure-type P)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @V95 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +)
    (<x1> ^prior-word-first true + ^prior-word U + ^current-word P +)
    (<n1> ^structure-type PP + ^parent-receiver <i3> + ^lt @A10079 +
           ^current-word @V95 +)
    (<i3> ^lt @V95 + ^current-word @V95 + ^structure-type UV +)
    (@V95 ^processed true + ^converts-to VP + ^message-type new-verb +
           ^assigners @A10080 + ^assigners @A10079 + ^prior-word-first true +
           ^construction *-U-P + ^prior-word U + ^current-word P +
           ^structure-type UV +)
    (@A10080 ^predicted-structure-type V + ^referent-type literal +
           ^syntactic-structure action + ^semantic-structure action +
           ^required true + ^structure-type U +)
    (@A10079 ^optional true + ^syntactic-structure complement2 +
           ^semantic-structure arg2 + ^structure-type PP +)
    (<n2> ^structure-type U + ^parent-receiver <i3> + ^lt @A10080 +
           ^current-word @V95 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}


sp {chunk*apply*finish-comprehend*construction*t8231-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> -^structure-type <s*1> ^current-word <w1>)
    (<i2> ^structure-type D)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @V94 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> +)
    (<x1> ^prior-word-first true + ^prior-word U + ^current-word D +)
    (<n1> ^structure-type U + ^parent-receiver <i3> + ^lt @A10078 +
           ^current-word @V94 +)
    (<n2> ^structure-type PP + ^parent-receiver <i3> + ^lt @A10077 +
           ^current-word @V94 +)
    (<i3> ^lt @V94 + ^current-word @V94 + ^structure-type UV +)
    (@V94 ^processed true + ^converts-to VP + ^message-type new-verb +
           ^assigners @A10078 + ^assigners @A10077 + ^assigners @A10076 +
           ^prior-word-first true + ^construction *-U-D + ^prior-word U +
           ^current-word D + ^structure-type UV +)
    (@A10078 ^predicted-structure-type V + ^referent-type literal +
           ^syntactic-structure action + ^semantic-structure action +
           ^required true + ^structure-type U +)
    (@A10077 ^optional true + ^syntactic-structure complement2 +
           ^semantic-structure arg2 + ^structure-type PP +)
    (@A10076 ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (<n3> ^structure-type DP + ^parent-receiver <i3> + ^lt @A10076 +
           ^current-word @V94 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete2*onc*t8183-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type V ^current-word <w1>)
    (<i2> ^structure-type T)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete*onc*t8176-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*1>)
      (<c*1> ^first-word true)}
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type D)
    (<i2> ^structure-type T)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*apply*finish-comprehend*t8169-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling unknown)}
    (<w1> ^spelling unknown)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t8145-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling pick)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling pick)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t8103-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling it)}
    (<w1> ^spelling it)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling up)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @U3 +
           ^not-merged-receiver <i2> +)
    (@U3 ^referent @U4 + ^structure-type ADV + ^spelling up +)
    (@U4 ^handle upwards +)
    (<i2> ^semantics <s4> + ^lt @U3 + ^current-word <w2> +
           ^structure-type ADV + ^lt-referent <n1> +)
    (<n1> ^handle upwards +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t8085-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling pick)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling it)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling pick)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I113 +
           ^not-merged-receiver <i2> +)
    (@I113 ^super-converts-to CP + ^specifier it + ^structure-type DP +
           ^spelling it + ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I113 + ^current-word <w2> +
           ^structure-type DP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t7964-1
    :chunk
    (state <s1> ^top-state <s2> ^operator <o2>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o2> ^constraint-count 2 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <p5> ^constraint <n1> ^constraint <n2>)
    (<p5> -^demonstrative true ^specifier { << definite universal >> <c6> })
    (<n1> ^subcategory <p3> ^handle { < <c9> <c7> } ^property <p4>
          ^property <p6>)
    (<n2> ^handle <c9> ^property <p1>)
    (<p3> ^handle <c4>)
    (<s2> ^world <w1>)
    (<w1> ^objects <o3>)
    (<p4> ^{ << name handle >> <c5> } <c3>)
    (<p6> ^{ << name handle >> <c8> } <c3>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    (<o3> ^object <o1>)
    (<o1> ^predicates <p2>)
    (<p2> ^<c2> <c9> ^<c3> <c4>)
    -->
    (<i1> ^referent <o1> +)
}

sp {chunk*apply*finish-comprehend*t7956-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling object)}
    (<w1> ^spelling object)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7943-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling purple)}
    (<w1> ^spelling purple)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling object)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O36 +
           ^not-merged-receiver <i2> +)
    (@O36 ^referent @P7003 + ^structure-type N + ^spelling object +
           ^number singular +)
    (@P7003 ^subcategory @P7006 + ^subcategory @P7008 + ^subcategory @P7002 +
           ^subcategory @P7001 + ^property @P7000 + ^handle object +)
    (@P7006 ^property @P7000 + ^handle piece +)
    (@P7008 ^property @P7000 + ^handle card +)
    (@P7002 ^property @P7000 + ^handle location +)
    (@P7000 ^item-type property + ^handle category + ^type visual +)
    (@P7001 ^property @P7000 + ^handle block +)
    (<i2> ^semantics <s3> + ^lt @O36 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle object + ^property @P7000 + ^subcategory @P7006 +
           ^subcategory @P7008 + ^subcategory @P7002 + ^subcategory @P7001 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7898-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling that)}
    (<w1> ^spelling that)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7880-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling up)}
    (<w1> ^spelling up)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling that)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10022 +
           ^not-merged-receiver <i2> +)
    (@T10022 ^demonstrative true + ^specifier definite + ^structure-type DP +
           ^spelling that + ^number singular +)
    (<i2> ^semantics <s4> + ^lt @T10022 + ^current-word <w2> +
           ^structure-type DP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7800-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling this)}
    (<w1> ^spelling this)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling on)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O42 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s4> + ^lt @O42 + ^current-word <w2> +
           ^structure-type P +)
    (@O42 ^relation-type binary + ^converts-to PP + ^assigners @O43 +
           ^structure-type P + ^spelling on + ^relation @R1000 +)
    (@O43 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @O43 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7757-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling up)}
    (<w1> ^spelling up)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7743-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling this)}
    (<w1> ^spelling this)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling up)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @U3 +
           ^not-merged-receiver <i2> +)
    (@U3 ^referent @U4 + ^structure-type ADV + ^spelling up +)
    (@U4 ^handle upwards +)
    (<i2> ^semantics <s4> + ^lt @U3 + ^current-word <w2> +
           ^structure-type ADV + ^lt-referent <n1> +)
    (<n1> ^handle upwards +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7725-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling pick)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling this)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling pick)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10021 +
           ^not-merged-receiver <i2> +)
    (@T10021 ^demonstrative true + ^specifier definite + ^structure-type DP +
           ^spelling this + ^number singular +)
    (<i2> ^semantics <s4> + ^lt @T10021 + ^current-word <w2> +
           ^structure-type DP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7692-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling this)}
    (<w1> ^spelling this)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7674-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling up)}
    (<w1> ^spelling up)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling this)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10021 +
           ^not-merged-receiver <i2> +)
    (@T10021 ^demonstrative true + ^specifier definite + ^structure-type DP +
           ^spelling this + ^number singular +)
    (<i2> ^semantics <s4> + ^lt @T10021 + ^current-word <w2> +
           ^structure-type DP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7593-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling than)}
    (<w1> ^spelling than)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <l1> ^lt <l4> ^lt <l3> ^lt <l2>)
    (<l1> ^spelling larger-than)
    (<l4> ^structure-type C-ADJ)
    (<l3> ^structure-type C-ADJ)
    (<l2> ^spelling larger-than)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n5> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7575-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling than)
    (<s1> ^not-merged-receiver <i1> ^retrieved-stack <n1>)
    (<i1> -^merged-with true ^lt <l1> ^lt <l2>)
    (<n1> ^item <i1>)
    (<l1> ^spelling larger)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^remove-receiver <i1> +
           ^retrieved-lexical-item @L25 + ^not-merged-receiver <i2> +
           ^not-merged-assigner <n2> +)
    (<i2> ^semantics <s3> + ^lt @L25 + ^current-word <w1> +
           ^structure-type C-ADJ +)
    (@L25 ^converts-to C-ADJ-P + ^assigners @L26 + ^prior-word bigger +
           ^prior-word larger + ^current-word than + ^structure-type C-ADJ +
           ^spelling larger-than + ^relation @R1015 +)
    (@L26 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @L26 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7566-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling larger)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L22 +
           ^not-merged-receiver <i2> +)
    (@L22 ^converts-to C-ADJ-P + ^structure-type C-ADJ + ^spelling bigger +
           ^spelling larger + ^relation @R1015 +)
    (@R1015 ^handle larger-than1 +)
    (<i2> ^semantics <s6> + ^lt @L22 + ^current-word <w2> +
           ^structure-type C-ADJ +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t7493-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type DP)
    (<i2> ^structure-type IS-V)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @S73 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> + ^not-merged-assigner <n6> +
           ^not-merged-assigner <n7> + ^not-merged-assigner <n8> +)
    (<x1> ^prior-word-first false + ^prior-word DP + ^current-word IS-V +)
    (<n1> ^structure-type DP + ^parent-receiver <i3> + ^lt @I70 +
           ^current-word @S73 +)
    (<n2> ^structure-type C-ADJ-P + ^parent-receiver <i3> + ^lt @I74 +
           ^current-word @S73 +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i3> + ^lt @I69 +
           ^current-word @S73 +)
    (<n4> ^structure-type DP + ^parent-receiver <i3> + ^lt @I71 +
           ^current-word @S73 +)
    (<n5> ^structure-type PP + ^parent-receiver <i3> + ^lt @I73 +
           ^current-word @S73 +)
    (<n6> ^structure-type IS-V + ^parent-receiver <i3> + ^lt @I67 +
           ^current-word @S73 +)
    (<n7> ^structure-type ADV + ^parent-receiver <i3> + ^lt @I68 +
           ^current-word @S73 +)
    (<i3> ^lt @S73 + ^current-word @S73 + ^structure-type C +)
    (@S73 ^processed true + ^converts-to CP +
           ^message-type object-description + ^assigners @I74 +
           ^assigners @I73 + ^assigners @I72 + ^assigners @I71 +
           ^assigners @I70 + ^assigners @I69 + ^assigners @I68 +
           ^assigners @I67 + ^prior-word-first false +
           ^construction DP-is-ADJ/DP/PP/CONJP/RP + ^prior-word DP +
           ^current-word IS-V + ^structure-type C +)
    (@I70 ^relative-position before + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@I69 ^referent-type literal + ^exclusive @I74 + ^exclusive @I73 +
           ^exclusive @I72 + ^exclusive @I71 + ^optional true +
           ^relative-position after + ^syntactic-structure predicate +
           ^semantic-structure predicate + ^structure-type ADJ +)
    (@I71 ^referent-type literal + ^exclusive @I73 + ^exclusive @I72 +
           ^exclusive @I69 + ^optional true + ^relative-position after +
           ^syntactic-structure predicate + ^semantic-structure predicate +
           ^structure-type DP +)
    (@I72 ^referent-type literal + ^exclusive @I74 + ^exclusive @I73 +
           ^exclusive @I71 + ^exclusive @I69 + ^optional true +
           ^relative-position after + ^syntactic-structure predicate +
           ^semantic-structure predicate + ^structure-type N +)
    (@I74 ^referent-type literal + ^exclusive @I73 + ^exclusive @I72 +
           ^exclusive @I71 + ^exclusive @I69 + ^optional true +
           ^relative-position after + ^syntactic-structure complement +
           ^semantic-structure relation + ^structure-type C-ADJ-P +)
    (@I73 ^exclusive @I74 + ^exclusive @I72 + ^exclusive @I71 +
           ^exclusive @I69 + ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^semantic-structure relation +
           ^structure-type PP +)
    (@I68 ^referent-type literal + ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@I67 ^syntactic-structure predicate + ^required true +
           ^structure-type IS-V +)
    (<n8> ^structure-type N + ^parent-receiver <i3> + ^lt @I72 +
           ^current-word @S73 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete2*onc*t7448-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type V ^current-word <w1>)
    (<i2> ^structure-type D)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*comprehend-word*apply*smem-construction-retrieval*failure-complete*onc*t7441-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
   -{ (<i1> ^current-word <c*1>)
      (<c*1> ^first-word true)}
   -{ (<i1> ^current-word <c*2>)
      (<c*2> ^first-word true)}
    (<i1> ^structure-type P)
    (<i2> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^failed true + ^type construction +)
}

sp {chunk*apply*finish-comprehend*t7434-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling until)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <u1> ^lt <u3> ^lt <u2>)
    (<u1> ^structure-type P)
    (<u3> ^structure-type P)
    (<u2> ^spelling until)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n5> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7418-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling wait)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling until)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling wait)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @U5 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s4> + ^lt @U5 + ^current-word <w2> + ^structure-type P +)
    (@U5 ^converts-to UNTIL-PP + ^assigners @U7 + ^attachment immediate +
           ^structure-type P + ^spelling until + ^relation @U6 +)
    (@U6 ^handle until1 +)
    (@U7 ^embed-structure until-clause + ^relative-position after +
           ^syntactic-structure head + ^semantic-structure *embed* +
           ^required true + ^structure-type CP +)
    (<n1> ^structure-type CP + ^parent-receiver <i2> + ^lt @U7 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7132-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling minutes)}
    (<w1> ^spelling minutes)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type CN)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7119-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling two)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling minutes)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type CN ^spelling two)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @M18 +
           ^not-merged-receiver <i2> +)
    (@M18 ^referent @M17 + ^structure-type N + ^spelling minutes +
           ^number plural +)
    (@M17 ^property @P10000 + ^handle minute +)
    (@P10000 ^item-type property + ^handle unit + ^type unit +)
    (<i2> ^semantics <s3> + ^lt @M18 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle minute + ^property @P10000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7107-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling for)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling two)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling for)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10001 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +)
    (@T10001 ^constraint @P11202 + ^super-type @T10000 + ^spelling two +
           ^number plural +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @C81 +
           ^current-word <w2> +)
    (<n3> ^structure-type N + ^parent-receiver <i2> + ^lt @C82 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @T10000 +
           ^current-word <w2> + ^lt <p2> + ^constraint @P11202 +
           ^structure-type CN +)
    (@T10000 ^specifier indefinite + ^converts-to DP + ^assigners @C83 +
           ^assigners @C82 + ^assigners @C81 + ^structure-type CN +)
    (<p2> ^spelling two + ^number plural + ^constraint @P11202 + ^copied yes +
           ^structure-type CN + ^assigners @C83 + ^assigners @C82 +
           ^assigners @C81 + ^converts-to DP + ^specifier indefinite +)
    (@C81 ^repeatable true + ^optional true + ^relative-position after +
           ^before @C82 + ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@C82 ^optional true + ^relative-position after + ^before @C83 +
           ^syntactic-structure head + ^structure-type N +)
    (@P11202 ^property @P11000 + ^item-type predicate + ^handle 2 +)
    (@P11000 ^item-type property + ^handle number + ^type number +)
    (@C83 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type PP +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @C83 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*ground-referent*apply*non-visual-referent*onc*t7054-2
    :chunk
    (state <s1> ^operator <o1>)
    (<o1> ^name ground-referent ^constraints <i1>)
   -{ (<i1> ^constraint <c*2>)
      (<c*2> ^relation <rel>)
      (<rel> ^2 <item>)
      (<item> ^item-type { << object location >> <i*1> })}
   -{ (<i1> ^constraint <c*1>)
      (<c*1> ^property <p*1>)
      (<p*1> ^type visual)}
    (<i1> ^lt <p4> ^constraint <n1> ^constraint <p3>)
    (<p4> -^demonstrative true -^specifier { << personal it >> <s*2> })
    (<n1> ^handle <c6> ^property <p2>)
    (<p3> ^handle <c5> ^property <p1>)
    (<p2> ^{ << name handle >> <c3> } <c4>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    -->
    (<i1> ^referent <r1> + ^ground-tested <i1> +)
    (<r1> ^<c2> <c5> + ^unit minute +)
}

sp {chunk*ground-referent*apply*non-visual-referent*onc*t7054-1
    :chunk
    (state <s1> ^operator <o1>)
    (<o1> ^name ground-referent ^constraints <i1>)
   -{ (<i1> ^constraint <c*2>)
      (<c*2> ^relation <rel>)
      (<rel> ^2 <item>)
      (<item> ^item-type { << object location >> <i*1> })}
   -{ (<i1> ^constraint <c*1>)
      (<c*1> ^property <p*1>)
      (<p*1> ^type visual)}
    (<i1> ^lt <p4> ^constraint <n1> ^constraint <p3>)
    (<p4> -^demonstrative true -^specifier { << personal it >> <s*2> })
    (<n1> ^handle <c6> ^property <p2>)
    (<p3> ^handle <c5> ^property <p1>)
    (<p2> ^{ << name handle >> <c3> } <c4>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    -->
    (<i1> ^referent <r1> + ^ground-tested <i1> +)
    (<r1> ^<c2> <c5> + ^<c4> <c6> +)
}

sp {chunk*apply*finish-comprehend*t7049-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling minute)}
    (<w1> ^spelling minute)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type CN)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7036-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling one)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling minute)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type CN ^spelling one)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @M19 +
           ^not-merged-receiver <i2> +)
    (@M19 ^referent @M17 + ^structure-type N + ^spelling minute +
           ^number singular +)
    (@M17 ^property @P10000 + ^handle minute +)
    (@P10000 ^item-type property + ^handle unit + ^type unit +)
    (<i2> ^semantics <s3> + ^lt @M19 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle minute + ^property @P10000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7024-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling for)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling one)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling for)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O8018 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +)
    (@O8018 ^constraint @P11201 + ^super-type @T10000 + ^spelling one +
           ^number singular +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @C81 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @C83 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @T10000 +
           ^current-word <w2> + ^lt <p2> + ^constraint @P11201 +
           ^structure-type CN +)
    (@T10000 ^specifier indefinite + ^converts-to DP + ^assigners @C83 +
           ^assigners @C82 + ^assigners @C81 + ^structure-type CN +)
    (<p2> ^spelling one + ^number singular + ^constraint @P11201 +
           ^copied yes + ^structure-type CN + ^assigners @C83 +
           ^assigners @C82 + ^assigners @C81 + ^converts-to DP +
           ^specifier indefinite +)
    (@C81 ^repeatable true + ^optional true + ^relative-position after +
           ^before @C82 + ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@P11201 ^property @P11000 + ^item-type predicate + ^handle 1 +)
    (@P11000 ^item-type property + ^handle number + ^type number +)
    (@C82 ^optional true + ^relative-position after + ^before @C83 +
           ^syntactic-structure head + ^structure-type N +)
    (@C83 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type PP +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @C82 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t7009-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling wait)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling for)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling wait)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @F14 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (@F14 ^super-type @T9000 + ^spelling for + ^relation @F13 +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling for + ^relation @F13 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@F13 ^handle for1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6996-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling wait)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W28 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> +)
    (@W28 ^super-type @T993 + ^referent @A1007 + ^spelling wait +)
    (<n1> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V60 +
           ^current-word <w1> +)
    (<n2> ^structure-type UNTIL-PP + ^parent-receiver <i1> + ^lt @V62 +
           ^current-word <w1> +)
    (<n3> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V64 +
           ^current-word <w1> +)
    (<n4> ^structure-type PP + ^parent-receiver <i1> + ^lt @V63 +
           ^current-word <w1> +)
    (<n5> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V59 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T993 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n7> +)
    (@T993 ^converts-to VP + ^semantic-structure action + ^assigners @V64 +
           ^assigners @V63 + ^assigners @V62 + ^assigners @V61 +
           ^assigners @V60 + ^assigners @V59 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling wait + ^referent @A1007 + ^copied yes + ^number singular +
           ^structure-type V + ^tense present + ^assigners @V64 +
           ^assigners @V63 + ^assigners @V62 + ^assigners @V61 +
           ^assigners @V60 + ^assigners @V59 + ^semantic-structure action +
           ^converts-to VP +)
    (@A1007 ^procedural @A10001 + ^action-type primitive + ^item-type action +
           ^handle wait1 +)
    (@V64 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V63 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^semantic-structure arg1 +
           ^structure-type PP +)
    (@V60 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V59 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (@A10001 ^op_name initiate-wait1 +)
    (<n7> ^handle wait1 + ^item-type action + ^action-type primitive +
           ^procedural @A10001 +)
    (@V61 ^optional true + ^relative-position after + ^before @V62 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^structure-type DP +)
    (@V62 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^semantic-structure arg2 +
           ^structure-type UNTIL-PP +)
    (<n6> ^structure-type DP + ^parent-receiver <i1> + ^lt @V61 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6841-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling to)
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type RC)
    (<s2> ^structure-type RC)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T9003 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@T9003 ^super-type @T9000 + ^spelling to + ^relation @R1031 +)
    (<i2> ^semantics <s5> + ^proto-lt <p1> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p1> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p1> ^spelling to + ^relation @R1031 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1031 ^handle to1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6827-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling that)}
    (<w1> ^spelling that)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type RC)
    (<s2> ^structure-type RC)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s5> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6815-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling rectangle)}
    (<w1> ^spelling rectangle)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> ^spelling that)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S92 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> + ^not-merged-assigner <n6> +
           ^not-merged-assigner <n7> +)
    (<n2> ^structure-type C-ADJ-P + ^parent-receiver <i2> + ^lt @I118 +
           ^current-word <w2> +)
    (<n3> ^structure-type DP + ^parent-receiver <i2> + ^lt @I116 +
           ^current-word <w2> +)
    (<n4> ^structure-type ADV + ^parent-receiver <i2> + ^lt @I119 +
           ^current-word <w2> +)
    (<n5> ^structure-type IS-V + ^parent-receiver <i2> + ^lt @I115 +
           ^current-word <w2> +)
    (<n6> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @I120 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^lt @S92 + ^current-word <w2> +
           ^structure-type RC +)
    (@S92 ^converts-to RCP + ^assigners @I120 + ^assigners @I119 +
           ^assigners @I118 + ^assigners @I117 + ^assigners @I116 +
           ^assigners @I115 + ^prior-word-first false +
           ^construction that-is-ADJ/DP/PP/C-ADJP-CONJP/RP + ^prior-word D +
           ^current-word that + ^attachment immediate + ^structure-type RC +)
    (@I119 ^referent-type literal + ^optional true +
           ^relative-position after + ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@I115 ^syntactic-structure predicate + ^required true +
           ^structure-type IS-V +)
    (@I117 ^exclusive @I120 + ^exclusive @I118 + ^exclusive @I116 +
           ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^attachment immediately-follow +
           ^structure-type PP +)
    (@I116 ^referent-type literal + ^exclusive @I120 + ^exclusive @I118 +
           ^exclusive @I117 + ^optional true + ^relative-position after +
           ^syntactic-structure predicate + ^structure-type DP +)
    (@I120 ^referent-type literal + ^exclusive @I118 + ^exclusive @I117 +
           ^exclusive @I116 + ^optional true + ^relative-position after +
           ^syntactic-structure predicate + ^structure-type ADJ +)
    (@I118 ^exclusive @I120 + ^exclusive @I117 + ^exclusive @I116 +
           ^optional true + ^relative-position after +
           ^syntactic-structure predicate + ^structure-type C-ADJ-P +)
    (<n7> ^structure-type PP + ^parent-receiver <i2> + ^lt @I117 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6637-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling rectangle)}
    (<w1> ^spelling rectangle)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling to)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T9003 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@T9003 ^super-type @T9000 + ^spelling to + ^relation @R1031 +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling to + ^relation @R1031 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1031 ^handle to1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6623-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling green)}
    (<w1> ^spelling green)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling rectangle)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10059 +
           ^not-merged-receiver <i2> +)
    (@R10059 ^referent @P2008 + ^structure-type N + ^spelling rectangle +
           ^number signular +)
    (@P2008 ^property @P2000 + ^item-type predicate + ^handle rectangle1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @R10059 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle rectangle1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6422-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling garbage)}
    (<w1> ^spelling garbage)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6409-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling garbage)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10007 +
           ^not-merged-receiver <i2> +)
    (@G10007 ^referent @P4002 + ^structure-type N + ^spelling garbage +
           ^number singular +)
    (@P4002 ^property @P4000 + ^item-type predicate + ^handle garbage +)
    (@P4000 ^item-type property + ^handle name + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @G10007 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle garbage + ^item-type predicate + ^property @P4000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6394-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling right)}
    (<w1> ^spelling right)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling of)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O40 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@O40 ^super-type @T9000 + ^attachment immediate + ^spelling of +
           ^relation @O39 +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (<p2> ^spelling of + ^relation @O39 + ^attachment immediate +
           ^copied yes + ^structure-type P + ^assigners @P90108 +
           ^converts-to PP + ^relation-type binary +)
    (@O39 ^handle of1 +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6380-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling right)
    (<s1> ^retrieved-stack <n1>)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10082 +
           ^not-merged-receiver <i2> +)
    (@R10082 ^semantic-entity-type relation + ^consumes-prior-word false +
           ^semantic-structure relation + ^prior-word the +
           ^current-word right + ^structure-type N + ^spelling right-noun +
           ^relation @R1002 + ^number singular +)
    (@R1002 ^relation @R10009 + ^relation @R10008 + ^relation @R10007 +
           ^handle right-of1 + ^type relation +)
    (@R10009 ^avg 0. + ^axis z + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10008 ^avg 0.1 + ^axis y + ^bottom 0.0001 + ^top 0.4 + ^squaredsum 0. +
           ^sum 0. + ^count 1 + ^type greater +)
    (@R10007 ^avg 0. + ^axis x + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (<i2> ^semantics <s3> + ^lt @R10082 + ^current-word <w1> +
           ^structure-type N +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6369-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling sphere)}
    (<w1> ^spelling sphere)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling to)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T9003 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@T9003 ^super-type @T9000 + ^spelling to + ^relation @R1031 +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling to + ^relation @R1031 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1031 ^handle to1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6265-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n3>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling to)}
    (<w1> ^spelling to)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n3> ^item <i1>)
    (<i1> -^merged-with true ^lt <n1> ^lt <n5> ^lt <n4> ^lt <n2>)
    (<n1> ^spelling next-to)
    (<n5> ^structure-type P)
    (<n4> ^structure-type P)
    (<n2> ^spelling next-to)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n6> +
           ^not-merged-assigner <n7> + ^not-merged-assigner <n8> +
           ^not-merged-assigner <n9> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n6> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n7> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n8> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (<p1> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n9> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6247-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling to)
    (<s1> ^not-merged-receiver <i1> ^retrieved-stack <n3>)
    (<i1> -^merged-with true ^lt <n1> ^lt <n2>)
    (<n3> ^item <i1>)
    (<n1> ^spelling next)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^remove-receiver <i1> +
           ^retrieved-lexical-item @N10015 + ^not-merged-receiver <i2> +
           ^not-merged-assigner <n4> +)
    (<i2> ^semantics <s3> + ^lt @N10015 + ^current-word <w1> +
           ^structure-type P +)
    (@N10015 ^converts-to PP + ^assigners @N10016 + ^prior-word next +
           ^current-word to + ^structure-type P + ^spelling next-to +
           ^relation @R1008 +)
    (@N10016 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n4> ^structure-type DP + ^parent-receiver <i2> + ^lt @N10016 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6238-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling sphere)}
    (<w1> ^spelling sphere)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling next)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @N10014 +
           ^not-merged-receiver <i2> +)
    (@N10014 ^converts-to PP + ^structure-type P + ^spelling next +
           ^relation @R1008 +)
    (@R1008 ^handle next-to1 +)
    (<i2> ^semantics <s3> + ^lt @N10014 + ^current-word <w2> +
           ^structure-type P +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6133-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling of)}
    (<w1> ^spelling of)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i2>)
    (<i2> -^merged-with true ^lt <i1> ^lt <i5> ^lt <i4> ^lt <i3>)
    (<i1> ^spelling in-front-of)
    (<i5> ^structure-type P)
    (<i4> ^structure-type P)
    (<i3> ^spelling in-front-of)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i6> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type N + ^parent-receiver <i6> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i6> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n4> ^structure-type RCP + ^parent-receiver <i6> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i6> ^semantics <s3> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (<p1> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type PP + ^parent-receiver <i6> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6115-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling front)}
    (<s1> -^retry <r*4> ^prior-word <w1> ^not-merged-receiver <i1>
          ^retrieved-stack <n1>)
    (<w1> ^spelling front)
    (<i1> -^merged-with true ^lt <i2> ^lt <i4> ^lt <i3>)
    (<n1> ^item <i1>)
    (<i2> ^spelling in-front)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> ^spelling of ^spelling <c2>)
    (<i3> ^structure-type <c1>)
    -->
    (<s1> ^comprehension-structure <c3> +)
    (<c3> ^processed true + ^type word + ^remove-receiver <i1> +
           ^retrieved-lexical-item @I18 + ^not-merged-receiver <i5> +
           ^not-merged-assigner <n2> +)
    (<i5> ^semantics <s3> + ^lt @I18 + ^current-word <w2> +
           ^structure-type P +)
    (@I18 ^converts-to PP + ^assigners @I19 + ^prior-word in-front +
           ^current-word of + ^structure-type P + ^spelling in-front-of +
           ^relation @R1016 +)
    (@R1016 ^handle infront1 +)
    (@I19 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i5> + ^lt @I19 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t6104-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling front)
    (<s1> ^not-merged-receiver <i1> ^retrieved-stack <n1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<n1> ^item <i1>)
    (<p1> ^spelling in)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^remove-receiver <i1> +
           ^retrieved-lexical-item @I17 + ^not-merged-receiver <i2> +)
    (@I17 ^converts-to PP + ^prior-word in + ^current-word front +
           ^can-be-part-of in-front-of + ^structure-type in-front +
           ^spelling in-front +)
    (<i2> ^semantics <s3> + ^lt @I17 + ^current-word <w1> +
           ^structure-type in-front +)
    (<w1> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-lexical-retrieval-assigner-prior-word-stale*onc*t6102-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling front)
    (<s1> ^retrieved-stack <n2> ^not-merged-assigner <n1>)
    (<n2> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<n1> ^parent-receiver <i1> ^lt <p2>)
    (<p1> ^spelling in)
    -->
    (<s1> ^not-merged-assigner <n1> -)
}

sp {chunk*apply*finish-comprehend*t5975-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling triangle)}
    (<w1> ^spelling triangle)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling to)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T9003 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@T9003 ^super-type @T9000 + ^spelling to + ^relation @R1031 +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling to + ^relation @R1031 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1031 ^handle to1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5951-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling triangle)}
    (<w1> ^spelling triangle)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling on)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O42 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (<i2> ^semantics <s3> + ^lt @O42 + ^current-word <w2> +
           ^structure-type P +)
    (@O42 ^relation-type binary + ^converts-to PP + ^assigners @O43 +
           ^structure-type P + ^spelling on + ^relation @R1000 +)
    (@O43 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @O43 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5937-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling orange)}
    (<w1> ^spelling orange)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling triangle)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1010 +
           ^not-merged-receiver <i2> +)
    (@T1010 ^referent @P2001 + ^structure-type N + ^spelling triangle +
           ^number singular +)
    (@P2001 ^property @P2000 + ^item-type predicate + ^handle triangle1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @T1010 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle triangle1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5924-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling orange)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O22 +
           ^not-merged-receiver <i2> +)
    (@O22 ^attachment immediate + ^referent @P1002 + ^structure-type ADJ +
           ^spelling orange +)
    (@P1002 ^property @P1000 + ^item-type predicate + ^handle orange1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @O22 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle orange1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5912-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling move)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling move)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5896-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling move)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @M23 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> + ^not-merged-assigner <n7> +)
    (@M23 ^directional true + ^super-type @T987 + ^referent @A1008 +
           ^spelling move +)
    (<n1> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V91 +
           ^current-word <w1> +)
    (<n2> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V89 +
           ^current-word <w1> +)
    (<n3> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V87 +
           ^current-word <w1> +)
    (<n4> ^structure-type PP + ^parent-receiver <i1> + ^lt @V92 +
           ^current-word <w1> +)
    (<n5> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V93 +
           ^current-word <w1> +)
    (<n6> ^structure-type DP + ^parent-receiver <i1> + ^lt @V90 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T987 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n8> +)
    (@T987 ^converts-to VP + ^semantic-structure action + ^assigners @V93 +
           ^assigners @V92 + ^assigners @V91 + ^assigners @V90 +
           ^assigners @V89 + ^assigners @V88 + ^assigners @V87 +
           ^tense present + ^structure-type V + ^number singular +)
    (<p1> ^spelling move + ^referent @A1008 + ^directional true +
           ^copied yes + ^number singular + ^structure-type V +
           ^tense present + ^assigners @V93 + ^assigners @V92 +
           ^assigners @V91 + ^assigners @V90 + ^assigners @V89 +
           ^assigners @V88 + ^assigners @V87 + ^semantic-structure action +
           ^converts-to VP +)
    (@A1008 ^handle move1 +)
    (@V93 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V92 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (@V91 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V90 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V90 ^relative-position after + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@V89 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (@V87 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n8> ^handle move1 +)
    (@V88 ^optional true + ^relative-position before +
           ^syntactic-structure head + ^semantic-structure agent +
           ^structure-type DP +)
    (<n7> ^structure-type DP + ^parent-receiver <i1> + ^lt @V88 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}
sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t5733-1
    :chunk
    (state <s2> ^top-state <s3> ^operator <o2>)
   -{ (<s2> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o2> ^constraint-count 3 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <p4> ^constraint <n1> ^constraint <n2> ^constraint <c9>)
    (<p4> -^demonstrative true ^specifier { << definite universal >> <c6> })
    (<n2> ^handle <c7> ^property <p2>)
    (<n1> ^handle { < <c7> <c5> } ^property <p1>)
    (<s3> ^world <w1>)
    (<w1> ^objects <o5> ^predicates <p5>)
    (<p5> ^predicate <o4>)
    (<o4> ^instance <o3> ^handle <c8>)
    (<o3> ^2 <l1> ^1 <o1>)
    (<o1> ^predicates <p3>)
    (<p3> ^<c4> <c7> ^<c2> <c5>)
    (<o5> ^object <o1>)
    (<c9> ^relation <s1>)
    (<s1> ^2 <l1> ^handle <c8>)
    (<p2> ^{ << name handle >> <c3> } <c4>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    -->
    (<i1> ^referent <o1> +)
}

sp {chunk*apply*finish-comprehend*t5695-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling block)}
    (<w1> ^spelling block)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling on)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O42 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (<i2> ^semantics <s3> + ^lt @O42 + ^current-word <w2> +
           ^structure-type P +)
    (@O42 ^relation-type binary + ^converts-to PP + ^assigners @O43 +
           ^structure-type P + ^spelling on + ^relation @R1000 +)
    (@O43 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @O43 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5625-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling up)}
    (<w1> ^spelling up)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n2> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5607-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling pick)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling up)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling pick)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @U3 +
           ^not-merged-receiver <i2> +)
    (@U3 ^referent @U4 + ^structure-type ADV + ^spelling up +)
    (@U4 ^handle upwards +)
    (<i2> ^semantics <s4> + ^lt @U3 + ^current-word <w2> +
           ^structure-type ADV + ^lt-referent <n1> +)
    (<n1> ^handle upwards +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5595-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling pick)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @P90120 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +)
    (@P90120 ^super-type @T998 + ^can-be-part-of pick-up + ^referent @A1001 +
           ^spelling pick +)
    (<n1> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V36 +
           ^current-word <w1> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V37 +
           ^current-word <w1> +)
    (<n3> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V33 +
           ^current-word <w1> +)
    (<n4> ^structure-type DP + ^parent-receiver <i1> + ^lt @V35 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T998 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n6> +)
    (@T998 ^converts-to VP + ^semantic-structure action + ^assigners @V37 +
           ^assigners @V36 + ^assigners @V35 + ^assigners @V34 +
           ^assigners @V33 + ^tense present + ^structure-type V + ^att test +
           ^number singular +)
    (<p1> ^spelling pick + ^referent @A1001 + ^can-be-part-of pick-up +
           ^copied yes + ^number singular + ^att test + ^structure-type V +
           ^tense present + ^assigners @V37 + ^assigners @V36 +
           ^assigners @V35 + ^assigners @V34 + ^assigners @V33 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1001 ^procedural @P90003 + ^action-type primitive + ^item-type action +
           ^handle pick-up1 +)
    (@V37 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V36 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V35 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V35 ^relative-position after + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@V33 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (@P90003 ^op_name initiate-pick-up1 + ^arg1 @P90004 +)
    (@P90004 ^arg-type object + ^arg-status real + ^id @O2 +)
    (<n6> ^handle pick-up1 + ^item-type action + ^action-type primitive +
           ^procedural @P90003 +)
    (@V34 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n5> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V34 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5488-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling down)}
    (<w1> ^spelling down)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5470-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling put)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling down)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling put)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @D1 +
           ^not-merged-receiver <i2> +)
    (@D1 ^referent @D2 + ^structure-type ADV + ^spelling down +)
    (@D2 ^handle down1 +)
    (<i2> ^semantics <s4> + ^lt @D1 + ^current-word <w2> +
           ^structure-type ADV + ^lt-referent <n1> +)
    (<n1> ^handle down1 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5434-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o3>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling this)}
    (<w1> ^spelling this)
    (<o3> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <o1> ^lt <o2>)
    (<o1> ^structure-type P)
    (<o2> ^structure-type P)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5417-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o4>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling on)
    (<o4> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling this)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <o1> ^lt <o3> ^lt <o2>)
    (<o1> ^structure-type P)
    (<o3> ^structure-type P)
    (<o2> ^spelling on)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10021 +
           ^not-merged-receiver <i2> +)
    (@T10021 ^demonstrative true + ^specifier definite + ^structure-type DP +
           ^spelling this + ^number singular +)
    (<i2> ^semantics <s3> + ^lt @T10021 + ^current-word <w2> +
           ^structure-type DP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5405-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling it)}
    (<w1> ^spelling it)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling on)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O42 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s4> + ^lt @O42 + ^current-word <w2> +
           ^structure-type P +)
    (@O42 ^relation-type binary + ^converts-to PP + ^assigners @O43 +
           ^structure-type P + ^spelling on + ^relation @R1000 +)
    (@O43 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @O43 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t5391-1
    :chunk
    (state <s2> ^operator <o2> ^segment <s1>)
    (<o2> ^constraint-count 0 ^name ground-referent ^constraints <i2>)
    (<i2> ^lt <i1>)
    (<i1> -^demonstrative true ^specifier it)
    (<s1> ^dialog-object-list-access <n1>)
    (<n1> ^referent <o1>)
    (<o1> ^predicates <p1>)
    (<p1> ^category { <> concept <> location <> location1 <c1> })
    -->
    (<i2> ^referent <o1> +)
}

sp {chunk*apply*finish-comprehend*t5385-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling put)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling it)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling put)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I113 +
           ^not-merged-receiver <i2> +)
    (@I113 ^super-converts-to CP + ^specifier it + ^structure-type DP +
           ^spelling it + ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I113 + ^current-word <w2> +
           ^structure-type DP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5310-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling this)}
    (<w1> ^spelling this)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling in)
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I14 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (@I14 ^super-type @T9000 + ^spelling in + ^relation @R1001 +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling in + ^relation @R1001 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1001 ^relation @R10006 + ^relation @R10005 + ^relation @R10004 +
           ^handle in1 + ^type relation +)
    (@R10006 ^avg 0. + ^axis y + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10005 ^avg 0. + ^axis z + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10004 ^avg 0. + ^axis x + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5291-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling put)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling this)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling put)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10021 +
           ^not-merged-receiver <i2> +)
    (@T10021 ^demonstrative true + ^specifier definite + ^structure-type DP +
           ^spelling this + ^number singular +)
    (<i2> ^semantics <s4> + ^lt @T10021 + ^current-word <w2> +
           ^structure-type DP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5216-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling that)}
    (<w1> ^spelling that)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling in)
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type V)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I14 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (@I14 ^super-type @T9000 + ^spelling in + ^relation @R1001 +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling in + ^relation @R1001 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1001 ^relation @R10006 + ^relation @R10005 + ^relation @R10004 +
           ^handle in1 + ^type relation +)
    (@R10006 ^avg 0. + ^axis y + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10005 ^avg 0. + ^axis z + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10004 ^avg 0. + ^axis x + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5186-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling put)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling that)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling put)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10022 +
           ^not-merged-receiver <i2> +)
    (@T10022 ^demonstrative true + ^specifier definite + ^structure-type DP +
           ^spelling that + ^number singular +)
    (<i2> ^semantics <s4> + ^lt @T10022 + ^current-word <w2> +
           ^structure-type DP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5088-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling one)}
    (<w1> ^spelling one)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling in)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I14 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@I14 ^super-type @T9000 + ^spelling in + ^relation @R1001 +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling in + ^relation @R1001 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1001 ^relation @R10006 + ^relation @R10005 + ^relation @R10004 +
           ^handle in1 + ^type relation +)
    (@R10006 ^avg 0. + ^axis y + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10005 ^avg 0. + ^axis z + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10004 ^avg 0. + ^axis x + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t5074-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling green)}
    (<w1> ^spelling green)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> ^spelling one)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @D1030 +
           ^not-merged-receiver <i2> +)
    (@D1030 ^demonstrative true + ^construction D-one + ^prior-word D +
           ^current-word one + ^structure-type N + ^number singular +)
    (<i2> ^semantics <s3> + ^lt @D1030 + ^current-word <w2> +
           ^structure-type N +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4984-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling sphere)}
    (<w1> ^spelling sphere)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling in)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I14 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@I14 ^super-type @T9000 + ^spelling in + ^relation @R1001 +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling in + ^relation @R1001 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1001 ^relation @R10006 + ^relation @R10005 + ^relation @R10004 +
           ^handle in1 + ^type relation +)
    (@R10006 ^avg 0. + ^axis y + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10005 ^avg 0. + ^axis z + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10004 ^avg 0. + ^axis x + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4970-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling green)}
    (<w1> ^spelling green)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling sphere)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S36 +
           ^not-merged-receiver <i2> +)
    (@S36 ^referent @P2006 + ^structure-type N + ^spelling sphere +
           ^number singular +)
    (@P2006 ^property @P2000 + ^item-type predicate + ^handle sphere1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @S36 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle sphere1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4954-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling put)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling put)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4938-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling put)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @P90119 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> + ^not-merged-assigner <n7> +)
    (@P90119 ^directional true + ^super-type @T999 +
           ^can-be-part-of put-down + ^referent @A1000 + ^spelling put +)
    (<n1> ^structure-type DP + ^parent-receiver <i1> + ^lt @V27 +
           ^current-word <w1> +)
    (<n2> ^structure-type PP + ^parent-receiver <i1> + ^lt @V31 +
           ^current-word <w1> +)
    (<n3> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V30 +
           ^current-word <w1> +)
    (<n4> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V26 +
           ^current-word <w1> +)
    (<n5> ^structure-type DP + ^parent-receiver <i1> + ^lt @V29 +
           ^current-word <w1> +)
    (<n6> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V32 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T999 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n8> +)
    (<p1> ^spelling put + ^referent @A1000 + ^can-be-part-of put-down +
           ^directional true + ^copied yes + ^number singular + ^att test +
           ^structure-type V + ^tense present + ^assigners @V32 +
           ^assigners @V31 + ^assigners @V30 + ^assigners @V29 +
           ^assigners @V28 + ^assigners @V27 + ^assigners @V26 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1000 ^procedural @P90001 + ^action-type primitive + ^item-type action +
           ^handle put-down1 +)
    (@P90001 ^op_name initiate-put-down1 + ^arg1 @P90002 +)
    (@P90002 ^arg-type object + ^arg-status real + ^id @O1 +)
    (<n8> ^handle put-down1 + ^item-type action + ^action-type primitive +
           ^procedural @P90001 +)
    (<n7> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V28 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4879-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling |,|)}
    (<w1> ^spelling |,|)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling clean)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <r1> ^lt <r4> ^lt <r3> ^lt <r2>)
    (<r1> ^spelling |rosie,|)
    (<r4> ^structure-type ROSIE)
    (<r3> ^structure-type ROSIE)
    (<r2> ^spelling |rosie,|)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C77 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> + ^not-merged-assigner <n6> +
           ^not-merged-assigner <n7> +)
    (@C77 ^super-type @T997 + ^referent @A1014 + ^spelling clean +)
    (<n2> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V43 +
           ^current-word <w2> +)
    (<n3> ^structure-type CONJP + ^parent-receiver <i2> + ^lt @V40 +
           ^current-word <w2> +)
    (<n4> ^structure-type DP + ^parent-receiver <i2> + ^lt @V39 +
           ^current-word <w2> +)
    (<n5> ^structure-type V-AUX + ^parent-receiver <i2> + ^lt @V38 +
           ^current-word <w2> +)
    (<n6> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V41 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p1> + ^super-type @T997 +
           ^current-word <w2> + ^lt <p1> + ^structure-type V +
           ^lt-referent <n8> +)
    (@T997 ^converts-to VP + ^semantic-structure action + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling clean + ^referent @A1014 + ^copied yes +
           ^number singular + ^structure-type V + ^tense present +
           ^assigners @V43 + ^assigners @V42 + ^assigners @V41 +
           ^assigners @V40 + ^assigners @V39 + ^assigners @V38 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1014 ^handle clean +)
    (@V43 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V41 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V39 ^relative-position after + ^before @V40 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (@V40 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V39 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V38 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n8> ^handle clean +)
    (@V42 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (<n7> ^structure-type PP + ^parent-receiver <i2> + ^lt @V42 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4857-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling rosie)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> ^spelling |,|)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <r1> ^lt <r2>)
    (<r1> ^spelling rosie)
    (<r2> ^structure-type ROSIE)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10075 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s4> + ^lt @R10075 + ^current-word <w2> +
           ^structure-type ROSIE +)
    (@R10075 ^assigners @R10074 + ^prior-word ROSIE + ^current-word |,| +
           ^structure-type ROSIE + ^spelling |rosie,| +)
    (@R10074 ^syntactic-structure complement + ^semantic-structure agent +
           ^required true + ^structure-type ROSIE +)
    (<n1> ^structure-type ROSIE + ^parent-receiver <i2> + ^lt @R10074 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t4792-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type ROSIE ^current-word <w1>)
    (<i2> ^structure-type V)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @V5 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +)
    (<x1> ^prior-word-first true + ^prior-word ROSIE + ^current-word V +)
    (<n1> ^structure-type VP + ^parent-receiver <i3> + ^lt @A10039 +
           ^current-word @V5 +)
    (<i3> ^lt @V5 + ^current-word @V5 + ^structure-type CP +)
    (@V5 ^processed true + ^message-type command + ^assigners @A10039 +
           ^assigners @A10038 + ^prior-word-first true +
           ^construction *-Rosie-VP + ^prior-word ROSIE + ^current-word V +
           ^structure-type CP +)
    (@A10039 ^syntactic-structure predicate + ^semantic-structure *copy* +
           ^required true + ^structure-type VP +)
    (@A10038 ^before @A10039 + ^syntactic-structure head +
           ^semantic-structure agent + ^required true +
           ^structure-type ROSIE +)
    (<n2> ^structure-type ROSIE + ^parent-receiver <i3> + ^lt @A10038 +
           ^current-word @V5 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t4779-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling rosie)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling clean)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <r1> ^lt <r3> ^lt <r2>)
    (<r1> ^structure-type ROSIE)
    (<r3> ^structure-type ROSIE)
    (<r2> ^spelling rosie)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C77 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> +)
    (@C77 ^super-type @T997 + ^referent @A1014 + ^spelling clean +)
    (<n1> ^structure-type CONJP + ^parent-receiver <i2> + ^lt @V40 +
           ^current-word <w2> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V43 +
           ^current-word <w2> +)
    (<n3> ^structure-type V-AUX + ^parent-receiver <i2> + ^lt @V38 +
           ^current-word <w2> +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @V42 +
           ^current-word <w2> +)
    (<n5> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V41 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p1> + ^super-type @T997 +
           ^current-word <w2> + ^lt <p1> + ^structure-type V +
           ^lt-referent <n7> +)
    (@T997 ^converts-to VP + ^semantic-structure action + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling clean + ^referent @A1014 + ^copied yes +
           ^number singular + ^structure-type V + ^tense present +
           ^assigners @V43 + ^assigners @V42 + ^assigners @V41 +
           ^assigners @V40 + ^assigners @V39 + ^assigners @V38 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1014 ^handle clean +)
    (@V43 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V42 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (@V41 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V38 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n7> ^handle clean +)
    (@V39 ^relative-position after + ^before @V40 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (@V40 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V39 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (<n6> ^structure-type DP + ^parent-receiver <i2> + ^lt @V39 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4761-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling rosie)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10073 +
           ^not-merged-receiver <i1> +)
    (@R10073 ^referent @R10072 + ^structure-type ROSIE + ^spelling rosie +
           ^number singular +)
    (@R10072 ^handle rosie +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @R10073 +
           ^current-word <w1> + ^structure-type ROSIE + ^lt-referent <n1> +)
    (<n1> ^handle rosie +)
    (<w1> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t4720-1
    :chunk
    (state <s2> ^top-state <s3> ^operator <o2>)
   -{ (<s2> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o2> ^constraint-count 3 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <s1> ^constraint <n1> ^constraint <n2> ^constraint <n3>)
    (<s1> -^specifier <s*1> -^demonstrative true)
    (<n3> ^handle <c9> ^property <p3>)
    (<n2> ^handle { < <c9> <c8> } ^property <p2>)
    (<n1> ^handle { < <c8> < <c9> <c7> } ^property <p1>)
    (<s3> ^world <w1>)
    (<w1> ^objects <o3>)
    (<p3> ^{ << name handle >> <c5> } <c6>)
    (<p2> ^{ << name handle >> <c3> } <c4>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    (<o3> ^object <o1>)
    (<o1> ^predicates <p4>)
    (<p4> ^<c4> <c8> ^<c6> <c9> ^<c2> <c7>)
    -->
    (<i1> ^referent <o1> +)
}

sp {chunk*apply*finish-comprehend*t4711-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling triangle)}
    (<w1> ^spelling triangle)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type *-V-ADJ)
    (<s2> ^structure-type *-V-ADJ)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s5> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4698-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling red)}
    (<w1> ^spelling red)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling triangle)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type *-V-ADJ)
    (<s2> ^structure-type *-V-ADJ)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1010 +
           ^not-merged-receiver <i2> +)
    (@T1010 ^referent @P2001 + ^structure-type N + ^spelling triangle +
           ^number singular +)
    (@P2001 ^property @P2000 + ^item-type predicate + ^handle triangle1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s5> + ^lt @T1010 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle triangle1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4685-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling small)}
    (<w1> ^spelling small)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling red)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type *-V-ADJ)
    (<s2> ^structure-type *-V-ADJ)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10048 +
           ^not-merged-receiver <i2> +)
    (@R10048 ^attachment immediate + ^referent @P1001 + ^structure-type ADJ +
           ^spelling red +)
    (@P1001 ^property @P1000 + ^item-type predicate + ^handle red1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s5> + ^lt @R10048 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle red1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t4672-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type V ^current-word <w1>)
    (<i2> ^structure-type ADJ)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @S63 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> +)
    (<x1> ^prior-word-first true + ^prior-word V + ^current-word ADJ +)
    (<n1> ^structure-type ADJ + ^parent-receiver <i3> + ^lt @T9020 +
           ^current-word @S63 +)
    (<n2> ^structure-type N + ^parent-receiver <i3> + ^lt @T9018 +
           ^current-word @S63 +)
    (<i3> ^lt @S63 + ^current-word @S63 + ^structure-type *-V-ADJ +)
    (@S63 ^processed true + ^converts-to DP + ^assigners @T9020 +
           ^assigners @T9019 + ^assigners @T9018 + ^prior-word-first true +
           ^construction *-V-ADJ + ^prior-word V + ^current-word ADJ +
           ^structure-type *-V-ADJ + ^number singular +)
    (@T9020 ^repeatable true + ^optional true + ^before @T9018 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@T9019 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type PP +)
    (@T9018 ^before @T9019 + ^syntactic-structure head + ^required true +
           ^structure-type N +)
    (<n3> ^structure-type PP + ^parent-receiver <i3> + ^lt @T9019 +
           ^current-word @S63 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t4660-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling clean)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling small)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling clean)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S10 +
           ^not-merged-receiver <i2> +)
    (@S10 ^attachment immediate + ^referent @P3001 + ^structure-type ADJ +
           ^spelling small +)
    (@P3001 ^property @P3000 + ^item-type predicate + ^handle small1 +)
    (@P3000 ^item-type property + ^handle size + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @S10 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle small1 + ^item-type predicate + ^property @P3000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t4625-1
    :chunk
    (state <s2> ^top-state <s3> ^operator <o1>)
   -{ (<s2> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o1> ^constraint-count 1 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <s1> ^constraint <n1>)
    (<s1> -^specifier <s*1> -^demonstrative true)
    (<n1> ^handle <c3> ^property <p1>)
    (<s3> ^world <w1>)
    (<w1> ^objects <o2>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    (<o2> ^object <l1>)
    (<l1> ^predicates <p2>)
    (<p2> ^<c2> <c3>)
    -->
    (<i1> ^referent <l1> +)
}

sp {chunk*apply*finish-comprehend*t4618-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling pantry)}
    (<w1> ^spelling pantry)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type |N-X|)
    (<s2> ^structure-type |N-X|)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s5> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t4605-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type V ^current-word <w1>)
    (<i2> ^structure-type N)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @S65 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +)
    (<x1> ^prior-word-first true + ^prior-word V + ^current-word N +)
    (<n1> ^structure-type PP + ^parent-receiver <i3> + ^lt @T9025 +
           ^current-word @S65 +)
    (<i3> ^lt @S65 + ^current-word @S65 + ^structure-type |N-X| +)
    (@S65 ^processed true + ^converts-to DP + ^assigners @T9025 +
           ^assigners @T9024 + ^prior-word-first true + ^construction *-V-N +
           ^prior-word V + ^current-word N + ^structure-type |N-X| +
           ^number singular +)
    (@T9025 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type PP +)
    (@T9024 ^before @T9025 + ^syntactic-structure head + ^required true +
           ^structure-type N +)
    (<n2> ^structure-type N + ^parent-receiver <i3> + ^lt @T9024 +
           ^current-word @S65 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t4594-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling clean)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling pantry)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling clean)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @P90104 +
           ^not-merged-receiver <i2> +)
    (@P90104 ^referent @P4001 + ^structure-type N + ^spelling pantry +
           ^number singular +)
    (@P4001 ^property @P4000 + ^item-type predicate + ^handle pantry +)
    (@P4000 ^item-type property + ^handle name + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @P90104 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle pantry + ^item-type predicate + ^property @P4000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4535-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling clean)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling clean)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4519-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling clean)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C77 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> +)
    (@C77 ^super-type @T997 + ^referent @A1014 + ^spelling clean +)
    (<n1> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V43 +
           ^current-word <w1> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V41 +
           ^current-word <w1> +)
    (<n3> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V40 +
           ^current-word <w1> +)
    (<n4> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V38 +
           ^current-word <w1> +)
    (<n5> ^structure-type PP + ^parent-receiver <i1> + ^lt @V42 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T997 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n7> +)
    (@T997 ^converts-to VP + ^semantic-structure action + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling clean + ^referent @A1014 + ^copied yes +
           ^number singular + ^structure-type V + ^tense present +
           ^assigners @V43 + ^assigners @V42 + ^assigners @V41 +
           ^assigners @V40 + ^assigners @V39 + ^assigners @V38 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1014 ^handle clean +)
    (@V43 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V42 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (@V41 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V38 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n7> ^handle clean +)
    (@V39 ^relative-position after + ^before @V40 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (@V40 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V39 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (<n6> ^structure-type DP + ^parent-receiver <i1> + ^lt @V39 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4465-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling green)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10001 +
           ^not-merged-receiver <i2> +)
    (@G10001 ^attachment immediate + ^referent @P1004 + ^structure-type ADJ +
           ^spelling green +)
    (@P1004 ^property @P1000 + ^item-type predicate + ^handle green1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @G10001 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle green1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4410-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling sphere)}
    (<w1> ^spelling sphere)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4394-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling store)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling store)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4378-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling store)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S50 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> +)
    (@S50 ^super-type @T996 + ^referent @A1009 + ^spelling store +)
    (<n1> ^structure-type DP + ^parent-receiver <i1> + ^lt @V45 +
           ^current-word <w1> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V48 +
           ^current-word <w1> +)
    (<n3> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V44 +
           ^current-word <w1> +)
    (<n4> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V46 +
           ^current-word <w1> +)
    (<n5> ^structure-type PP + ^parent-receiver <i1> + ^lt @V47 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T996 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n7> +)
    (@T996 ^converts-to VP + ^semantic-structure action + ^assigners @V49 +
           ^assigners @V48 + ^assigners @V47 + ^assigners @V46 +
           ^assigners @V45 + ^assigners @V44 + ^tense present +
           ^structure-type V + ^att test + ^number singular +)
    (<p1> ^spelling store + ^referent @A1009 + ^copied yes +
           ^number singular + ^att test + ^structure-type V + ^tense present +
           ^assigners @V49 + ^assigners @V48 + ^assigners @V47 +
           ^assigners @V46 + ^assigners @V45 + ^assigners @V44 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1009 ^handle store1 +)
    (@V48 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V47 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (@V46 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V45 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V45 ^relative-position after + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@V44 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n7> ^handle store1 +)
    (@V49 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n6> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V49 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4325-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling table)}
    (<w1> ^spelling table)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4312-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling table)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1015 +
           ^not-merged-receiver <i2> +)
    (@T1015 ^referent @P4003 + ^structure-type N + ^spelling table +
           ^number singular +)
    (@P4003 ^property @P4000 + ^item-type predicate + ^handle table +)
    (@P4000 ^item-type property + ^handle name + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @T1015 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle table + ^item-type predicate + ^property @P4000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4300-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling set)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling set)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n2> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4284-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling set)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S49 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> +)
    (@S49 ^super-type @T997 + ^referent @A1013 + ^spelling set +)
    (<n1> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V43 +
           ^current-word <w1> +)
    (<n2> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V40 +
           ^current-word <w1> +)
    (<n3> ^structure-type PP + ^parent-receiver <i1> + ^lt @V42 +
           ^current-word <w1> +)
    (<n4> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V38 +
           ^current-word <w1> +)
    (<n5> ^structure-type DP + ^parent-receiver <i1> + ^lt @V39 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T997 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n7> +)
    (@T997 ^converts-to VP + ^semantic-structure action + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling set + ^referent @A1013 + ^copied yes + ^number singular +
           ^structure-type V + ^tense present + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^semantic-structure action +
           ^converts-to VP +)
    (@A1013 ^handle set +)
    (@V43 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V42 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (@V39 ^relative-position after + ^before @V40 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (@V40 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V39 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V38 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n7> ^handle set +)
    (@V41 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n6> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V41 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4224-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling organize)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling organize)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4208-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling organize)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O8010 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> +)
    (@O8010 ^super-type @T997 + ^referent @O8009 + ^spelling organize +)
    (<n1> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V41 +
           ^current-word <w1> +)
    (<n2> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V38 +
           ^current-word <w1> +)
    (<n3> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V40 +
           ^current-word <w1> +)
    (<n4> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V43 +
           ^current-word <w1> +)
    (<n5> ^structure-type PP + ^parent-receiver <i1> + ^lt @V42 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T997 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n7> +)
    (@T997 ^converts-to VP + ^semantic-structure action + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling organize + ^referent @O8009 + ^copied yes +
           ^number singular + ^structure-type V + ^tense present +
           ^assigners @V43 + ^assigners @V42 + ^assigners @V41 +
           ^assigners @V40 + ^assigners @V39 + ^assigners @V38 +
           ^semantic-structure action + ^converts-to VP +)
    (@O8009 ^handle organize +)
    (@V43 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V42 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (@V41 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V38 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n7> ^handle organize +)
    (@V39 ^relative-position after + ^before @V40 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (@V40 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V39 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (<n6> ^structure-type DP + ^parent-receiver <i1> + ^lt @V39 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4154-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling serve)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling serve)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4138-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling serve)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S54 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +)
    (@S54 ^super-type @T998 + ^referent @A1129 + ^spelling serve +)
    (<n1> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V36 +
           ^current-word <w1> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V34 +
           ^current-word <w1> +)
    (<n3> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V33 +
           ^current-word <w1> +)
    (<n4> ^structure-type DP + ^parent-receiver <i1> + ^lt @V35 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T998 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n6> +)
    (@T998 ^converts-to VP + ^semantic-structure action + ^assigners @V37 +
           ^assigners @V36 + ^assigners @V35 + ^assigners @V34 +
           ^assigners @V33 + ^tense present + ^structure-type V + ^att test +
           ^number singular +)
    (<p1> ^spelling serve + ^referent @A1129 + ^copied yes +
           ^number singular + ^att test + ^structure-type V + ^tense present +
           ^assigners @V37 + ^assigners @V36 + ^assigners @V35 +
           ^assigners @V34 + ^assigners @V33 + ^semantic-structure action +
           ^converts-to VP +)
    (@A1129 ^handle serve1 +)
    (@V36 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V35 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V35 ^relative-position after + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@V34 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V33 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n6> ^handle serve1 +)
    (@V37 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n5> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V37 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4074-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling cook)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling cook)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t4058-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling cook)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C75 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +)
    (@C75 ^super-type @T998 + ^referent @A1012 + ^spelling cook +)
    (<n1> ^structure-type DP + ^parent-receiver <i1> + ^lt @V35 +
           ^current-word <w1> +)
    (<n2> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V36 +
           ^current-word <w1> +)
    (<n3> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V33 +
           ^current-word <w1> +)
    (<n4> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V37 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T998 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n6> +)
    (@T998 ^converts-to VP + ^semantic-structure action + ^assigners @V37 +
           ^assigners @V36 + ^assigners @V35 + ^assigners @V34 +
           ^assigners @V33 + ^tense present + ^structure-type V + ^att test +
           ^number singular +)
    (<p1> ^spelling cook + ^referent @A1012 + ^copied yes + ^number singular +
           ^att test + ^structure-type V + ^tense present + ^assigners @V37 +
           ^assigners @V36 + ^assigners @V35 + ^assigners @V34 +
           ^assigners @V33 + ^semantic-structure action + ^converts-to VP +)
    (@A1012 ^handle cook1 +)
    (@V37 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V36 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V35 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V35 ^relative-position after + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@V33 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n6> ^handle cook1 +)
    (@V34 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n5> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V34 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3989-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling large)}
    (<w1> ^spelling large)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling green)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10001 +
           ^not-merged-receiver <i2> +)
    (@G10001 ^attachment immediate + ^referent @P1004 + ^structure-type ADJ +
           ^spelling green +)
    (@P1004 ^property @P1000 + ^item-type predicate + ^handle green1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @G10001 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle green1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3973-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling discard)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling discard)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3957-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling discard)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @D1012 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +)
    (@D1012 ^super-type @T998 + ^referent @A1010 + ^spelling discard +)
    (<n1> ^structure-type DP + ^parent-receiver <i1> + ^lt @V35 +
           ^current-word <w1> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V34 +
           ^current-word <w1> +)
    (<n3> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V36 +
           ^current-word <w1> +)
    (<n4> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V37 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T998 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n6> +)
    (@T998 ^converts-to VP + ^semantic-structure action + ^assigners @V37 +
           ^assigners @V36 + ^assigners @V35 + ^assigners @V34 +
           ^assigners @V33 + ^tense present + ^structure-type V + ^att test +
           ^number singular +)
    (<p1> ^spelling discard + ^referent @A1010 + ^copied yes +
           ^number singular + ^att test + ^structure-type V + ^tense present +
           ^assigners @V37 + ^assigners @V36 + ^assigners @V35 +
           ^assigners @V34 + ^assigners @V33 + ^semantic-structure action +
           ^converts-to VP +)
    (@A1010 ^handle discard +)
    (@V37 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V36 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V35 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V35 ^relative-position after + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@V34 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (<n6> ^handle discard +)
    (@V33 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n5> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V33 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3909-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling close)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling close)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3893-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling close)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C76 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> +)
    (@C76 ^super-type @T997 + ^converts-to VP + ^referent @A1004 +
           ^spelling close +)
    (<n1> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V43 +
           ^current-word <w1> +)
    (<n2> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V41 +
           ^current-word <w1> +)
    (<n3> ^structure-type PP + ^parent-receiver <i1> + ^lt @V42 +
           ^current-word <w1> +)
    (<n4> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V40 +
           ^current-word <w1> +)
    (<n5> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V38 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T997 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n7> +)
    (@T997 ^converts-to VP + ^semantic-structure action + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling close + ^referent @A1004 + ^copied yes +
           ^number singular + ^structure-type V + ^tense present +
           ^assigners @V43 + ^assigners @V42 + ^assigners @V41 +
           ^assigners @V40 + ^assigners @V39 + ^assigners @V38 +
           ^semantic-structure action + ^converts-to VP +)
    (@A1004 ^procedural @P90007 + ^action-type primitive + ^item-type action +
           ^handle close1 +)
    (@V43 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V42 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (@V41 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V38 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (@P90007 ^op_name initiate-close1 + ^arg1 @P90008 +)
    (@P90008 ^arg-type object + ^arg-status real + ^id @O4 +)
    (<n7> ^handle close1 + ^item-type action + ^action-type primitive +
           ^procedural @P90007 +)
    (@V39 ^relative-position after + ^before @V40 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (@V40 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V39 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (<n6> ^structure-type DP + ^parent-receiver <i1> + ^lt @V39 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3833-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling open)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling open)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3817-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling open)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O48 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> +)
    (@O48 ^super-type @T997 + ^can-be-part-of open-up + ^referent @A1003 +
           ^spelling open +)
    (<n1> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V41 +
           ^current-word <w1> +)
    (<n2> ^structure-type V-AUX + ^parent-receiver <i1> + ^lt @V38 +
           ^current-word <w1> +)
    (<n3> ^structure-type DP + ^parent-receiver <i1> + ^lt @V39 +
           ^current-word <w1> +)
    (<n4> ^structure-type CONJP + ^parent-receiver <i1> + ^lt @V40 +
           ^current-word <w1> +)
    (<n5> ^structure-type ADV + ^parent-receiver <i1> + ^lt @V43 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @T997 + ^current-word <w1> + ^lt <p1> +
           ^structure-type V + ^lt-referent <n7> +)
    (@T997 ^converts-to VP + ^semantic-structure action + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling open + ^referent @A1003 + ^can-be-part-of open-up +
           ^copied yes + ^number singular + ^structure-type V +
           ^tense present + ^assigners @V43 + ^assigners @V42 +
           ^assigners @V41 + ^assigners @V40 + ^assigners @V39 +
           ^assigners @V38 + ^semantic-structure action + ^converts-to VP +)
    (@A1003 ^procedural @P90005 + ^action-type primitive + ^item-type action +
           ^handle open1 +)
    (@V43 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V41 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V39 ^relative-position after + ^before @V40 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (@V40 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V39 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (@V38 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (@P90005 ^op_name initiate-open1 + ^arg1 @P90006 +)
    (@P90006 ^arg-type object + ^arg-status real + ^id @O3 +)
    (<n7> ^handle open1 + ^item-type action + ^action-type primitive +
           ^procedural @P90005 +)
    (@V42 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (<n6> ^structure-type PP + ^parent-receiver <i1> + ^lt @V42 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t3786-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type VP ^current-word <w1>)
    (<i2> ^structure-type T)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @V3 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +)
    (<x1> ^prior-word-first true + ^prior-word VP + ^current-word T +)
    (<n1> ^structure-type T + ^parent-receiver <i3> + ^lt @A10036 +
           ^current-word @V3 +)
    (<i3> ^lt @V3 + ^current-word @V3 + ^structure-type S +)
    (@V3 ^processed true + ^message-type command + ^assigners @A10036 +
           ^assigners @A10035 + ^prior-word-first true +
           ^construction *-VP-T + ^prior-word VP + ^current-word T +
           ^structure-type S +)
    (@A10036 ^after @A10035 + ^syntactic-structure terminator +
           ^required true + ^structure-type T +)
    (@A10035 ^syntactic-structure predicate + ^semantic-structure *copy* +
           ^required true + ^structure-type VP +)
    (<n2> ^structure-type VP + ^parent-receiver <i3> + ^lt @A10035 +
           ^current-word @V3 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t3746-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling on)}
    (<w1> ^spelling on)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type V ^spelling turn-on)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3728-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^spelling on)
    (<s2> ^prior-word <w1> ^not-merged-receiver <i1> ^retrieved-stack <s1>)
    (<w1> ^first-word true ^spelling <c1>)
    (<i1> -^merged-with true ^lt <t1> ^lt <t2>)
    (<s1> ^item <i1>)
    (<t1> ^spelling turn)
    -->
    (<s2> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^first-word true +
           ^remove-receiver <i1> + ^retrieved-lexical-item @T9016 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> + ^not-merged-assigner <n5> +
           ^not-merged-assigner <n6> +)
    (@T9016 ^super-type @T997 + ^prior-word-first true + ^prior-word turn +
           ^current-word on + ^referent @A1015 + ^spelling turn-on +)
    (<n1> ^structure-type V-AUX + ^parent-receiver <i2> + ^lt @V38 +
           ^current-word <w2> +)
    (<n2> ^structure-type CONJP + ^parent-receiver <i2> + ^lt @V40 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V43 +
           ^current-word <w2> +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @V42 +
           ^current-word <w2> +)
    (<n5> ^structure-type ADV + ^parent-receiver <i2> + ^lt @V41 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^proto-lt <p1> + ^super-type @T997 +
           ^current-word <w2> + ^lt <p1> + ^structure-type V +
           ^lt-referent <n7> +)
    (@T997 ^converts-to VP + ^semantic-structure action + ^assigners @V43 +
           ^assigners @V42 + ^assigners @V41 + ^assigners @V40 +
           ^assigners @V39 + ^assigners @V38 + ^tense present +
           ^structure-type V + ^number singular +)
    (<p1> ^spelling turn-on + ^referent @A1015 + ^copied yes +
           ^number singular + ^structure-type V + ^tense present +
           ^assigners @V43 + ^assigners @V42 + ^assigners @V41 +
           ^assigners @V40 + ^assigners @V39 + ^assigners @V38 +
           ^semantic-structure action + ^converts-to VP +)
    (@V43 ^optional true + ^relative-position before +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V42 ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure arg2 +
           ^structure-type PP +)
    (@V41 ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@V38 ^optional true + ^relative-position before +
           ^syntactic-structure nil + ^semantic-structure action-modifier +
           ^structure-type V-AUX +)
    (<n7> ^handle turn-on1 + ^item-type action + ^action-type primitive +
           ^procedural @P90009 +)
    (@V39 ^relative-position after + ^before @V40 +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^required true + ^structure-type DP +)
    (@V40 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^after @V39 + ^syntactic-structure predicate +
           ^semantic-structure *copy* + ^structure-type CONJP +)
    (<n6> ^structure-type DP + ^parent-receiver <i2> + ^lt @V39 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*comprehend-word*apply*smem-lexical-retrieval-assigner-prior-word-stale*onc*t3720-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling on)
    (<s2> ^retrieved-stack <s1> ^not-merged-assigner <n1>)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <t1>)
    (<n1> ^parent-receiver <i1> ^lt <t2>)
    (<t1> ^spelling turn)
    -->
    (<s2> ^not-merged-assigner <n1> -)
}

sp {chunk*apply*finish-comprehend*t3714-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling turn)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T9012 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +)
    (<n1> ^structure-type ADJ + ^parent-receiver <i1> + ^lt @T9014 +
           ^current-word <w1> +)
    (<n2> ^structure-type DP + ^parent-receiver <i1> + ^lt @T9013 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @T9012 +
           ^current-word <w1> + ^structure-type V + ^lt-referent <n4> +)
    (@T9012 ^converts-to VP + ^semantic-structure action + ^assigners @T9015 +
           ^assigners @T9014 + ^assigners @T9013 + ^tense present +
           ^referent @A1015 + ^structure-type V + ^spelling turn +
           ^number singular +)
    (@A1015 ^procedural @P90009 + ^action-type primitive + ^item-type action +
           ^handle turn-on1 +)
    (@P90009 ^op_name initiate-turn-on1 + ^arg1 @P90010 +)
    (@P90010 ^arg-type object + ^arg-status real + ^id @O5 +)
    (<n4> ^handle turn-on1 + ^item-type action + ^action-type primitive +
           ^procedural @P90009 +)
    (@T9015 ^lexical-item-spelling off + ^referent-type literal +
           ^exclusive @T9014 + ^relative-position after + ^after @T9013 +
           ^syntactic-structure adjunct + ^semantic-structure on-off-state +
           ^required true + ^structure-type ADJ +)
    (@T9013 ^optional true + ^relative-position after + ^before @T9015 +
           ^before @T9014 + ^syntactic-structure complement +
           ^semantic-structure arg1 + ^structure-type DP +)
    (@T9014 ^lexical-item-spelling on + ^referent-type literal +
           ^exclusive @T9015 + ^relative-position after + ^after @T9013 +
           ^syntactic-structure adjunct + ^semantic-structure on-off-state +
           ^required true + ^structure-type ADJ +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i1> + ^lt @T9015 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3626-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling large)}
    (<w1> ^spelling large)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling block)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B13 +
           ^not-merged-receiver <i2> +)
    (<i2> ^semantics <s3> + ^lt @B13 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^property @P7000 + ^handle block +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3610-1
    :chunk
    (state <s6> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling than)}
    (<w1> ^spelling than)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <s1> ^lt <s5> ^lt <s3> ^lt <s2>)
    (<s1> ^spelling smaller-than)
    (<s5> ^structure-type C-ADJ)
    (<s3> ^structure-type C-ADJ)
    (<s2> ^spelling smaller-than)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n4> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s7> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (<p1> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3592-1
    :chunk
    (state <s4> ^operator <o1> ^segment <s3>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling than)
    (<s3> ^not-merged-receiver <i1> ^retrieved-stack <n1>)
    (<i1> -^merged-with true ^lt <s1> ^lt <s2>)
    (<n1> ^item <i1>)
    (<s1> ^spelling smaller)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^remove-receiver <i1> +
           ^retrieved-lexical-item @S45 + ^not-merged-receiver <i2> +
           ^not-merged-assigner <n2> +)
    (<i2> ^semantics <s5> + ^lt @S45 + ^current-word <w1> +
           ^structure-type C-ADJ +)
    (@S45 ^converts-to C-ADJ-P + ^assigners @S46 + ^prior-word smaller +
           ^current-word than + ^structure-type C-ADJ +
           ^spelling smaller-than + ^relation @R1006 +)
    (@S46 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @S46 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3583-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling smaller)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S44 +
           ^not-merged-receiver <i2> +)
    (@S44 ^converts-to C-ADJ-P + ^structure-type C-ADJ + ^spelling smaller +
           ^relation @R1006 +)
    (@R1006 ^handle smaller-than1 +)
    (<i2> ^semantics <s6> + ^lt @S44 + ^current-word <w2> +
           ^structure-type C-ADJ +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t3439-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type QUANT ^current-word <w1>)
    (<i2> ^structure-type ADJ)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @A10090 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +)
    (<x1> ^prior-word-first true + ^prior-word QUANT + ^current-word ADJ +)
    (<n1> ^structure-type PP + ^parent-receiver <i3> + ^lt @T10017 +
           ^current-word @A10090 +)
    (<n2> ^structure-type N + ^parent-receiver <i3> + ^lt @T10016 +
           ^current-word @A10090 +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i3> + ^lt @T10015 +
           ^current-word @A10090 +)
    (<i3> ^lt @A10090 + ^current-word @A10090 + ^structure-type D +)
    (@A10090 ^processed true + ^specifier universal + ^converts-to DP +
           ^assigners @T10017 + ^assigners @T10016 + ^assigners @T10015 +
           ^assigners @T10014 + ^prior-word-first false +
           ^prior-word-first true + ^construction quant-ADJ +
           ^prior-word QUANT + ^current-word ADJ + ^structure-type D +
           ^number plural +)
    (@T10015 ^repeatable true + ^optional true + ^before @T10017 +
           ^before @T10016 + ^syntactic-structure adjoin +
           ^structure-type ADJ +)
    (@T10016 ^relative-position after + ^before @T10017 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@T10017 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type PP +)
    (@T10014 ^optional true + ^syntactic-structure quantifier +
           ^structure-type QUANT +)
    (<n4> ^structure-type QUANT + ^parent-receiver <i3> + ^lt @T10014 +
           ^current-word @A10090 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t3424-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling all)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling red)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <a1> ^lt <a3> ^lt <a2>)
    (<a1> ^structure-type QUANT)
    (<a3> ^structure-type QUANT)
    (<a2> ^spelling all)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10048 +
           ^not-merged-receiver <i2> +)
    (@R10048 ^attachment immediate + ^referent @P1001 + ^structure-type ADJ +
           ^spelling red +)
    (@P1001 ^property @P1000 + ^item-type predicate + ^handle red1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @R10048 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle red1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3342-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling all)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> ^spelling the)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <a1> ^lt <a2>)
    (<a1> ^spelling all)
    (<a2> ^structure-type QUANT)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10088 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (<n1> ^structure-type QUANT + ^parent-receiver <i2> + ^lt @T10006 +
           ^current-word <w2> +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @T10009 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @T10007 +
           ^current-word <w2> +)
    (<i2> ^semantics <s4> + ^lt @A10088 + ^current-word <w2> +
           ^structure-type D +)
    (@A10088 ^super-converts-to CP + ^specifier universal + ^converts-to DP +
           ^assigners @T10009 + ^assigners @T10008 + ^assigners @T10007 +
           ^assigners @T10006 + ^prior-word-first false +
           ^prior-word-first true + ^construction quant-the +
           ^prior-word QUANT + ^current-word the + ^structure-type D +
           ^number plural +)
    (@T10007 ^repeatable true + ^optional true + ^relative-position after +
           ^before @T10009 + ^before @T10008 + ^syntactic-structure adjoin +
           ^structure-type ADJ +)
    (@T10006 ^optional true + ^syntactic-structure quantifier +
           ^structure-type QUANT +)
    (@T10008 ^relative-position after + ^before @T10009 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@T10009 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type PP +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @T10008 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3290-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling in)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling in)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n5> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3274-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling are)}
    (<w1> ^spelling are)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling in)
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I14 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@I14 ^super-type @T9000 + ^spelling in + ^relation @R1001 +)
    (<i2> ^semantics <s5> + ^proto-lt <p1> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p1> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p1> ^spelling in + ^relation @R1001 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1001 ^relation @R10006 + ^relation @R10005 + ^relation @R10004 +
           ^handle in1 + ^type relation +)
    (@R10006 ^avg 0. + ^axis y + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10005 ^avg 0. + ^axis z + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10004 ^avg 0. + ^axis x + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3239-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling the)}
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling red)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <a1> ^lt <a2>)
    (<a1> ^structure-type D)
    (<a2> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10048 +
           ^not-merged-receiver <i2> +)
    (@R10048 ^attachment immediate + ^referent @P1001 + ^structure-type ADJ +
           ^spelling red +)
    (@P1001 ^property @P1000 + ^item-type predicate + ^handle red1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @R10048 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle red1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3226-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling of)}
    (<w1> ^spelling of)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <a1> ^lt <a3> ^lt <a2>)
    (<a1> ^structure-type QUANT)
    (<a3> ^spelling quant-of)
    (<a2> ^spelling quant-of)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10088 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (<n2> ^structure-type QUANT + ^parent-receiver <i2> + ^lt @T10006 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @T10007 +
           ^current-word <w2> +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @T10008 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^lt @A10088 + ^current-word <w2> +
           ^structure-type D +)
    (@A10088 ^super-converts-to CP + ^specifier universal + ^converts-to DP +
           ^assigners @T10009 + ^assigners @T10008 + ^assigners @T10007 +
           ^assigners @T10006 + ^prior-word-first false +
           ^prior-word-first true + ^construction quant-the +
           ^prior-word QUANT + ^current-word the + ^structure-type D +
           ^number plural +)
    (@T10007 ^repeatable true + ^optional true + ^relative-position after +
           ^before @T10009 + ^before @T10008 + ^syntactic-structure adjoin +
           ^structure-type ADJ +)
    (@T10008 ^relative-position after + ^before @T10009 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@T10006 ^optional true + ^syntactic-structure quantifier +
           ^structure-type QUANT +)
    (@T10009 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type PP +)
    (<n5> ^structure-type PP + ^parent-receiver <i2> + ^lt @T10009 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3209-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling all)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> ^spelling of)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <a1> ^lt <a2>)
    (<a1> ^spelling all)
    (<a2> ^structure-type QUANT)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10086 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s4> + ^lt @A10086 + ^current-word <w2> +
           ^structure-type QUANT +)
    (@A10086 ^super-converts-to CP + ^specifier universal +
           ^assigners @A10087 + ^prior-word QUANT + ^current-word of +
           ^structure-type QUANT + ^spelling quant-of + ^number plural +)
    (@A10087 ^syntactic-structure quantifier + ^required true +
           ^structure-type QUANT +)
    (<n1> ^structure-type QUANT + ^parent-receiver <i2> + ^lt @A10087 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3198-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling all)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10085 +
           ^not-merged-receiver <i1> +)
    (@A10085 ^super-converts-to CP + ^specifier universal +
           ^referent @R10076 + ^structure-type QUANT + ^spelling all +
           ^number plural +)
    (@R10076 ^handle all +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @A10085 +
           ^current-word <w1> + ^structure-type QUANT + ^lt-referent <n1> +)
    (<n1> ^handle all +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3145-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling left)}
    (<w1> ^spelling left)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling of)
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O40 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@O40 ^super-type @T9000 + ^attachment immediate + ^spelling of +
           ^relation @O39 +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (<p2> ^spelling of + ^relation @O39 + ^attachment immediate +
           ^copied yes + ^structure-type P + ^assigners @P90108 +
           ^converts-to PP + ^relation-type binary +)
    (@O39 ^handle of1 +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3131-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w1>)
    (<w1> ^spelling left)
    (<s1> ^retrieved-stack <n1>)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L29 +
           ^not-merged-receiver <i2> +)
    (@L29 ^semantic-entity-type relation + ^consumes-prior-word false +
           ^semantic-structure relation + ^prior-word the +
           ^current-word left + ^structure-type N + ^spelling left-noun +
           ^relation @R1003 + ^number singular +)
    (@R1003 ^relation @R10012 + ^relation @R10011 + ^relation @R10010 +
           ^handle left-of1 + ^type relation +)
    (@R10012 ^avg 0. + ^axis z + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10011 ^avg 0.1 + ^axis y + ^bottom 0.0001 + ^top 0.4 + ^squaredsum 0. +
           ^sum 0. + ^count 1 + ^type less +)
    (@R10010 ^avg 0. + ^axis x + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (<i2> ^semantics <s3> + ^lt @L29 + ^current-word <w1> +
           ^structure-type N +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3123-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling to)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling to)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n4> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3107-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling to)
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T9003 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (@T9003 ^super-type @T9000 + ^spelling to + ^relation @R1031 +)
    (<i2> ^semantics <s6> + ^proto-lt <p1> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p1> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p1> ^spelling to + ^relation @R1031 + ^copied yes + ^structure-type P +
           ^assigners @P90108 + ^converts-to PP + ^relation-type binary +)
    (@R1031 ^handle to1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3032-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling behind)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling behind)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n3> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t3016-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling behind)
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B23 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (@B23 ^super-type @T9000 + ^spelling behind + ^relation @R1014 +)
    (<i2> ^semantics <s6> + ^proto-lt <p1> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p1> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p1> ^spelling behind + ^relation @R1014 + ^copied yes +
           ^structure-type P + ^assigners @P90108 + ^converts-to PP +
           ^relation-type binary +)
    (@R1014 ^handle behind1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2946-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling red)}
    (<w1> ^spelling red)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling location)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L12 +
           ^not-merged-receiver <i2> +)
    (@L12 ^syntactic-referent-type DP + ^referent @P7002 + ^structure-type N +
           ^spelling location + ^number singular +)
    (@P7002 ^property @P7000 + ^handle location +)
    (<i2> ^semantics <s3> + ^lt @L12 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle location + ^property @P7000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2927-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling not)}
    (<w1> ^spelling not)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling on)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O42 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s6> + ^lt @O42 + ^current-word <w2> +
           ^structure-type P +)
    (@O42 ^relation-type binary + ^converts-to PP + ^assigners @O43 +
           ^structure-type P + ^spelling on + ^relation @R1000 +)
    (@O43 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @O43 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2892-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling purple)}
    (<w1> ^spelling purple)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling block)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B13 +
           ^not-merged-receiver <i2> +)
    (@B13 ^referent @P7001 + ^structure-type N + ^spelling block +
           ^number singular +)
    (@P7001 ^property @P7000 + ^handle block +)
    (@P7000 ^item-type property + ^handle category + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @B13 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle block + ^property @P7000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2879-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling purple)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @P90095 +
           ^not-merged-receiver <i2> +)
    (@P90095 ^attachment immediate + ^referent @P1006 + ^structure-type ADJ +
           ^spelling purple +)
    (@P1006 ^property @P1000 + ^item-type predicate + ^handle purple1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @P90095 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle purple1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2834-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling small)}
    (<w1> ^spelling small)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling location)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L12 +
           ^not-merged-receiver <i2> +)
    (@L12 ^syntactic-referent-type DP + ^referent @P7002 + ^structure-type N +
           ^spelling location + ^number singular +)
    (@P7002 ^property @P7000 + ^handle location +)
    (<i2> ^semantics <s3> + ^lt @L12 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle location + ^property @P7000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2821-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling small)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S10 +
           ^not-merged-receiver <i2> +)
    (@S10 ^attachment immediate + ^referent @P3001 + ^structure-type ADJ +
           ^spelling small +)
    (@P3001 ^property @P3000 + ^item-type predicate + ^handle small1 +)
    (@P3000 ^item-type property + ^handle size + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @S10 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle small1 + ^item-type predicate + ^property @P3000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2809-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o4>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling on)
    (<o4> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <o1> ^lt <o3> ^lt <o2>)
    (<o1> ^structure-type P)
    (<o3> ^structure-type P)
    (<o2> ^spelling on)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (<p1> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (<n5> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2776-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling orange)}
    (<w1> ^spelling orange)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling block)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B13 +
           ^not-merged-receiver <i2> +)
    (@B13 ^referent @P7001 + ^structure-type N + ^spelling block +
           ^number singular +)
    (@P7001 ^property @P7000 + ^handle block +)
    (@P7000 ^item-type property + ^handle category + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @B13 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle block + ^property @P7000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2763-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling an)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling orange)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling an)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O22 +
           ^not-merged-receiver <i2> +)
    (@O22 ^attachment immediate + ^referent @P1002 + ^structure-type ADJ +
           ^spelling orange +)
    (@P1002 ^property @P1000 + ^item-type predicate + ^handle orange1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @O22 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle orange1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2751-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling an)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10050 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@A10050 ^super-type @D1001 + ^specifier indefinite + ^spelling an +
           ^number singular +)
    (<n1> ^structure-type N + ^parent-receiver <i1> + ^lt @D1004 +
           ^current-word <w1> +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i1> + ^lt @D1002 +
           ^current-word <w1> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i1> + ^lt @D1003 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @D1001 + ^current-word <w1> + ^lt <p1> +
           ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling an + ^number singular + ^specifier indefinite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type PP + ^parent-receiver <i1> + ^lt @D1005 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2707-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling red)}
    (<w1> ^spelling red)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling block)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B13 +
           ^not-merged-receiver <i2> +)
    (@B13 ^referent @P7001 + ^structure-type N + ^spelling block +
           ^number singular +)
    (@P7001 ^property @P7000 + ^handle block +)
    (<i2> ^semantics <s3> + ^lt @B13 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle block + ^property @P7000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2694-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling red)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10048 +
           ^not-merged-receiver <i2> +)
    (@R10048 ^attachment immediate + ^referent @P1001 + ^structure-type ADJ +
           ^spelling red +)
    (@P1001 ^property @P1000 + ^item-type predicate + ^handle red1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @R10048 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle red1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2682-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling below)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling below)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (<p2> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (<n5> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2666-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling not)}
    (<w1> ^spelling not)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling below)
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B22 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (@B22 ^super-type @T9000 + ^spelling below + ^relation @R1005 +)
    (<i2> ^semantics <s6> + ^proto-lt <p1> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p1> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p1> ^spelling below + ^relation @R1005 + ^copied yes +
           ^structure-type P + ^assigners @P90108 + ^converts-to PP +
           ^relation-type binary +)
    (@R1005 ^handle below1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2651-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling not)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @N10005 +
           ^not-merged-receiver <i2> +)
    (@N10005 ^referent @N10006 + ^structure-type ADV + ^spelling not +)
    (@N10006 ^handle negation +)
    (<i2> ^semantics <s6> + ^lt @N10005 + ^current-word <w2> +
           ^structure-type ADV + ^lt-referent <n1> +)
    (<n1> ^handle negation +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2629-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling location)}
    (<w1> ^spelling location)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2613-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n1> ^structure-type ADJ + ^parent-receiver <i1> + ^lt @D1002 +
           ^current-word <w1> +)
    (<n2> ^structure-type PP + ^parent-receiver <i1> + ^lt @D1005 +
           ^current-word <w1> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i1> + ^lt @D1003 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @D1001 + ^current-word <w1> + ^lt <p1> +
           ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type N + ^parent-receiver <i1> + ^lt @D1004 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t2570-1
    :chunk
    (state <s1> ^top-state <s2> ^operator <o2>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o2> ^constraint-count 3 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <p5> ^constraint <n1> ^constraint <n2> ^constraint <n3>)
    (<p5> -^demonstrative true ^specifier { << definite universal >> <c8> })
    (<n3> ^handle <c10> ^property <p3>)
    (<n2> ^handle { < <c10> <c9> } ^property <p2>)
    (<n1> ^handle { < <c9> < <c10> <c7> } ^property <p1>)
    (<s2> ^world <w1>)
    (<w1> ^objects <o3>)
    (<p3> ^{ << name handle >> <c5> } <c6>)
    (<p2> ^{ << name handle >> <c3> } <c4>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    (<o3> ^object <o1>)
    (<o1> ^predicates <p4>)
    (<p4> ^<c4> <c9> ^<c6> <c10> ^<c2> <c7>)
    -->
    (<i1> ^referent <o1> +)
}

sp {chunk*apply*finish-comprehend*t2560-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling block)}
    (<w1> ^spelling block)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2547-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling green)}
    (<w1> ^spelling green)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling block)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B13 +
           ^not-merged-receiver <i2> +)
    (@B13 ^referent @P7001 + ^structure-type N + ^spelling block +
           ^number singular +)
    (@P7001 ^property @P7000 + ^handle block +)
    (@P7000 ^item-type property + ^handle category + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @B13 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle block + ^property @P7000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2534-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling big)}
    (<w1> ^spelling big)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling green)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10001 +
           ^not-merged-receiver <i2> +)
    (@G10001 ^attachment immediate + ^referent @P1004 + ^structure-type ADJ +
           ^spelling green +)
    (@P1004 ^property @P1000 + ^item-type predicate + ^handle green1 +)
    (<i2> ^semantics <s3> + ^lt @G10001 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle green1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2457-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling stove)}
    (<w1> ^spelling stove)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2438-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling on)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O42 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s6> + ^lt @O42 + ^current-word <w2> +
           ^structure-type P +)
    (@O42 ^relation-type binary + ^converts-to PP + ^assigners @O43 +
           ^structure-type P + ^spelling on + ^relation @R1000 +)
    (@O43 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @O43 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2381-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling off)}
    (<w1> ^spelling off)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2367-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling off)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O31 +
           ^not-merged-receiver <i2> +)
    (@O31 ^attachment immediate + ^referent @P14002 + ^structure-type ADJ +
           ^spelling off +)
    (@P14002 ^property @P14000 + ^item-type concept + ^handle off2 +)
    (@P14000 ^item-type property + ^handle activation1 + ^type state +)
    (<i2> ^semantics <s6> + ^lt @O31 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle off2 + ^item-type concept + ^property @P14000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2343-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling stove)}
    (<w1> ^spelling stove)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2330-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling stove)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S37 +
           ^not-merged-receiver <i2> +)
    (@S37 ^on-off-state-change true + ^referent @P4023 + ^structure-type N +
           ^spelling stove + ^number singular +)
    (@P4023 ^property @P4000 + ^handle stove +)
    (@P4000 ^item-type property + ^handle name + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @S37 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle stove + ^property @P4000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2287-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling pantry)}
    (<w1> ^spelling pantry)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2268-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling are)}
    (<w1> ^spelling are)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling on)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O42 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (<i2> ^semantics <s6> + ^lt @O42 + ^current-word <w2> +
           ^structure-type P +)
    (@O42 ^relation-type binary + ^converts-to PP + ^assigners @O43 +
           ^structure-type P + ^spelling on + ^relation @R1000 +)
    (@O43 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @O43 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2240-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling triangles)}
    (<w1> ^spelling triangles)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling are)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10053 +
           ^not-merged-receiver <i2> +)
    (@A10053 ^tense present + ^structure-type IS-V + ^spelling are +
           ^number plural +)
    (<i2> ^semantics <s4> + ^lt @A10053 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2227-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling red)}
    (<w1> ^spelling red)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling triangles)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1011 +
           ^not-merged-receiver <i2> +)
    (@T1011 ^referent @P2019 + ^structure-type N + ^spelling triangles +
           ^number plural +)
    (@P2019 ^multiple true + ^property @P2000 + ^item-type predicate +
           ^handle triangle1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @T1011 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle triangle1 + ^item-type predicate + ^property @P2000 +
           ^multiple true +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2191-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling cooked)}
    (<w1> ^spelling cooked)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2177-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling cooked)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C52 +
           ^not-merged-receiver <i2> +)
    (@C52 ^attachment immediate + ^referent @P14101 + ^structure-type ADJ +
           ^spelling cooked +)
    (@P14101 ^property @P14100 + ^item-type concept + ^handle cooked1 +)
    (@P14100 ^item-type property + ^handle meat1 + ^type state +)
    (<i2> ^semantics <s6> + ^lt @C52 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle cooked1 + ^item-type concept + ^property @P14100 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2126-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling clear)}
    (<w1> ^spelling clear)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2112-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling clear)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C36 +
           ^not-merged-receiver <i2> +)
    (@C36 ^referent @C37 + ^structure-type ADJ + ^spelling clear +)
    (@C37 ^property @C38 + ^handle clear +)
    (@C38 ^handle property + ^type visual +)
    (<i2> ^semantics <s6> + ^lt @C36 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle clear + ^property @C38 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2035-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling triangle)}
    (<w1> ^spelling triangle)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t2018-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling big)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B6 +
           ^not-merged-receiver <i2> +)
    (@B6 ^attachment immediate + ^referent @P3003 + ^structure-type ADJ +
           ^spelling big +)
    (@P3003 ^property @P3000 + ^item-type predicate + ^handle large1 +)
    (@P3000 ^item-type property + ^handle size + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @B6 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle large1 + ^item-type predicate + ^property @P3000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1956-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling block)}
    (<w1> ^spelling block)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1943-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling medium)}
    (<w1> ^spelling medium)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling block)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B13 +
           ^not-merged-receiver <i2> +)
    (@B13 ^referent @P7001 + ^structure-type N + ^spelling block +
           ^number singular +)
    (@P7001 ^property @P7000 + ^handle block +)
    (@P7000 ^item-type property + ^handle category + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @B13 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle block + ^property @P7000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1930-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling medium)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @M2 +
           ^not-merged-receiver <i2> +)
    (@M2 ^attachment immediate + ^referent @P3002 + ^structure-type ADJ +
           ^spelling medium +)
    (@P3002 ^property @P3000 + ^item-type predicate + ^handle medium1 +)
    (@P3000 ^item-type property + ^handle size + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @M2 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle medium1 + ^item-type predicate + ^property @P3000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1898-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling green)}
    (<w1> ^spelling green)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1884-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling green)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10001 +
           ^not-merged-receiver <i2> +)
    (@G10001 ^attachment immediate + ^referent @P1004 + ^structure-type ADJ +
           ^spelling green +)
    (@P1004 ^property @P1000 + ^item-type predicate + ^handle green1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s6> + ^lt @G10001 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle green1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1860-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling sphere)}
    (<w1> ^spelling sphere)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1847-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling sphere)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S36 +
           ^not-merged-receiver <i2> +)
    (@S36 ^referent @P2006 + ^structure-type N + ^spelling sphere +
           ^number singular +)
    (@P2006 ^property @P2000 + ^item-type predicate + ^handle sphere1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @S36 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle sphere1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1811-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling triangle)}
    (<w1> ^spelling triangle)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1798-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling big)}
    (<w1> ^spelling big)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling triangle)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1010 +
           ^not-merged-receiver <i2> +)
    (@T1010 ^referent @P2001 + ^structure-type N + ^spelling triangle +
           ^number singular +)
    (@P2001 ^property @P2000 + ^item-type predicate + ^handle triangle1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @T1010 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle triangle1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1785-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling big)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @B6 +
           ^not-merged-receiver <i2> +)
    (@B6 ^attachment immediate + ^referent @P3003 + ^structure-type ADJ +
           ^spelling big +)
    (@P3003 ^property @P3000 + ^item-type predicate + ^handle large1 +)
    (@P3000 ^item-type property + ^handle size + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @B6 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle large1 + ^item-type predicate + ^property @P3000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1773-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n1> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n2> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s6> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1708-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling one)}
    (<w1> ^spelling one)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <t1> ^lt <t2>)
    (<t1> ^structure-type DP)
    (<t2> ^structure-type DP)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1696-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^spelling one)
    (<s2> ^prior-word <w1> ^not-merged-receiver <i1> ^retrieved-stack <s1>)
    (<w1> ^first-word true ^spelling <c1>)
    (<i1> -^merged-with true ^lt <t1> ^lt <t2>)
    (<s1> ^item <i1>)
    (<t1> ^spelling this)
    -->
    (<s2> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^first-word true +
           ^remove-receiver <i1> + ^retrieved-lexical-item @T10023 +
           ^not-merged-receiver <i2> +)
    (@T10023 ^demonstrative true + ^construction adj-one + ^prior-word this +
           ^current-word one + ^structure-type DP + ^number singular +)
    (<i2> ^semantics <s4> + ^lt @T10023 + ^current-word <w2> +
           ^structure-type DP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1668-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling orange)}
    (<w1> ^spelling orange)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1654-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling orange)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O22 +
           ^not-merged-receiver <i2> +)
    (@O22 ^attachment immediate + ^referent @P1002 + ^structure-type ADJ +
           ^spelling orange +)
    (@P1002 ^property @P1000 + ^item-type predicate + ^handle orange1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s6> + ^lt @O22 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle orange1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1633-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling this)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <t1> ^lt <t3> ^lt <t2>)
    (<t1> ^structure-type DP)
    (<t3> ^structure-type DP)
    (<t2> ^spelling this)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1621-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling this)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10021 +
           ^not-merged-receiver <i1> +)
    (@T10021 ^demonstrative true + ^specifier definite + ^structure-type DP +
           ^spelling this + ^number singular +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @T10021 +
           ^current-word <w1> + ^structure-type DP +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1594-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling red)}
    (<w1> ^spelling red)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1580-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling red)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10048 +
           ^not-merged-receiver <i2> +)
    (@R10048 ^attachment immediate + ^referent @P1001 + ^structure-type ADJ +
           ^spelling red +)
    (@P1001 ^property @P1000 + ^item-type predicate + ^handle red1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s6> + ^lt @R10048 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle red1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1551-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling one)}
    (<w1> ^spelling one)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1538-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling large)}
    (<w1> ^spelling large)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> ^spelling one)
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @D1030 +
           ^not-merged-receiver <i2> +)
    (@D1030 ^demonstrative true + ^construction D-one + ^prior-word D +
           ^current-word one + ^structure-type N + ^number singular +)
    (<i2> ^semantics <s4> + ^lt @D1030 + ^current-word <w2> +
           ^structure-type N +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1527-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling large)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L5 +
           ^not-merged-receiver <i2> +)
    (@L5 ^attachment immediate + ^referent @P3003 + ^structure-type ADJ +
           ^spelling large +)
    (@P3003 ^property @P3000 + ^item-type predicate + ^handle large1 +)
    (@P3000 ^item-type property + ^handle size + ^type visual +)
    (<i2> ^semantics <s4> + ^lt @L5 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle large1 + ^item-type predicate + ^property @P3000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1495-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling tictactoe)}
    (<w1> ^spelling tictactoe)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1433-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling tic-tac-toe)}
    (<w1> ^spelling tic-tac-toe)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1395-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling game)}
    (<w1> ^spelling game)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s3> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1382-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling game)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10004 +
           ^not-merged-receiver <i2> +)
    (@G10004 ^syntactic-referent-type DP + ^object-feature handle +
           ^referent @G10003 + ^structure-type N + ^spelling game +
           ^number singular +)
    (@G10003 ^property @C62 + ^handle game1 +)
    (<i2> ^semantics <s3> + ^lt @G10004 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle game1 + ^property @C62 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1339-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling place-block)}
    (<w1> ^spelling place-block)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1301-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling action)}
    (<w1> ^spelling action)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s3> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1288-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling action)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10055 +
           ^not-merged-receiver <i2> +)
    (@A10055 ^syntactic-referent-type V + ^object-feature handle +
           ^referent @A10054 + ^structure-type N + ^spelling action +
           ^number singular +)
    (@A10054 ^property @C62 + ^handle action +)
    (<i2> ^semantics <s3> + ^lt @A10055 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle action + ^property @C62 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1276-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling of)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling of)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n3> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^super-converts-to CP + ^converts-to DP +
           ^assigners @D1002 + ^assigners @D1003 + ^assigners @D1004 +
           ^assigners @D1005 + ^structure-type D +)
    (<n5> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1260-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling name)}
    (<w1> ^spelling name)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling of)
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O40 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +)
    (@O40 ^super-type @T9000 + ^attachment immediate + ^spelling of +
           ^relation @O39 +)
    (<i2> ^semantics <s4> + ^proto-lt <p2> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p2> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p2> ^spelling of + ^relation @O39 + ^attachment immediate +
           ^copied yes + ^structure-type P + ^assigners @P90108 +
           ^converts-to PP + ^relation-type binary +)
    (@O39 ^handle of1 +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n1> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1246-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling name)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @N10008 +
           ^not-merged-receiver <i2> +)
    (@N10008 ^syntactic-referent-type N + ^object-feature handle +
           ^referent @N10007 + ^structure-type N + ^spelling name +
           ^number singular +)
    (@N10007 ^property @C62 + ^handle name1 +)
    (@C62 ^handle concept + ^type conceptual +)
    (<i2> ^semantics <s4> + ^lt @N10008 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle name1 + ^property @C62 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1198-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n3> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n4> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<i2> ^semantics <s5> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n5> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t1181-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^current-item <i2> ^prior-item <i1>)
    (<i2> ^structure-type IS-V ^structure-type <c6>)
    (<i1> ^current-word <w2> ^lt <w1> ^structure-type <c5>
          ^structure-type <c3> ^structure-type <c1> ^lt <w3>)
    (<w2> ^first-word true ^spelling <c2>)
    (<w1> ^spelling where)
    (<s2> ^not-merged-receiver <i1> ^retrieved-stack <n1>)
    (<n1> ^prior <s1>)
    (<s1> ^item <i1>)
    (<w3> ^spelling <c4>)
    -->
    (<s2> ^comprehension-structure <c7> + ^construction-comprehended <c8> +)
    (<c7> ^processed true + ^type construction + ^words prior-word +
           ^successful-query <x1> + ^retrieved-lexical-item @S79 +
           ^not-merged-receiver <i3> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^remove-receiver <i1> +)
    (<x1> ^prior-word-first true + ^prior-word where + ^current-word IS-V +)
    (<n2> ^structure-type IS-V + ^parent-receiver <i3> + ^lt @I96 +
           ^current-word @S79 +)
    (<n3> ^structure-type QT + ^parent-receiver <i3> + ^lt @I95 +
           ^current-word @S79 +)
    (<i3> ^lt @S79 + ^current-word @S79 + ^structure-type S +)
    (@S79 ^processed true + ^message-type where-is-question +
           ^assigners @I97 + ^assigners @I96 + ^assigners @I95 +
           ^prior-word-first true + ^construction *-Where-is-DP-QT +
           ^prior-word where + ^current-word IS-V + ^structure-type S +)
    (@I97 ^relative-position after + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (@I96 ^before @I97 + ^before @I95 + ^syntactic-structure predicate +
           ^semantic-structure where-question + ^required true +
           ^structure-type IS-V +)
    (@I95 ^syntactic-structure terminator + ^required true +
           ^structure-type QT +)
    (<n4> ^structure-type DP + ^parent-receiver <i3> + ^lt @I97 +
           ^current-word @S79 +)
    (<c8> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t1168-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w3> ^retrieved-stack <s1>)
    (<w3> ^spelling where)
    (<o1> ^name comprehend-word ^current-word <w5>)
    (<w5> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w5> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <w1> ^lt <w4> ^lt <w2>)
    (<w1> ^structure-type QP)
    (<w4> ^structure-type QP)
    (<w2> ^spelling where)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w5> +
           ^structure-type IS-V +)
    (<w5> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1156-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling where)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W18 +
           ^not-merged-receiver <i1> +)
    (@W18 ^question true + ^structure-type QP + ^spelling where +
           ^number singular +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @W18 + ^current-word <w1> +
           ^structure-type QP +)
    (<w1> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t1130-1
    :chunk
    (state <s1> ^top-state <s2> ^operator <o2>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o2> ^constraint-count 2 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <p4> ^constraint <n1> ^constraint <n2>)
    (<p4> -^demonstrative true ^specifier { << definite universal >> <c6> })
    (<n2> ^handle <c7> ^property <p2>)
    (<n1> ^handle { < <c7> <c5> } ^property <p1>)
    (<s2> ^world <w1>)
    (<w1> ^objects <o3>)
    (<p2> ^{ << name handle >> <c3> } <c4>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    (<o3> ^object <o1>)
    (<o1> ^predicates <p3>)
    (<p3> ^<c4> <c7> ^<c2> <c5>)
    -->
    (<i1> ^referent <o1> +)
}

sp {chunk*apply*finish-comprehend*t1120-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling triangle)}
    (<w1> ^spelling triangle)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |?|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W24 +
           ^not-merged-receiver <i2> +)
    (@W24 ^delay-retry true + ^structure-type QT + ^spelling |?| +)
    (<i2> ^semantics <s3> + ^lt @W24 + ^current-word <w2> +
           ^structure-type QT +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1107-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling red)}
    (<w1> ^spelling red)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling triangle)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1010 +
           ^not-merged-receiver <i2> +)
    (@T1010 ^referent @P2001 + ^structure-type N + ^spelling triangle +
           ^number singular +)
    (@P2001 ^property @P2000 + ^item-type predicate + ^handle triangle1 +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @T1010 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle triangle1 + ^item-type predicate + ^property @P2000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1094-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling red)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @R10048 +
           ^not-merged-receiver <i2> +)
    (@R10048 ^attachment immediate + ^referent @P1001 + ^structure-type ADJ +
           ^spelling red +)
    (@P1001 ^property @P1000 + ^item-type predicate + ^handle red1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @R10048 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n2> +)
    (<n2> ^handle red1 + ^item-type predicate + ^property @P1000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1082-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o4>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling on)
    (<o4> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <o1> ^lt <o3> ^lt <o2>)
    (<o1> ^structure-type P)
    (<o3> ^structure-type P)
    (<o2> ^spelling on)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<n4> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n5> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t1066-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling on)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @O42 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (<i2> ^semantics <s5> + ^lt @O42 + ^current-word <w2> +
           ^structure-type P +)
    (@O42 ^relation-type binary + ^converts-to PP + ^assigners @O43 +
           ^structure-type P + ^spelling on + ^relation @R1000 +)
    (@O43 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @O43 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t986-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling this)}
    (<w1> ^spelling this)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |?|)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W24 +
           ^not-merged-receiver <i2> +)
    (@W24 ^delay-retry true + ^structure-type QT + ^spelling |?| +)
    (<i2> ^semantics <s5> + ^lt @W24 + ^current-word <w2> +
           ^structure-type QT +)
    (<w2> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t972-1
    :chunk
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o1> ^constraint-count 0 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <t1>)
    (<t1> ^demonstrative true)
    (<s2> ^world <w1>)
    (<w1> ^{ << robot objects >> <c1> } <o3>)
    (<o3> ^object <o2>)
    (<o2> ^predicates <p1>)
    (<p1> ^indicated pointed)
    -->
    (<i1> ^referent <o2> +)
}

sp {chunk*apply*finish-comprehend*t966-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling this)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T10021 +
           ^not-merged-receiver <i2> +)
    (@T10021 ^demonstrative true + ^specifier definite + ^structure-type DP +
           ^spelling this + ^number singular +)
    (<i2> ^semantics <s5> + ^lt @T10021 + ^current-word <w2> +
           ^structure-type DP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t929-1
    :chunk
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o1> ^constraint-count 1 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <p3> ^constraint <n1>)
    (<p3> -^demonstrative true ^specifier { << definite universal >> <c4> })
    (<n1> ^handle <c3> ^property <p1>)
    (<s2> ^world <w1>)
    (<w1> ^objects <o2>)
    (<p1> ^{ << name handle >> <c1> } <c2>)
    (<o2> ^object <l1>)
    (<l1> ^predicates <p2>)
    (<p2> ^<c2> <c3>)
    -->
    (<i1> ^referent <l1> +)
}

sp {chunk*apply*finish-comprehend*t920-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling pantry)}
    (<w1> ^spelling pantry)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |?|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W24 +
           ^not-merged-receiver <i2> +)
    (@W24 ^delay-retry true + ^structure-type QT + ^spelling |?| +)
    (<i2> ^semantics <s3> + ^lt @W24 + ^current-word <w2> +
           ^structure-type QT +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t907-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling pantry)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @P90104 +
           ^not-merged-receiver <i2> +)
    (@P90104 ^referent @P4001 + ^structure-type N + ^spelling pantry +
           ^number singular +)
    (@P4001 ^property @P4000 + ^item-type predicate + ^handle pantry +)
    (@P4000 ^item-type property + ^handle name + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @P90104 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle pantry + ^item-type predicate + ^property @P4000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t895-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling inside)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling the)
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type P ^spelling inside)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n2> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<i2> ^semantics <s3> + ^proto-lt <p2> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p2> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p2> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n5> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t879-1
    :chunk
    (state <s4> ^segment <s3> ^operator <o1>)
    (<s3> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s3> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s3> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling inside)
    (<n1> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type S)
    (<s2> ^structure-type S)
    -->
    (<s3> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I15 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n2> +)
    (@I15 ^super-type @T9000 + ^spelling inside + ^relation @R1001 +)
    (<i2> ^semantics <s5> + ^proto-lt <p1> + ^super-type @T9000 +
           ^current-word <w2> + ^lt <p1> + ^structure-type P +)
    (@T9000 ^relation-type binary + ^converts-to PP + ^assigners @P90108 +
           ^structure-type P +)
    (<p1> ^spelling inside + ^relation @R1001 + ^copied yes +
           ^structure-type P + ^assigners @P90108 + ^converts-to PP +
           ^relation-type binary +)
    (@R1001 ^relation @R10006 + ^relation @R10005 + ^relation @R10004 +
           ^handle in1 + ^type relation +)
    (@R10006 ^avg 0. + ^axis y + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10005 ^avg 0. + ^axis z + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@R10004 ^avg 0. + ^axis x + ^bottom 0. + ^top 0. + ^squaredsum 0. +
           ^sum 0. + ^count 0 + ^type aligned +)
    (@P90108 ^relative-position after + ^syntactic-structure head +
           ^required true + ^structure-type DP +)
    (<n2> ^structure-type DP + ^parent-receiver <i2> + ^lt @P90108 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t865-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^current-item <i2> ^prior-item <i1>)
    (<i2> ^structure-type IS-V ^structure-type <c6>)
    (<i1> ^current-word <w2> ^lt <w1> ^structure-type <c5>
          ^structure-type <c3> ^structure-type <c1> ^lt <w3>)
    (<w2> ^first-word true ^spelling <c2>)
    (<w1> ^spelling what)
    (<s2> ^not-merged-receiver <i1> ^retrieved-stack <n1>)
    (<n1> ^prior <s1>)
    (<s1> ^item <i1>)
    (<w3> ^spelling <c4>)
    -->
    (<s2> ^comprehension-structure <c7> + ^construction-comprehended <c8> +)
    (<c7> ^processed true + ^type construction + ^words prior-word +
           ^successful-query <x1> + ^retrieved-lexical-item @S77 +
           ^not-merged-receiver <i3> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> + ^remove-receiver <i1> +)
    (<x1> ^prior-word-first true + ^prior-word what + ^current-word IS-V +)
    (<n2> ^structure-type IS-V + ^parent-receiver <i3> + ^lt @I89 +
           ^current-word @S77 +)
    (<n3> ^structure-type QT + ^parent-receiver <i3> + ^lt @I88 +
           ^current-word @S77 +)
    (<n4> ^structure-type DP + ^parent-receiver <i3> + ^lt @I87 +
           ^current-word @S77 +)
    (<i3> ^lt @S77 + ^current-word @S77 + ^structure-type S +)
    (@S77 ^processed true + ^message-type what-is-question + ^assigners @I89 +
           ^assigners @I88 + ^assigners @I87 + ^assigners @I86 +
           ^prior-word-first true + ^construction *-What-is-PP/DP-QT +
           ^prior-word what + ^current-word IS-V + ^structure-type S +)
    (@I89 ^syntactic-structure predicate + ^required true +
           ^structure-type IS-V +)
    (@I88 ^syntactic-structure terminator + ^required true +
           ^structure-type QT +)
    (@I87 ^exclusive @I86 + ^optional true + ^relative-position after +
           ^syntactic-structure head + ^semantic-structure arg1 +
           ^structure-type DP +)
    (@I86 ^exclusive @I87 + ^optional true + ^relative-position after +
           ^syntactic-structure complement2 + ^semantic-structure relation +
           ^structure-type PP +)
    (<n5> ^structure-type PP + ^parent-receiver <i3> + ^lt @I86 +
           ^current-word @S77 +)
    (<c8> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t851-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w3> ^retrieved-stack <s1>)
    (<w3> ^spelling what)
    (<o1> ^name comprehend-word ^current-word <w5>)
    (<w5> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w5> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <w1> ^lt <w4> ^lt <w2>)
    (<w1> ^structure-type QP)
    (<w4> ^structure-type QP)
    (<w2> ^spelling what)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w5> +
           ^structure-type IS-V +)
    (<w5> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t839-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling what)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W19 +
           ^not-merged-receiver <i1> +)
    (@W19 ^question true + ^structure-type QP + ^spelling what +
           ^number singular +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @W19 + ^current-word <w1> +
           ^structure-type QP +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t747-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s2> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling taupe)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <n1>)
    (<n1> ^spelling taupe)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t708-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling color)}
    (<w1> ^spelling color)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type CP)
    (<s2> ^structure-type CP)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t694-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling color)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type CP)
    (<s2> ^structure-type CP)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C63 +
           ^not-merged-receiver <i2> +)
    (@C63 ^syntactic-referent-type ADJ + ^referent @C64 + ^structure-type N +
           ^spelling color + ^number singular +)
    (@C64 ^property @C62 + ^handle color +)
    (@C62 ^handle concept + ^type conceptual +)
    (<i2> ^semantics <s6> + ^lt @C63 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle color + ^property @C62 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t677-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s2> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling mauve)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <n1>)
    (<n1> ^spelling mauve)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t636-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling color)}
    (<w1> ^spelling color)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t623-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling color)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @C63 +
           ^not-merged-receiver <i2> +)
    (@C63 ^syntactic-referent-type ADJ + ^referent @C64 + ^structure-type N +
           ^spelling color + ^number singular +)
    (@C64 ^property @C62 + ^handle color +)
    (@C62 ^handle concept + ^type conceptual +)
    (<i2> ^semantics <s3> + ^lt @C63 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle color + ^property @C62 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t605-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type ADJ ^current-word <w1>)
    (<i2> ^structure-type IS-V)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @S75 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> +)
    (<x1> ^prior-word-first true + ^prior-word ADJ + ^current-word IS-V +)
    (<n1> ^structure-type IS-V + ^parent-receiver <i3> + ^lt @I80 +
           ^current-word @S75 +)
    (<n2> ^structure-type ADJ + ^parent-receiver <i3> + ^lt @I82 +
           ^current-word @S75 +)
    (<i3> ^lt @S75 + ^current-word @S75 + ^structure-type CP +)
    (@S75 ^processed true + ^message-type adjective-definition +
           ^assigners @I82 + ^assigners @I81 + ^assigners @I80 +
           ^prior-word-first true + ^construction *-ADJ-is-DP +
           ^prior-word ADJ + ^current-word IS-V + ^structure-type CP +)
    (@I81 ^referent-type literal + ^relative-position after +
           ^syntactic-structure predicate + ^semantic-structure property +
           ^required true + ^structure-type DP +)
    (@I80 ^before @I81 + ^after @I82 + ^syntactic-structure predicate +
           ^required true + ^structure-type IS-V +)
    (@I82 ^referent-type literal + ^before @I80 + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type ADJ +)
    (<n3> ^structure-type DP + ^parent-receiver <i3> + ^lt @I81 +
           ^current-word @S75 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t591-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling green)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <g1> ^lt <g3> ^lt <g2>)
    (<g1> ^structure-type ADJ)
    (<g3> ^structure-type ADJ)
    (<g2> ^spelling green)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t579-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling green)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @G10001 +
           ^not-merged-receiver <i1> +)
    (@G10001 ^attachment immediate + ^referent @P1004 + ^structure-type ADJ +
           ^spelling green +)
    (@P1004 ^property @P1000 + ^item-type predicate + ^handle green1 +)
    (@P1000 ^item-type property + ^handle color + ^type visual +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @G10001 +
           ^current-word <w1> + ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle green1 + ^item-type predicate + ^property @P1000 +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t549-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling location)}
    (<w1> ^spelling location)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t536-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling location)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @L12 +
           ^not-merged-receiver <i2> +)
    (@L12 ^syntactic-referent-type DP + ^referent @P7002 + ^structure-type N +
           ^spelling location + ^number singular +)
    (@P7002 ^property @P7000 + ^handle location +)
    (@P7000 ^item-type property + ^handle category + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @L12 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^handle location + ^property @P7000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t516-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s2> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling study)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <n1>)
    (<n1> ^spelling study)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t474-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling shape)}
    (<w1> ^spelling shape)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s3> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t461-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
    (<s1> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <n1>)
    (<w1> ^spelling a)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling shape)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<n1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling a)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @S23 +
           ^not-merged-receiver <i2> +)
    (@S23 ^syntactic-referent-type N + ^referent @P2000 + ^structure-type N +
           ^spelling shape + ^number singular +)
    (@P2000 ^item-type property + ^handle shape + ^type visual +)
    (<i2> ^semantics <s3> + ^lt @S23 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n2> +)
    (<n2> ^type visual + ^handle shape + ^item-type property +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t449-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w2> -^first-word true ^spelling a)
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type CP)
    (<s2> ^structure-type CP)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10049 +
           ^not-merged-receiver <i2> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@A10049 ^super-type @D1001 + ^specifier indefinite + ^spelling a +
           ^number singular +)
    (<n1> ^structure-type PP + ^parent-receiver <i2> + ^lt @D1005 +
           ^current-word <w2> +)
    (<n2> ^structure-type N + ^parent-receiver <i2> + ^lt @D1004 +
           ^current-word <w2> +)
    (<n3> ^structure-type RCP + ^parent-receiver <i2> + ^lt @D1003 +
           ^current-word <w2> +)
    (<i2> ^semantics <s6> + ^proto-lt <p1> + ^super-type @D1001 +
           ^current-word <w2> + ^lt <p1> + ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling a + ^number singular + ^specifier indefinite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type ADJ + ^parent-receiver <i2> + ^lt @D1002 +
           ^current-word <w2> +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t430-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> -^structure-type <s*1> ^current-word <w1>)
    (<i2> ^structure-type IS-V)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @S69 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +)
    (<x1> ^prior-word-first true + ^prior-word U + ^current-word IS-V +)
    (<n1> ^structure-type IS-V + ^parent-receiver <i3> + ^lt @I23 +
           ^current-word @S69 +)
    (<n2> ^structure-type N + ^parent-receiver <i3> + ^lt @I25 +
           ^current-word @S69 +)
    (<n3> ^structure-type U + ^parent-receiver <i3> + ^lt @I22 +
           ^current-word @S69 +)
    (<i3> ^lt @S69 + ^current-word @S69 + ^structure-type CP +)
    (@S69 ^processed true + ^message-type adjective-definition +
           ^assigners @I25 + ^assigners @I24 + ^assigners @I23 +
           ^assigners @I22 + ^prior-word-first true +
           ^construction *-U-is-DP + ^prior-word U + ^current-word IS-V +
           ^structure-type CP +)
    (@I22 ^predicted-structure-type N + ^predicted-structure-type ADJ +
           ^referent-type literal + ^before @I23 + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type U +)
    (@I23 ^lexical-item-spelling is + ^before @I24 + ^after @I22 +
           ^syntactic-structure predicate + ^required true +
           ^structure-type IS-V +)
    (@I24 ^referent-type literal + ^exclusive @I25 + ^optional true +
           ^relative-position after + ^syntactic-structure predicate +
           ^semantic-structure property + ^structure-type DP +)
    (@I25 ^referent-type literal + ^exclusive @I24 + ^optional true +
           ^relative-position after + ^syntactic-structure predicate +
           ^semantic-structure property + ^structure-type N +)
    (<n4> ^structure-type DP + ^parent-receiver <i3> + ^lt @I24 +
           ^current-word @S69 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t415-1
    :chunk
    (state <s3> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s2> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling octagon)
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <n1>)
    (<n1> ^spelling octagon)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t378-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling yes)}
    (<w1> ^spelling yes)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <y1> ^lt <y2>)
    (<y1> ^structure-type CP)
    (<y2> ^structure-type CP)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t366-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^first-word true ^spelling yes ^next <w1> ^spelling <c1>)
    (<s1> ^current-word <w2> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<w1> ^spelling |.|)
    -->
    (<s1> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^retrieved-lexical-item @Y10006 +
           ^not-merged-receiver <i1> +)
    (@Y10006 ^spelling-single-word yes + ^message-type yes +
           ^structure-type CP +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @Y10006 +
           ^current-word <w2> + ^structure-type CP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t343-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling no)}
    (<w1> ^spelling no)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <n1> ^lt <n2>)
    (<n1> ^structure-type CP)
    (<n2> ^structure-type CP)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t331-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^first-word true ^spelling no ^next <w1> ^spelling <c1>)
    (<s1> ^current-word <w2> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<w1> ^spelling |.|)
    -->
    (<s1> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^retrieved-lexical-item @N10023 +
           ^not-merged-receiver <i1> +)
    (@N10023 ^spelling-single-word no + ^message-type no +
           ^structure-type CP +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @N10023 +
           ^current-word <w2> + ^structure-type CP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t301-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling are)}
    (<w1> ^spelling are)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling done)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I6 +
           ^not-merged-receiver <i2> +)
    (@I6 ^referent @P15001 + ^structure-type ADJ + ^spelling done +)
    (@P15001 ^property @P15000 + ^item-type predicate +
           ^handle task-completed +)
    (@P15000 ^item-type property + ^handle property + ^type visual +)
    (<i2> ^semantics <s6> + ^lt @I6 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle task-completed + ^item-type predicate + ^property @P15000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*tested-referent*copy-proto-referent*no-multiple*onc*t286-1
    :chunk
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<o1> ^constraint-count 0 ^name ground-referent ^constraints <i1>)
    (<i1> ^lt <y1>)
    (<y1> -^demonstrative true ^specifier personal)
    (<s2> ^world <w1>)
    (<w1> ^robot <r1>)
    -->
    (<i1> ^referent <r1> +)
}

sp {chunk*apply*finish-comprehend*t278-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling you)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling are)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <y1> ^lt <y3> ^lt <y2>)
    (<y1> ^structure-type DP)
    (<y3> ^structure-type DP)
    (<y2> ^spelling you)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @A10053 +
           ^not-merged-receiver <i2> +)
    (@A10053 ^tense present + ^structure-type IS-V + ^spelling are +
           ^number plural +)
    (<i2> ^semantics <s4> + ^lt @A10053 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t266-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling you)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @Y10007 +
           ^not-merged-receiver <i1> +)
    (@Y10007 ^super-converts-to CP + ^specifier personal + ^referent @I114 +
           ^structure-type DP + ^spelling you + ^number singular +)
    (@I114 ^property @P90124 + ^handle rosie +)
    (@P90124 ^handle handle + ^type visual +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @Y10007 +
           ^current-word <w1> + ^structure-type DP + ^lt-referent <n1> +)
    (<n1> ^handle rosie + ^property @P90124 +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t241-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling finished)}
    (<w1> ^spelling finished)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <f1> ^lt <f2>)
    (<f1> ^structure-type CP)
    (<f2> ^structure-type CP)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t229-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^first-word true ^spelling finished ^next <w1> ^spelling <c1>)
    (<s1> ^current-word <w2> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<w1> ^spelling |.|)
    -->
    (<s1> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^retrieved-lexical-item @F22 +
           ^not-merged-receiver <i1> +)
    (@F22 ^spelling-single-word finished + ^message-type finished +
           ^structure-type CP +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @F22 + ^current-word <w2> +
           ^structure-type CP +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t204-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling done)}
    (<w1> ^spelling done)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t190-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling done)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I6 +
           ^not-merged-receiver <i2> +)
    (@I6 ^referent @P15001 + ^structure-type ADJ + ^spelling done +)
    (@P15001 ^property @P15000 + ^item-type predicate +
           ^handle task-completed +)
    (@P15000 ^item-type property + ^handle property + ^type visual +)
    (<i2> ^semantics <s6> + ^lt @I6 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle task-completed + ^item-type predicate + ^property @P15000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t145-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling finished)}
    (<w1> ^spelling finished)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s6> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t131-1
    :chunk
    (state <s5> ^segment <s4> ^operator <o1>)
    (<s4> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s3>)
   -{ (<s4> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling is)}
    (<w1> ^spelling is)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling finished)
   -{ (<s4> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s3> ^item <i1>)
    (<i1> ^lt <s1> ^lt <s2>)
    (<s1> ^structure-type C)
    (<s2> ^structure-type C)
    -->
    (<s4> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I7 +
           ^not-merged-receiver <i2> +)
    (@I7 ^referent @P15001 + ^structure-type ADJ + ^spelling finished +)
    (@P15001 ^property @P15000 + ^item-type predicate +
           ^handle task-completed +)
    (@P15000 ^item-type property + ^handle property + ^type visual +)
    (<i2> ^semantics <s6> + ^lt @I7 + ^current-word <w2> +
           ^structure-type ADJ + ^lt-referent <n1> +)
    (<n1> ^handle task-completed + ^item-type predicate + ^property @P15000 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t116-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type DP ^current-word <w1>)
    (<i2> ^structure-type IS-V)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @S70 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +
           ^not-merged-assigner <n3> + ^not-merged-assigner <n4> +
           ^not-merged-assigner <n5> + ^not-merged-assigner <n6> +
           ^not-merged-assigner <n7> + ^not-merged-assigner <n8> +
           ^not-merged-assigner <n9> + ^not-merged-assigner <n10> +
           ^not-merged-assigner <n11> + ^not-merged-assigner <n12> +
           ^not-merged-assigner <n13> + ^not-merged-assigner <n14> +)
    (<x1> ^prior-word-first true + ^prior-word DP + ^current-word IS-V +)
    (<n1> ^structure-type V-AUX + ^parent-receiver <i3> + ^lt @I27 +
           ^current-word @S70 +)
    (<n2> ^structure-type PP + ^parent-receiver <i3> + ^lt @I34 +
           ^current-word @S70 +)
    (<n3> ^structure-type N + ^parent-receiver <i3> + ^lt @I33 +
           ^current-word @S70 +)
    (<n4> ^structure-type IS-V + ^parent-receiver <i3> + ^lt @I29 +
           ^current-word @S70 +)
    (<n5> ^structure-type U + ^parent-receiver <i3> + ^lt @I35 +
           ^current-word @S70 +)
    (<n6> ^structure-type DP + ^parent-receiver <i3> + ^lt @I32 +
           ^current-word @S70 +)
    (<n7> ^structure-type C-ADJ-P + ^parent-receiver <i3> + ^lt @I36 +
           ^current-word @S70 +)
    (<n8> ^structure-type RC + ^parent-receiver <i3> + ^lt @I37 +
           ^current-word @S70 +)
    (<n9> ^structure-type ADV + ^parent-receiver <i3> + ^lt @I30 +
           ^current-word @S70 +)
    (<n10> ^structure-type CONJP + ^parent-receiver <i3> + ^lt @I28 +
           ^current-word @S70 +)
    (<n11> ^structure-type V + ^parent-receiver <i3> + ^lt @I39 +
           ^current-word @S70 +)
    (<n12> ^structure-type DP + ^parent-receiver <i3> + ^lt @I26 +
           ^current-word @S70 +)
    (<n13> ^structure-type CONJP + ^parent-receiver <i3> + ^lt @I38 +
           ^current-word @S70 +)
    (<i3> ^lt @S70 + ^current-word @S70 + ^structure-type C +)
    (@S70 ^processed true + ^converts-to CP +
           ^message-type object-description + ^assigners @I39 +
           ^assigners @I38 + ^assigners @I37 + ^assigners @I36 +
           ^assigners @I35 + ^assigners @I34 + ^assigners @I33 +
           ^assigners @I32 + ^assigners @I31 + ^assigners @I30 +
           ^assigners @I29 + ^assigners @I28 + ^assigners @I27 +
           ^assigners @I26 + ^prior-word-first true +
           ^construction *-DP-is-ADJ/DP/PP/CONJP/RC + ^prior-word DP +
           ^current-word IS-V + ^structure-type C +)
    (@I38 ^copy-structure predicate + ^repeatable true + ^optional true +
           ^syntactic-structure predicate + ^semantic-structure *copy* +
           ^structure-type CONJP +)
    (@I30 ^referent-type literal + ^optional true + ^relative-position after +
           ^syntactic-structure adverb-modifier +
           ^semantic-structure modifier + ^structure-type ADV +)
    (@I28 ^copy-structure arg1 + ^repeatable true + ^optional true +
           ^relative-position before + ^before @I29 + ^after @I26 +
           ^syntactic-structure head + ^semantic-structure *copy* +
           ^structure-type CONJP +)
    (@I37 ^embed-structure subclause + ^exclusive @I39 + ^exclusive @I36 +
           ^exclusive @I35 + ^exclusive @I34 + ^exclusive @I33 +
           ^exclusive @I32 + ^exclusive @I31 + ^optional true +
           ^relative-position after + ^syntactic-structure predicate +
           ^semantic-structure *embed* + ^structure-type RC +)
    (@I31 ^referent-type literal + ^exclusive @I39 + ^exclusive @I37 +
           ^exclusive @I36 + ^exclusive @I35 + ^exclusive @I34 +
           ^exclusive @I33 + ^exclusive @I32 + ^optional true +
           ^relative-position after + ^syntactic-structure predicate +
           ^semantic-structure predicate + ^structure-type ADJ +)
    (@I32 ^referent-type literal + ^exclusive @I39 + ^exclusive @I37 +
           ^exclusive @I36 + ^exclusive @I35 + ^exclusive @I34 +
           ^exclusive @I33 + ^exclusive @I31 + ^optional true +
           ^relative-position after + ^syntactic-structure predicate +
           ^semantic-structure predicate + ^structure-type DP +)
    (@I33 ^referent-type literal + ^exclusive @I39 + ^exclusive @I37 +
           ^exclusive @I36 + ^exclusive @I35 + ^exclusive @I34 +
           ^exclusive @I32 + ^exclusive @I31 + ^optional true +
           ^relative-position after + ^syntactic-structure predicate +
           ^semantic-structure predicate + ^structure-type N +)
    (@I34 ^exclusive @I39 + ^exclusive @I37 + ^exclusive @I36 +
           ^exclusive @I35 + ^exclusive @I33 + ^exclusive @I32 +
           ^exclusive @I31 + ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^semantic-structure relation +
           ^structure-type PP +)
    (@I35 ^predicted-structure-type ADJ + ^referent-type literal +
           ^exclusive @I39 + ^exclusive @I37 + ^exclusive @I36 +
           ^exclusive @I34 + ^exclusive @I33 + ^exclusive @I32 +
           ^exclusive @I31 + ^optional true + ^relative-position after +
           ^syntactic-structure predicate + ^semantic-structure predicate +
           ^structure-type U +)
    (@I39 ^referent-type literal + ^strip-assigners true + ^exclusive @I37 +
           ^exclusive @I36 + ^exclusive @I34 + ^exclusive @I33 +
           ^exclusive @I32 + ^exclusive @I31 + ^optional true +
           ^relative-position after + ^syntactic-structure predicate +
           ^semantic-structure predicate + ^structure-type V +)
    (@I36 ^exclusive @I39 + ^exclusive @I37 + ^exclusive @I35 +
           ^exclusive @I34 + ^exclusive @I33 + ^exclusive @I32 +
           ^exclusive @I31 + ^optional true + ^relative-position after +
           ^syntactic-structure predicate + ^semantic-structure predicate +
           ^structure-type C-ADJ-P +)
    (@I29 ^before @I37 + ^syntactic-structure predicate + ^required true +
           ^structure-type IS-V +)
    (@I27 ^optional true + ^relative-position after +
           ^syntactic-structure nil + ^semantic-structure modifier +
           ^structure-type V-AUX +)
    (@I26 ^relative-position before + ^syntactic-structure head +
           ^semantic-structure arg1 + ^required true + ^structure-type DP +)
    (<n14> ^structure-type ADJ + ^parent-receiver <i3> + ^lt @I31 +
           ^current-word @S70 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t90-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling task)}
    (<w1> ^spelling task)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling is)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <p1>)
    (<p1> ^structure-type D)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @I8 +
           ^not-merged-receiver <i2> +)
    (@I8 ^tense present + ^structure-type IS-V + ^spelling is +
           ^number singular +)
    (<i2> ^semantics <s4> + ^lt @I8 + ^current-word <w2> +
           ^structure-type IS-V +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t77-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
    (<w1> ^spelling the)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling task)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> -^merged-with true ^lt <p1>)
    (<p1> ^structure-type D ^spelling the)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1009 +
           ^not-merged-receiver <i2> +)
    (@T1009 ^syntactic-referent-type DP + ^object-feature handle +
           ^referent @T1008 + ^structure-type N + ^spelling task +
           ^number singular +)
    (@T1008 ^property @C62 + ^handle task1 +)
    (@C62 ^handle concept + ^type conceptual +)
    (<i2> ^semantics <s4> + ^lt @T1009 + ^current-word <w2> +
           ^structure-type N + ^lt-referent <n1> +)
    (<n1> ^handle task1 + ^property @C62 +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t65-1
    :chunk
    (state <s2> ^segment <s1> ^operator <o1>)
   -{ (<s1> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling *)}
    (<s1> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<o1> ^name comprehend-word ^current-word <w1>)
   -{ (<s1> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w1> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<w1> ^first-word true ^spelling the)
    -->
    (<s1> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @T1004 +
           ^not-merged-receiver <i1> + ^not-merged-assigner <n1> +
           ^not-merged-assigner <n2> + ^not-merged-assigner <n3> +
           ^not-merged-assigner <n4> +)
    (@T1004 ^super-type @D1001 + ^specifier definite + ^spelling the +
           ^number singular +)
    (<n1> ^structure-type ADJ + ^parent-receiver <i1> + ^lt @D1002 +
           ^current-word <w1> +)
    (<n2> ^structure-type N + ^parent-receiver <i1> + ^lt @D1004 +
           ^current-word <w1> +)
    (<n3> ^structure-type PP + ^parent-receiver <i1> + ^lt @D1005 +
           ^current-word <w1> +)
    (<i1> ^first-word true + ^semantics <s3> + ^proto-lt <p1> +
           ^super-type @D1001 + ^current-word <w1> + ^lt <p1> +
           ^structure-type D +)
    (@D1001 ^super-converts-to CP + ^converts-to DP + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^structure-type D +)
    (<p1> ^spelling the + ^number singular + ^specifier definite +
           ^copied yes + ^structure-type D + ^assigners @D1005 +
           ^assigners @D1004 + ^assigners @D1003 + ^assigners @D1002 +
           ^converts-to DP + ^super-converts-to CP +)
    (@D1002 ^repeatable true + ^optional true + ^relative-position after +
           ^before @D1005 + ^before @D1004 + ^before @D1003 +
           ^syntactic-structure adjoin + ^structure-type ADJ +)
    (@D1004 ^relative-position after + ^before @D1005 + ^before @D1003 +
           ^syntactic-structure head + ^required true + ^structure-type N +)
    (@D1005 ^optional true + ^relative-position after + ^before @D1003 +
           ^syntactic-structure complement + ^structure-type PP +)
    (@D1003 ^optional true + ^relative-position after +
           ^syntactic-structure complement + ^structure-type RCP +)
    (<n4> ^structure-type RCP + ^parent-receiver <i1> + ^lt @D1003 +
           ^current-word <w1> +)
    (<w1> ^processed true +)
}

sp {chunk*apply*finish-comprehend*construction*t38-1
    :chunk
    (state <s1> ^operator <o1> ^segment <s2>)
    (<o1> ^name comprehend-construction ^prior-item <i1> ^current-item <i2>)
    (<i1> ^structure-type CP ^current-word <w1>)
    (<i2> ^structure-type T)
    (<w1> ^first-word true)
    -->
    (<s2> ^comprehension-structure <c1> + ^construction-comprehended <c2> +)
    (<c1> ^processed true + ^type construction + ^successful-query <x1> +
           ^retrieved-lexical-item @C61 + ^not-merged-receiver <i3> +
           ^not-merged-assigner <n1> + ^not-merged-assigner <n2> +)
    (<x1> ^prior-word-first true + ^prior-word CP + ^current-word T +)
    (<n1> ^structure-type T + ^parent-receiver <i3> + ^lt @A10034 +
           ^current-word @C61 +)
    (<i3> ^lt @C61 + ^current-word @C61 + ^structure-type S +)
    (@C61 ^processed true + ^assigners @A10034 + ^assigners @A10033 +
           ^prior-word-first false + ^prior-word-first true +
           ^construction CP-T + ^prior-word CP + ^current-word T +
           ^structure-type S +)
    (@A10034 ^after @A10033 + ^syntactic-structure terminator +
           ^required true + ^structure-type T +)
    (@A10033 ^syntactic-structure sentence + ^semantic-structure *copy* +
           ^required true + ^structure-type CP +)
    (<n2> ^structure-type CP + ^parent-receiver <i3> + ^lt @A10033 +
           ^current-word @C61 +)
    (<c2> ^current-item <i2> + ^prior-item <i1> +)
}

sp {chunk*apply*finish-comprehend*t27-1
    :chunk
    (state <s3> ^segment <s2> ^operator <o1>)
    (<s2> -^retry <r*4> ^prior-word <w1> ^retrieved-stack <s1>)
   -{ (<s2> ^retrieved-stack <r*4>)
      (<r*4> ^item <i*1>)
      (<i*1> ^lt <l*1>)
      (<l*1> ^spelling done)}
    (<w1> ^spelling done)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> -^first-word true ^spelling |.|)
   -{ (<s2> ^prior-word <p*1>)
      (<p*1> ^spelling *)
      (<w2> ^next <n*2>)
      (<n*2> ^spelling |.|)}
    (<s1> ^item <i1>)
    (<i1> ^lt <d1> ^lt <d2>)
    (<d1> ^structure-type CP)
    (<d2> ^structure-type CP)
    -->
    (<s2> ^comprehension-structure <c1> +)
    (<c1> ^processed true + ^type word + ^retrieved-lexical-item @W23 +
           ^not-merged-receiver <i2> +)
    (@W23 ^delay-retry true + ^structure-type T + ^spelling |.| +)
    (<i2> ^semantics <s4> + ^lt @W23 + ^current-word <w2> +
           ^structure-type T +)
    (<w2> ^processed true +)
}

sp {chunk*apply*finish-comprehend*t15-1
    :chunk
    (state <s2> ^operator <o1> ^segment <s1>)
    (<o1> ^name comprehend-word ^current-word <w2>)
    (<w2> ^first-word true ^spelling done ^next <w1> ^spelling <c1>)
    (<s1> ^current-word <w2> ^prior-word <f1>)
    (<f1> ^spelling *)
    (<w1> ^spelling |.|)
    -->
    (<s1> ^comprehension-structure <c2> +)
    (<c2> ^processed true + ^type word + ^retrieved-lexical-item @D1018 +
           ^not-merged-receiver <i1> +)
    (@D1018 ^spelling-single-word done + ^message-type finished +
           ^structure-type CP +)
    (<i1> ^first-word true + ^semantics <s3> + ^lt @D1018 +
           ^current-word <w2> + ^structure-type CP +)
    (<w2> ^processed true +)
}

sp {chunk*elaborate*clear
    :chunk
    (state <s> ^name game-search ^gtype <gtype> ^<gtype> <g*1>)
    (<g*1> ^condition <co>)
    (<co> ^name clear ^type concept ^attribute predicate)
    -->
    (<s> ^predicate <T5> + ^gtype predicate +)
    (<T5> ^primary-rtype single + ^aname clear + ^nlp-set <nlps> +
           ^formated predicate + ^parameter-set <P124> +
           ^potential-args <P125> + ^link <co> +)
    (<P124> ^argnum 1 +)
    (<nlps> ^conditions <cs> + ^aname clear + ^name clear +)
    (<cs> ^result <r4> + ^name below1 + ^parameter <param1> + ^rtype single +
           ^negative true + ^args <ag> + ^type state-pair +
           ^attribute prepositions +)
    (<r4> ^set <res4> +)
    (<ag> ^1 <c5> + ^2 <c6> + ^num 2 +)
    (<param1> ^1 <p11> + ^num 1 +)
    (<p11> ^param-id 1 + ^type single +)
    (<c5> ^args <A57> + ^attribute input-arg + ^name object +
           ^negative false + ^result <r5> + ^parameter <P225> +
           ^rtype single +)
    (<P225> ^1 <P224> + ^num 1 +)
    (<r5> ^set <res0> +)
    (<P224> ^param-id 1 + ^type single +)
    (<c6> ^args <A56> + ^attribute primitive + ^name object +
           ^negative false + ^parameter <P226> + ^result <R96> +
           ^rtype single + ^type attribute +)
    (<P226> ^num 0 +)
    (<R96> ^set <S156> +)
}



