sp {chunkx2*__task__goal__elaboration__*complete-learn-desired-elaboration-rule*OpNoChange*t2833-1
    :chunk
    (state <s1> ^world <w1> -^copy-task-goal <c1> ^task-operator <t1>
          ^name <n1> ^problem-space <p1>)
    (<t1> ^current-subgoal turn-off1sg1 ^task-handle turn-off1 ^arg1 <a1>
          ^name <n1>)
    (<a1> ^arg-type object ^id <i1>)
    (<p1> ^name action)
    -->
    (<s1> ^desired <d1>)
    (<d1> ^pred-count 1 ^1 <i2> ^handle turn-off1sg1)
    (<i2> ^type state ^handle off2 ^property-handle activation1 ^1 <i1>)
}

sp {chunkx2*__task__goal__elaboration__*complete-learn-desired-elaboration-rule*OpNoChange*t2628-1
    :chunk
    (state <s1> ^world <w1> -^copy-task-goal <c1> ^task-operator <t1>
          ^name <n1> ^problem-space <p1>)
    (<t1> ^current-subgoal turn-on1sg1 ^task-handle turn-on1 ^arg1 <a1>
          ^name <n1>)
    (<a1> ^arg-type object ^id <i1>)
    (<p1> ^name action)
    -->
    (<s1> ^desired <d1>)
    (<d1> ^pred-count 1 ^1 <i2> ^handle turn-on1sg1)
    (<i2> ^type state ^handle on2 ^property-handle activation1 ^1 <i1>)
}

sp {chunkx2*__task__goal__elaboration__*complete-learn-desired-elaboration-rule*OpNoChange*t1635-1
    :chunk
    (state <s1> ^world <w1> -^copy-task-goal <c1> ^task-operator <t1>
          ^name <n1> ^problem-space <p1>)
    (<t1> ^current-subgoal close1sg1 ^task-handle close1 ^arg1 <a1> ^name <n1>)
    (<a1> ^arg-type object ^id <i1>)
    (<p1> ^name action)
    -->
    (<s1> ^desired <d1>)
    (<d1> ^pred-count 1 ^1 <i2> ^handle close1sg1)
    (<i2> ^type state ^handle closed2 ^property-handle door2 ^1 <i1>)
}

sp {chunkx2*__task__goal__elaboration__*complete-learn-desired-elaboration-rule*OpNoChange*t1002-1
    :chunk
    (state <s1> ^world <w1> -^copy-task-goal <c1> ^task-operator <t1>
          ^name <n1> ^problem-space <p1>)
    (<t1> ^current-subgoal open1sg1 ^task-handle open1 ^arg1 <a1> ^name <n1>)
    (<a1> ^arg-type object ^id <i1>)
    (<p1> ^name action)
    -->
    (<s1> ^desired <d1>)
    (<d1> ^pred-count 1 ^1 <i2> ^handle open1sg1)
    (<i2> ^type state ^handle open2 ^property-handle door2 ^1 <i1>)
}

sp {chunkx2*__task__goal__elaboration__*complete-learn-desired-elaboration-rule*OpNoChange*t812-1
    :chunk
    (state <s1> ^world <w1> -^copy-task-goal <c1> ^task-operator <t1>
          ^name <n1> ^problem-space <p1>)
    (<t1> ^current-subgoal put-down1sg1 ^task-handle put-down1 ^arg2 <a1>
          ^arg2 <a2> ^arg1 <a3> ^name <n1>)
    (<a1> ^arg-type partial-predicate ^handle <h1>)
    (<a2> ^arg-type partial-predicate ^2 <i2>)
    (<a3> ^arg-type object ^id <i1>)
    (<p1> ^name action)
    -->
    (<s1> ^desired <d1>)
    (<d1> ^1 <i3> ^pred-count 1 ^handle put-down1sg1)
    (<i3> ^2 <i2> ^1 <i1> ^handle <h1> ^type relation)
}

sp {chunk*__instantiate__task__goal__application__*complete-instantiate-task-goal*OpNoChange*t811-1
    :chunk
    (state <s1> ^operator <o1>)
    (<o1> ^name instantiate-task-goal ^general-goal-rep <g1>
          ^reference-tcn-proc <r1> ^reference-task-op <r2> ^destination <d1>
          ^world <w1>)
    (<g1> ^pred-count 1 ^1 <i1>)
    (<i1> ^type relation ^id <i2> ^2 <i3> ^1 <i4>)
    (<r2> ^<a1> <a2> ^<a4> <a5> ^<a7> <a8>)
    (<a2> ^arg-type object ^id <i5>)
    (<r1> ^<a1> <a3> ^<a4> <a6> ^<a7> <a9>)
    (<a3> ^arg-type object ^id <i4>)
    (<a5> ^arg-type partial-predicate ^2 <i6>)
    (<a6> ^arg-type partial-predicate ^2 <i3>)
    (<a8> ^arg-type partial-predicate ^handle <h1>)
    (<a9> ^arg-type partial-predicate ^id <i2>)
    -->
    (<d1> ^instantiation <i7>)
    (<i7> ^1 <i8> ^pred-count 1)
    (<i8> ^2 <i6> ^1 <i5> ^handle <h1> ^type relation)
}

sp {chunkx2*__task__goal__elaboration__*complete-learn-desired-elaboration-rule*OpNoChange*t547-1
    :chunk
    (state <s1> ^world <w1> -^copy-task-goal <c1> ^task-operator <t1>
          ^name <n1> ^problem-space <p1>)
    (<t1> ^current-subgoal pick-up1sg1 ^task-handle pick-up1 ^arg1 <a1>
          ^name <n1>)
    (<a1> ^arg-type object ^id <i1>)
    (<p1> ^name action)
    -->
    (<s1> ^desired <d1>)
    (<d1> ^1 <i2> ^pred-count 1 ^handle pick-up1sg1)
    (<i2> ^1 <i1> ^property-handle arm-status ^handle grabbed ^type state)
}

sp {chunk*__instantiate__task__goal__application__*complete-instantiate-task-goal*OpNoChange*t546-1
    :chunk
    (state <s1> ^operator <o1>)
    (<o1> ^name instantiate-task-goal ^general-goal-rep <g1>
          ^reference-tcn-proc <r1> ^reference-task-op <r2> ^destination <d1>
          ^world <w1>)
    (<g1> ^pred-count 1 ^1 <i1>)
    (<i1> ^type state ^id <i2> ^1 <i3>)
    (<i2> ^default <d2>)
    (<d2> ^predicate-handle <p1> ^property-handle <p2>)
    (<r2> ^<a1> <a2>)
    (<a2> ^arg-type object ^id <i4>)
    (<r1> ^<a1> <a3>)
    (<a3> ^arg-type object ^id <i3>)
    -->
    (<d1> ^instantiation <i5>)
    (<i5> ^1 <i6> ^pred-count 1)
    (<i6> ^1 <i4> ^property-handle <p2> ^handle <p1> ^type state)
}



