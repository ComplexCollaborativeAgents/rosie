sp {learn-goal-definition*propose*store-goal
   (state <s> ^name learn-goal-definition
              ^generalized-goal <goal1>
              ^goal-structure <goal>
             -^stored <goal>)
-->
   (<s> ^operator <o> + <)
   (<o> ^name store-goal
        ^goal1 <goal1>)
}

sp {learn-goal-definition*apply*store-goal
   (state <s> ^name learn-goal-definition
              ^operator <o>
              ^goal-structure <goal>
              ^task-concept-network <tcn>
              ^smem.command <cmd>)
   (<o> ^name store-goal
        ^goal1 <goal1>)
-->
   (<tcn> ^goal <goal>)
   (<goal> ^subgoal-count 1
           ^1 <goal1>)
   (<goal1> ^handle (make-constant-symbol |tasksubgoal|))
   (<cmd> ^store <tcn> <goal> <goal1>)
   (<s> ^stored <goal>)
}

sp {learn-goal-definition*apply*store-goal*predicate
   (state <s> ^name learn-goal-definition
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-goal
        ^goal1.{ <pred-num> << 1 2 3 4 5 >> } <pred>)
-->
   (<cmd> ^store <pred>)
}

sp {learn-goal-definition*apply*store-goal*predicate*arg
   (state <s> ^name learn-goal-definition
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-goal
        ^goal1.<pred-num>.{ << id 1 2 3 4 5 >> } <arg>)
-->
   (<cmd> ^store <arg>)
}

sp {learn-goal-definition*apply*store-goal*predicate*arg*default
   (state <s> ^name learn-goal-definition
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-goal
        ^goal1.<pred-num>.{ << id 1 2 3 4 5 >> }.default <def>)
-->
   (<cmd> ^store <def>)
}

sp {learn-goal-definition*apply*store-goal*predicate*arg*imagined
   (state <s> ^name learn-goal-definition
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-goal
        ^goal1.<pred-num>.{ << id 1 2 3 4 5 >> }.imagined <img>)
-->
   (<cmd> ^store <img>)
}
