# If the operator was successful, propose it on the superstate
# (Making sure to go backwards in the deep-copy-objects map, otherwise chunking EXPLODES)

# ENUMERATE: 0-2 args
sp {__TASK__PROPOSAL__RULE__*learn-proposal-rule*0*args
   (state <s> ^name learn-proposal-rule-substate
              ^operator-successful true
              ^operator <o>
              ^arg-info.num-args 0
              ^superstate <ss>)
   (<o> ^name <name>
        ^task-handle <h>
        ^perform <perf>
       -^<arg-name>.arg-type <t>)
-->
   (<ss> ^operator <op-copy> +)
   (<op-copy> ^name <name>
              ^item-type task-operator
              ^task-handle <h>
              ^perform <perf>)
}

sp {__TASK__PROPOSAL__RULE__*learn-proposal-rule*1*args
   (state <s> ^name learn-proposal-rule-substate
              ^operator-successful true
              ^operator <o>
              ^arg-info <info>
              ^superstate <ss>)
   (<info> ^num-args 1
           ^1 <arg1-name>)
   (<o> ^name <name>
        ^task-handle <h>
        ^perform <perf>
        ^<arg1-name>.ss-version <arg1>)
-->
   (<ss> ^operator <op-copy> +)
   (<op-copy> ^name <name>
              ^item-type task-operator
              ^task-handle <h>
              ^perform <perf>
              ^<arg1-name> <arg1>)
}

sp {__TASK__PROPOSAL__RULE__*learn-proposal-rule*2*args
   (state <s> ^name learn-proposal-rule-substate
              ^operator-successful true
              ^operator <o>
              ^arg-info <info>
              ^superstate <ss>)
   (<info> ^num-args 2
           ^1 <arg1-name>
           ^2 <arg2-name>)
   (<o> ^name <name>
        ^task-handle <h>
        ^perform <perf>
        ^<arg1-name>.ss-version <arg1>
        ^<arg2-name>.ss-version <arg2>)
-->
   (<ss> ^operator <op-copy> +)
   (<op-copy> ^name <name>
              ^item-type task-operator
              ^task-handle <h>
              ^perform <perf>
              ^<arg1-name> <arg1>
              ^<arg2-name> <arg2>)
}

