sp {op_move1*internal*propose*perform-move
   (state <s> ^name op_move1
              ^problem-space.execution-type external
              ^destination <obj2>
              ^target-object <obj>)
   -{(<s> ^top-state.world.predicates.predicate <p>)
     (<p> ^handle on1 ^instance <i>)
     (<i> ^1 <obj> ^2 <obj2>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name perform-move)
}

sp {op_move1*internal*apply*perform-move*object*below
   (state <s> ^name op_move1
              ^problem-space.execution-type external
              ^operator.name perform-move
              ^destination <objb>
              ^predicate-handle on1
              ^top-state.world <w>
              ^target-object <obja>)
   (<w> ^objects <objs> ^predicates <p2>)
   (<p2> ^predicate <prep> ^predicate <prep2>)
   (<prep> ^handle below1 ^instance <instance>)
   (<instance> ^2 <obja>)
   (<prep2> ^handle on1 ^instance <instance2>)
   (<instance2> ^1 <obja>)
-->
   (<prep> ^instance <instance> -
           ^instance <instance3>)
   (<prep2> ^instance <instance2> -
            ^instance <instance4>)
   (<instance3> ^1 <objb> ^2 <obja>)
   (<instance4> ^1 <obja> ^2 <objb>)
}

sp {op_move1*internal*apply*perform-move
   (state <s> ^name op_move1
              ^problem-space.execution-type external
              ^operator.name perform-move
              ^destination <objb>
              ^predicate-handle on1
              ^top-state.world <w>
              ^target-object <obja>)
   (<w> ^objects <objs> ^predicates <p2>)
   (<p2> ^predicate <prep> ^predicate <prep2>)
   (<prep> ^handle below1 -^instance.{2} <obja>)
   (<prep2> ^handle on1 -^instance.{1} <obja>)
-->
   (<prep> ^instance <instance3>)
   (<prep2> ^instance <instance4>)
   (<instance3> ^1 <objb> ^2 <obja>)
   (<instance4> ^1 <obja> ^2 <objb>)
}

sp {op_move1*internal*prefer*attend-to-scene-change*over*perform-move
   (state <s> ^name op_move1
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name attend-to-scene-change)
   (<o2> ^name perform-move)
-->
   (<s> ^operator <o1> > <o2>)
}

#sp {op_move1*internal*apply*complete-action*remove*in*predicate
#   (state <s> ^name op_move1
#              ^operator <o>
#              ^target-object <obj>
#              ^top-state.world.predicates.predicate <in-pred>
#              ^top-state.world.robot.current-location <loc>)
#   (<o> ^name complete-action
#        ^status success)
#   (<in-pred> ^handle in1
#              ^instance <i>)
#   (<i> ^1 <obj> ^2 <loc>)
#-->
#   (<in-pred> ^instance <i> -)
#}
#
#sp {op_move1*internal*apply*complete-action*remove*holding*predicate
#   (state <s> ^name op_move1
#              ^operator <o>
#              ^target-object <obj>
#              ^top-state.world.predicates.predicate <in-pred>)
#   (<o> ^name complete-action
#        ^status success)
#   (<in-pred> ^handle holding1
#              ^instance <i>)
#   (<i> ^1 <obj> ^2 <person>)
#-->
#   (<in-pred> ^instance <i> -)
#}
