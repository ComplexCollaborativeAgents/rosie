sp {op_move1*magicbot*magicbot*elaborate*problem-space*attend-to-all-perception*yes
   (state <s> ^name op_move1
              ^problem-space.execution-type external
              ^problem-space.perception <p>)
-->
   (<p> ^attend-to-all-perception yes)
}

sp {op_move1*elaborate*target-object*from*superoperator
   (state <s> ^name op_move1
              ^problem-space.execution-type external
              ^action-operator.arg1.id <obj>)
-->
   (<s> ^target-object <obj>)
}

sp {op_move1*elaborate*predicate-handle*from*superoperator
   (state <s> ^name op_move1
              ^problem-space.execution-type external
              ^action-operator.arg2.handle <ph>)
-->
   (<s> ^predicate-handle <ph>)
}

sp {op_move1*elaborate*destination*from*superoperator
   (state <s> ^name op_move1
              ^problem-space.execution-type external
              ^action-operator.arg2.{2} <obj>)
-->
   (<s> ^destination <obj>)
}

#### GOAL SATISFACITON ####
sp {op_move1*internal*elaborate*desired*satisfied
   (state <s> ^name op_move1
              ^problem-space.execution-type external
              ^target-object <obj>
              ^destination <obj2>
              ^top-state.world.predicates.predicate <pp>)
   (<pp> ^handle on1 ^instance <i2>)
   (<i2> ^1 <obj> ^2 <obj2>)
-->
   (<s> ^desired.satisfied true)
}

sp {op_move1*internal*elaborate*world-vis
   (state <s> ^name op_move1
              ^problem-space.execution-type external
              ^predicate-handle on1
              ^target-object <obj>
              ^destination <obj2>
              ^top-state.world.objects <objs>
              ^top-state.world.predicates <p>
              ^top-state.io.output-link <ol>)
   (<p> ^predicate <pp>)
   (<pp> ^handle on1 ^instance <i2>)
   (<i2> ^1 <obj> ^2 <obj2>)
-->
   (<ol> ^world-vis <wv>)
   (<wv> ^objects <objs> ^predicate <pp>)
}
