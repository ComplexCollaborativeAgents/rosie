sp {op_open1*propose*send-open-command
   (state <s> ^name op_open1
              ^target-object <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^visible true
            ^inreach inreach
            ^door2 closed2)
-->
   (<s> ^operator <o> + >)
   (<o> ^name send-open-command
        ^object <obj>)
}

sp {op_open1*prefer*send-open-command*over*exceed-depth
   (state <s> ^name op_open1
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name send-open-command)
   (<o2> ^name exceed-depth)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {op_open1*reject*send-open-command*already*sent
   (state <s> ^name op_open1
              ^operator <o> +
              ^current-task-segment.open-command)
   (<o> ^name send-open-command)
-->
   (<s> ^operator <o> -)
}

sp {op_open1*internal*apply*send-open-command*change*door2
   (state <s> ^name op_open1
              ^problem-space.execution-type internal
              ^operator <o>)
   (<o> ^name send-open-command
        ^object.predicates <preds>)
   (<preds> ^door2 closed2)
-->
   (<preds> ^door2 closed2 -
            ^door2 open2)
}

sp {op_open1*external*apply*send-open-command*ai2thor
   (state <s> ^name op_open1
              ^problem-space.execution-type external
              ^agent-params.domain ai2thor
              ^operator <o>
              ^io.output-link <ol>
              ^current-task-segment <seg>)
   (<o> ^name send-open-command
        ^object.handle <h>)
-->
   (<ol> ^perform-action <pa>)
   (<pa> ^item-type output-command
         ^name open
         ^object <h>)
   (<seg> ^open-command <pa>)
}

sp {op_open1*external*apply*send-open-command*internal
   (state <s> ^name op_open1
              ^problem-space.execution-type external
              ^agent-params.domain internal
              ^operator <o>
              ^current-task-segment <seg>)
   (<o> ^name send-open-command
        ^object <obj>)
-->
   (<seg> ^open-command <cmd>)
   (<cmd> ^item-type output-command
          ^name open
          ^object <obj>)
}
