sp {op_use1*propose*op_find1
   (state <s> ^name op_use1
              ^problem-space.execution-type external
              ^target-object <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^visible false)
-->
   (<s> ^operator <o> +)
   (<o> ^name op_find1
        ^item-type task-operator
        ^task-handle find1
        ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}

sp {op_use1*propose*op_approach1
   (state <s> ^name op_use1
              ^problem-space.execution-type external
              ^target-object <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^visible true
            ^inreach not-inreach)
-->
   (<s> ^operator <o> +)
   (<o> ^name op_approach1
        ^item-type task-operator
        ^task-handle approach1
        ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}

sp {op_use1*ai2thor*propose*send-use-command
   (state <s> ^name op_use1
              ^agent-params.domain ai2thor
              ^problem-space.execution-type external
              ^using-object <obj>
              ^target-object <tar>)
   (<tar> ^predicates <preds>)
   (<preds> ^visible true
            ^inreach inreach)
-->
   (<s> ^operator <o> +)
   (<o> ^name send-use-command
        ^using-object <obj>
        ^target-object <tar>)
}

sp {op_use1*ai2thor*apply*send-use-command
   (state <s> ^name op_use1
              ^agent-params.domain ai2thor
              ^problem-space.execution-type external
              ^operator <o> +
              ^io.output-link <ol>
              ^current-task-segment <seg>)
   (<o> ^name send-use-command
        ^using-object.handle <obj-h>
        ^target-object.handle <tar-h>)
-->
   (<ol> ^perform-action <pa>)
   (<pa> ^name use
         ^object <obj-h>
         ^target <tar-h>)
   (<seg> ^use-command <pa>)
}

