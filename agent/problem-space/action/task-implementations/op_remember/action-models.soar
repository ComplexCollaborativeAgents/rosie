### Internally modeling the remember task ###

sp {problem-space*action*internal*elaborate*op_remember1*known-action-model
   (state <s> ^problem-space.execution-type internal
              ^operator <o> +)
   (<o> ^name op_remember1)
-->
   (<o> ^known-action-model true)
}

# Copy predicates from arg2 to arg1
sp {problem-space*action*internal*apply*op_remember1*copy*predicate
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <o>)
   (<o> ^name op_remember1
        ^task-handle remember1
        ^arg1.id.predicates <p1>
        ^arg2.id.predicates <p2>)
   (<p2> ^{ <prop> << modifier1 category1 sentence >> } <pred>)
   (<p1> -^<prop> <pred>)
-->
   (<p1> ^<prop> <pred>)
}

sp {problem-space*action*internal*apply*op_remember1*copy*predicate*2
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <o>)
   (<o> ^name op_remember1
        ^task-handle remember1
        ^arg1.id.predicates <p1>
        ^arg2.id.predicates <p2>)
   (<p1> ^{ <prop> << modifier1 category1 sentence >> } <pred>)
   (<p2> -^<prop> <pred>)
-->
   (<p2> ^<prop> <pred>)
}

# If nothing can be copied, reject the remember operator
sp {problem-space*action*internal*reject*op_remember1*nothing*to*copy
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <o> +)
   (<o> ^name op_remember1
        ^arg1.id.predicates <p1>
        ^arg2.id.predicates <p2>)
   -{(<p1> ^{ <prop> << modifier1 category1 sentence >> } <pred>)
     (<p2> -^<prop> <pred>)}
   -{(<p2> ^{ <prop> << modifier1 category1 sentence >> } <pred>)
     (<p1> -^<prop> <pred>)}
-->
   (<s> ^operator <o> -)
}
