
sp {op_recall1*elaborate*memory-type*smem
   (state <s> ^name op_recall1
              ^task-operator <task-op>)
   (<task-op> ^arg1.id <obj1>
              ^arg2.id <obj2>
             -^arg3)
-->
   (<s> ^memory-type smem
        ^head-object <obj2>
        ^edge-object <obj1>)
}

sp {op_recall1*elaborate*query-object-workspace
   (state <s> ^name op_recall1
              ^memory-type smem
              ^problem-space.execution-type external
              ^desired.handle recall1goal1
              ^head-object <obj>)
-->
   (interrupt)
   (<s> ^query-object-workspace <ws>)
   (<ws> ^type head-object
         ^source <obj>)
}

sp {op_recall1*elaborate*query-object-workspace*smem-object
   (state <s> ^name op_recall1
              ^query-object-workspace <ws>)
   (<ws> ^{ << match-handle-result match-predicates-result retrieved-category >> } { <obj> <> failure })
-->
   (<ws> ^smem-object <obj>)
}

sp {op_recall1*smem*elaborate*smem-tail-object
   (state <s> ^name op_recall1
              ^memory-type smem
              ^query-object-workspace <ws>
              ^edge-object.predicates <preds>)
   (<ws> ^type head-object
         ^smem-object.semantic-edge <se>)
   # There are no predicates on the edge-object that are not on the semantic-edge
  -{(<preds> ^<prop1> <pred1>)
    (<se> -^<prop1> <pred1>)}
   # There are no predicates on the semantic-edge that are not on the edge-object
  -{(<se> ^{ <prop2> <> tail } <pred2>)
    (<preds> -^<prop2> <pred2>)}
   (<se> ^tail <tail>)
   (<tail> ^<anything>)
-->
   (<s> ^smem-tail-object <tail>)
}

