### Internally modeling the approach task ###

sp {problem-space*action*internal*elaborate*op_approach1*dont-learn-action-model
   (state <s> ^problem-space.execution-type internal
              ^operator <o> +)
   (<o> ^name op_approach1)
-->
   (<o> ^dont-learn-action-model true)
}

# Marking the object as in-reach
sp {problem-space*action*internal*apply*op_approach1*change*reachable
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <op>)
   (<op> ^name op_approach1 
         ^arg1.id.predicates <preds>)
   (<preds> ^is-reachable1 not-reachable1)
-->
   (<preds> ^is-reachable1 not-reachable1 -
            ^is-reachable1 reachable1)
}

#### Change other objects to not reachable

sp {problem-space*action*internal*apply*op_approach1*make*non-grabbable*not-reachable
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^agent-params.extra-action-models true
              ^operator <op>
              ^world.objects.object <obj>)
   (<op> ^name op_approach1
         ^arg1.id { <target> <> <obj> })
   (<obj> ^predicates <preds>)
   (<preds> ^is-reachable1 reachable1
           -^affordance1 grabbable1)
-->
   (<preds> ^is-reachable1 not-reachable1
            ^is-reachable1 reachable1 -)
}

sp {problem-space*action*internal*apply*op_approach1*make*grabbable*not-reachable
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^agent-params.extra-action-models true
              ^operator <op>
              ^world.objects.object <obj>)
   (<op> ^name op_approach1
         ^arg1.id { <target> <> <obj> })
   (<obj> ^predicates <preds>)
   (<preds> ^is-reachable1 reachable1
            ^affordance1 grabbable1
           -^is-grabbed1 grabbed1)
-->
   (<preds> ^is-reachable1 not-reachable1
            ^is-reachable1 reachable1 -)
}
