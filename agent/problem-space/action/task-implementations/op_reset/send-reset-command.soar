##################### tabletop/fetch ######################
sp {primitive-reset*tabletop*fetch*propose*send-reset-command
   (state <s> ^name primitive-reset
              ^agent-params.domain << tabletop fetch >>
              ^problem-space.execution-type external
              ^world.robot.arm.moving-status << failure home >>
             -^current-task-segment.reset-command)
-->
   (<s> ^operator <o> +)
   (<o> ^name send-reset-command
        ^actions.reset <r>)
}

sp {primitive-reset*tabletop*fetch*apply*send-reset-command
   (state <s> ^name primitive-reset
              ^agent-params.domain tabletop
              ^operator.name send-reset-command
              ^io.output-link <ol>
              ^current-task-segment <seg>)
-->
   (<ol> ^reset <r>)
   (<seg> ^reset-command <r>)
}

##################### simulations ######################
# We should never really use reset in simulation envs anyway
# So we just fake that the command worked
sp {primitive-reset*simulations*propose*send-reset-command
   (state <s> ^name primitive-reset
              ^agent-params.domain << magicbot ai2thor internal >>
              ^problem-space.execution-type external
             -^current-task-segment.reset-command)
-->
   (<s> ^operator <o> +)
   (<o> ^name send-reset-command)
}

sp {primitive-reset*simulations*apply*send-reset-command
   (state <s> ^name primitive-reset
              ^agent-params.domain << magicbot ai2thor internal >>
              ^operator.name send-reset-command
              ^current-task-segment <seg>)
-->
   (<seg> ^reset-command.status success)
}

