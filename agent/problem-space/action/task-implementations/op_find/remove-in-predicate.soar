#
## If we have scanned the location and the object is not there, 
##   then remove the in predicate
#sp {op_find1*propose*remove-in-predicate*location
#   (state <s> ^name op_find1
#              ^problem-space.execution-type external
#              ^target-object <obj>
#              ^world <w>
#              ^current-task-segment.tried-scan <wp>)
#   (<w> ^robot <robot>
#        ^predicates.predicate <in-pred>)
#   (<robot> ^current-location <loc>
#            ^current-waypoint <wp>)
#   (<obj> ^predicates.is-confirmed1 not-confirmed1)
#   (<in-pred> ^handle in1
#              ^instance <i>)
#   (<i> ^1 <obj> ^2 <loc>)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name remove-in-predicate
#        ^predicate <in-pred>
#        ^instance <i>)
#}
#
## If we have opened a receptacle and the object is not there, 
##   remove the in predicate
#sp {op_find1*propose*remove-in-predicate*receptacle
#   (state <s> ^name op_find1
#              ^problem-space.execution-type external
#              ^target-object <obj>
#              ^world.predicates.predicate <in-pred>)
#   (<obj> ^predicates.is-confirmed1 not-confirmed1)
#   (<in-pred> ^handle in1
#              ^instance <i>)
#   (<i> ^1 <obj> ^2 <rec>)
#   (<rec> ^predicates <rec-preds>)
#   (<rec-preds> ^affordance1 receptacle1
#                ^affordance1 openable1
#                ^is-visible1 visible1
#                ^<prop> open2)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name remove-in-predicate
#        ^predicate <in-pred>
#        ^instance <i>)
#}
#
#sp {op_find1*apply*remove-in-predicate
#   (state <s> ^name op_find1
#              ^operator <o>)
#   (<o> ^name remove-in-predicate
#        ^predicate <in-pred>
#        ^instance <i>)
#   (<in-pred> ^instance <i>)
#-->
#   (<in-pred> ^instance <i> -)
#}
