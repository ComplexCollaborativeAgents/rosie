### Internally modeling the find task ###

sp {problem-space*action*internal*elaborate*op_find1*known-action-model
   (state <s> ^problem-space.execution-type internal
              ^operator <o> +)
   (<o> ^name op_find1)
-->
   (<o> ^known-action-model true)
}

# Change to confirmed
sp {problem-space*action*internal*apply*op_find1*change*confirmed
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <op>)
   (<op> ^name op_find1
         ^arg1.id.predicates <preds>)
   (<preds> ^is-confirmed1 not-confirmed1)

-->
   (<preds> ^is-confirmed1 not-confirmed1 -
            ^is-confirmed1 confirmed1)
}

# Change to visible
sp {problem-space*action*internal*apply*op_find1*change*visible
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <op>)
   (<op> ^name op_find1
         ^arg1.id.predicates <preds>)
   (<preds> ^is-visible1 not-visible1)

-->
   (<preds> ^is-visible1 not-visible1 -
            ^is-visible1 visible1)
}

# Change other objects to not-confirmed
sp {problem-space*action*internal*apply*op_find1*make*others*unconfirmed
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <op>
              ^world.objects.object <obj>)
   (<op> ^name op_find1
         ^arg1.id { <target> <> <obj> })
   (<obj> ^predicates <preds>)
   (<preds> ^category << object person >>
            ^is-confirmed1 confirmed1)
-->
   (<preds> ^is-confirmed1 not-confirmed1
            ^is-confirmed1 confirmed1 -)
}

sp {problem-space*action*internal*apply*op_find1*make*others*not-visible
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <op>
              ^world.objects.object <obj>)
   (<op> ^name op_find1
         ^arg1.id { <target> <> <obj> })
   (<obj> ^predicates <preds>)
   (<preds> ^is-visible1 visible1)
-->
   (<preds> ^is-visible1 not-visible1
            ^is-visible1 visible1 -)
}

# @TOREM
## change current-location to unknown place
#sp {problem-space*action*internal*apply*op_find1*change*current-location
#   (state <s> ^problem-space.name action
#              ^problem-space.execution-type internal
#              ^operator <op>
#              ^world <w>)
#   (<op> ^name op_find1
#         ^arg1.id <target>)
#   (<w> ^robot <robot>
#        ^objects <objs>
#        ^predicates.predicate <in-pred>)
#   (<robot> ^current-location <loc>)
#   (<in-pred> ^handle in1)
#-->
#   (<robot> ^current-location <loc> -
#            ^current-location <unknown>)
#   (<objs> ^object <unknown>)
#   (<unknown> ^handle unknown-loc
#              ^item-type object
#              ^predicates <preds>)
#   (<preds> ^is-visible1 visible1
#            ^is-confirmed1 confirmed1
#            ^category location
#            ^modifier1 current1)
#   (<in-pred> ^instance <i>)
#   (<i> ^1 <target> ^2 <unknown>)
#}
#
