####### tried-scan

# Since go-to-location includes a scan, mark the current waypoint as being scanned
sp {op_find1*apply*pop-task-segment*go-to-location*mark*tried-scan
   (state <s> ^name op_find1
              ^problem-space.execution-type external
              ^operator <o>
              ^world.robot.current-waypoint <wp>
              ^current-task-segment <seg>)
   (<o> ^name pop-task-segment
        ^segment <pop-seg>)
   (<pop-seg> ^performed-scan true
              ^task-operator.task-handle go-to-location1)
-->
   (<seg> ^tried-scan <wp>)
}


######## remove in(obj, loc) predicate
#
## If we have scanned the location and the object is not there, 
##   then remove the in predicate
#sp {op_find1*apply*pop-task-segment*scan*remove*in-predicate*current-location
#   (state <s> ^name op_find1
#              ^problem-space.execution-type external
#              ^operator <o>
#              ^target-object <obj>
#              ^world <w>)
#   (<o> ^name pop-task-segment
#        ^segment.task-operator.task-handle scan1)
#   (<w> ^robot.current-location <loc>
#        ^predicates.predicate <in-pred>)
#   (<obj> ^predicates.is-confirmed1 not-confirmed1)
#   (<in-pred> ^handle in1
#              ^instance <i>)
#   (<i> ^1 <obj> ^2 <loc>)
#-->
#   (<in-pred> ^instance <i> -)
#}
#
## If we have scanned the location (in go-to-location) and the object is not there, 
##   then remove the in predicate
#sp {op_find1*apply*pop-task-segment*go-to-location*remove*in-predicate*current-location
#   (state <s> ^name op_find1
#              ^problem-space.execution-type external
#              ^operator <o>
#              ^target-object <obj>
#              ^world <w>)
#   (<o> ^name pop-task-segment
#        ^segment <pop-seg>)
#   (<pop-seg> ^performed-scan true
#              ^task-operator.task-handle go-to-location1)
#   (<w> ^robot.current-location <loc>
#        ^predicates.predicate <in-pred>)
#   (<obj> ^predicates.is-confirmed1 not-confirmed1)
#   (<in-pred> ^handle in1
#              ^instance <i>)
#   (<i> ^1 <obj> ^2 <loc>)
#-->
#   (<in-pred> ^instance <i> -)
#}
#
######## remove in(obj, rec) predicate
#
## If the agent thought
#sp {op_find1*apply*pop-task-segment*open*remove*in-predicate*receptacle
#   (state <s> ^name op_find1
#              ^problem-space.execution-type external
#              ^operator <o>
#              ^target-object <obj>
#              ^world.predicates.predicate <in-pred>)
#   (<o> ^name pop-task-segment
#        ^segment.task-operator <open>)
#   (<open> ^task-handle open1
#           ^arg1.id <rec>)
#   (<obj> ^predicates.is-confirmed1 not-confirmed1)
#   (<in-pred> ^handle in1
#              ^instance <i>)
#   (<i> ^1 <obj> ^2 <rec>)
#-->
#   (<in-pred> ^instance <i> -)
#}

