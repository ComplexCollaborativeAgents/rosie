################ propose op_pick-up1 ###################

# Propose if nothing is grabbed and it is grabbable
sp {problem-space*action*propose*op_pick-up1*simple
   (state <s> ^problem-space <ps>
              ^world <w>
             -^agent-params.strict-preconditions true)
   (<ps> ^name action
         ^propose-subtasks true)
   (<w> ^robot.arm.holding-object false
        ^objects.object <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^is-confirmed1 confirmed1
            ^affordance1 grabbable1
            ^is-grabbed1 not-grabbed1)
-->
   (<s> ^operator <op> +)
   (<op> ^name op_pick-up1 
         ^item-type task-operator
         ^task-handle pick-up1
         ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}

#### EVALUATION: strict-preconditions (include all conditions in proposal rule, no search)

# Propose pick-up for an object not inside a receptacle
sp {problem-space*action*propose*op_pick-up1*strict*preconditions
   (state <s> ^problem-space <ps>
              ^world <w>
              ^agent-params.strict-preconditions true)
   (<ps> ^name action
         ^propose-subtasks true)
   (<w> ^robot.arm.holding-object false
        ^objects.object <obj>
        ^predicates.predicate <in-pred>)
   (<obj> ^predicates <preds>)
   (<preds> ^affordance1 grabbable1
            ^is-grabbed1 not-grabbed1
            ^is-visible1 visible1
            ^is-reachable1 reachable1)
   (<in-pred> ^handle in1)
   -{(<in-pred> ^instance <i>)
     (<i> ^1 <obj> ^{2}.predicates.affordance1 receptacle1)}
-->
   (<s> ^operator <op> +)
   (<op> ^name op_pick-up1 
         ^item-type task-operator
         ^task-handle pick-up1
         ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}

# Propose pick-up for an object in a receptacle that doesn't have a door
sp {problem-space*action*propose*op_pick-up1*inside*receptacle*strict*preconditions
   (state <s> ^problem-space <ps>
              ^world <w>
              ^agent-params.strict-preconditions true)
   (<ps> ^name action
         ^propose-subtasks true)
   (<w> ^robot.arm.holding-object false
        ^objects <objs>
        ^predicates.predicate <in-pred>)
   (<objs> ^object <obj> <rec>)
   (<obj> ^predicates <preds>)
   (<preds> ^affordance1 grabbable1
            ^is-grabbed1 not-grabbed1
            ^is-visible1 visible1
            ^is-reachable1 reachable1)
   (<rec> ^predicates <rec-preds>)
   (<rec-preds> ^affordance1 receptacle1
                ^affordance1 always-open1)
   (<in-pred> ^handle in1
              ^instance <i>)
   (<i> ^1 <obj> ^2 <rec>)
-->
   (<s> ^operator <op> +)
   (<op> ^name op_pick-up1 
         ^item-type task-operator
         ^task-handle pick-up1
         ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}

# Propose pick-up for an object inside an open receptacle
sp {problem-space*action*propose*op_pick-up1*inside*open*receptacle*strict*preconditions
   (state <s> ^problem-space <ps>
              ^world <w>
              ^agent-params.strict-preconditions true)
   (<ps> ^name action
         ^propose-subtasks true)
   (<w> ^robot.arm.holding-object false
        ^objects <objs>
        ^predicates.predicate <in-pred>)
   (<objs> ^object <obj> <rec>)
   (<obj> ^predicates <preds>)
   (<preds> ^affordance1 grabbable1
            ^is-grabbed1 not-grabbed1
            ^is-visible1 visible1
            ^is-reachable1 reachable1)
   (<rec> ^predicates <rec-preds>)
   (<rec-preds> ^affordance1 always-open1
                ^affordance1 openable1
                ^is-open1 open2)
   (<in-pred> ^handle in1
              ^instance <i>)
   (<i> ^1 <obj> ^2 <rec>)
-->
   (<s> ^operator <op> +)
   (<op> ^name op_pick-up1 
         ^item-type task-operator
         ^task-handle pick-up1
         ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}


