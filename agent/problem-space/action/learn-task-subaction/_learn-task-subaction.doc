
######################### learn-task-subaction #############################

Takes the operator representation for a subaction and creates a generalized
  representation to be stored in semantic memory which will form the basis
  for a proposal rule to propose this subaction

This happens for certain subactions where the initial proposal rules aren't
  enough and we need to learn a new proposal rule

It is proposed while executing a composite action if the subaction doesn't match
  and it has a ^learn-proposal flag on it




##### Operator #####

(<o> ^name learn-task-subaction
     ^action-id <aid>  - The action-id for the parent task
     ^action-operator  - The action-operator for the parent task
     ^subaction        - The action-operator representation of the subtask


##### State Rep #####

action-id       - LTI for the parent task, elaborated from superoperator
action-operator - action-operator for the parent task, elaborated from superoperator
subaction       - action-operator for the subaction, elaborated from superoperator
subaction-id    - LTI for the subaction, retrieved through an smem-query
subaction-structure - The generalized rep to be stored in smem

argument-info
  arg-name <arg-name> - name of the argument (from the subaction.<arg-name>)
  arg-type << object concept predicate until-clause >>
  argument <arg>
  generalized <gen>  - link to the corresponding generalize-argument on the state

generalize-argument - helper structure used to generalize arguments against action-operator
  (See action/state-elaborations/generalize-argument)


##### Results ######

Copies subaction-structure to superstate as store-subaction <struct>


##### Operators #####

create-subaction - Creates the initial subaction-structure and copies basic info
create-subaction-argument - Copies the generalized rep of each argument onto the subaction-structure
generalize-argument       - Generalizes each argument (see action/state-elaborations/generalize-argument)
return-subaction-structure - Copies the subaction-structure as superstate.store-subaction
