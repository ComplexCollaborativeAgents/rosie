sp {action-utils*copy-desired*propose*complete-copy-desired
   (state <s> ^copy-desired-workspace <ws>)
-->
   (<s> ^operator <o> + < =)
   (<o> ^name complete-copy-desired
        ^workspace <ws>)
}

sp {action-utils*copy-desired*prefer*higher*workspace
   (state <s> ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name << complete-copy-desired copy-desired-predicate copy-desired-predicate-set >>
         ^workspace <ws>)
   (<o2> ^name << complete-copy-desired copy-desired-predicate copy-desired-predicate-set >>
         ^workspace < <ws>)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {action-utils*copy-desired*apply*complete-copy-desired*reject*was-copied
   (state <s> ^operator <o> +)
   (<o> ^name << complete-copy-desired copy-desired-predicate copy-desired-predicate-set >>
        ^workspace <ws>)
   (<ws> ^was-copied true)
-->
   (<s> ^operator <o> -)
}


# Copy the arguments onto the copied-action and copy the copied-action to the superstate
# (Will create the chunked application rule)
# ENUMERATE: 0-5 predicates

sp {copy-desired*complete-copy-desired*learn-copy-desired-elaboration-rule*1*sets
   (state <s> ^operator <o>
              ^superstate <ss>)
   (<o> ^name complete-copy-desired
        ^workspace <ws>)
   (<ws> ^source-desired <src>
         ^num-sets 1
         ^predicate-set <pset1>)
   (<src> ^handle <h>)
   (<pset1> ^num 1 ^predicate-set-copy <copy1>)
-->
   (<ss> ^desired <copy1>)
   (<copy1> ^duplicate-of <src>
            ^handle <h>
            ^next none)
}

sp {copy-desired*complete-copy-desired*learn-copy-desired-elaboration-rule*2*sets
   (state <s> ^operator <o>
              ^superstate <ss>)
   (<o> ^name complete-copy-desired
        ^workspace <ws>)
   (<ws> ^source-desired <src>
         ^num-sets 2
         ^predicate-set <ps1> <ps2>)
   (<ps1> ^num 1 ^predicate-set-copy <copy1>)
   (<ps2> ^num 2 ^predicate-set-copy <copy2>)
-->
   (<ss> ^desired <copy1>)
   (<copy1> ^duplicate-of <src>
            ^handle <h>
            ^next <copy2>)
   (<copy2> ^next none)
}

sp {copy-desired*complete-copy-desired*learn-copy-desired-elaboration-rule*3*sets
   (state <s> ^operator <o>
              ^superstate <ss>)
   (<o> ^name complete-copy-desired
        ^workspace <ws>)
   (<ws> ^source-desired <src>
         ^num-sets 3
         ^predicate-set <ps1> <ps2> <ps3>)
   (<ps1> ^num 1 ^predicate-set-copy <copy1>)
   (<ps2> ^num 2 ^predicate-set-copy <copy2>)
   (<ps3> ^num 3 ^predicate-set-copy <copy3>)
-->
   (<ss> ^desired <copy1>)
   (<copy1> ^duplicate-of <src>
            ^handle <h>
            ^next <copy2>)
   (<copy2> ^next <copy3>)
   (<copy3> ^next none)
}

sp {copy-desired*complete-copy-desired*learn-copy-desired-elaboration-rule*4*sets
   (state <s> ^operator <o>
              ^superstate <ss>)
   (<o> ^name complete-copy-desired
        ^workspace <ws>)
   (<ws> ^source-desired <src>
         ^num-sets 4
         ^predicate-set <ps1> <ps2> <ps3> <ps4>)
   (<ps1> ^num 1 ^predicate-set-copy <copy1>)
   (<ps2> ^num 2 ^predicate-set-copy <copy2>)
   (<ps3> ^num 3 ^predicate-set-copy <copy3>)
   (<ps4> ^num 4 ^predicate-set-copy <copy4>)
-->
   (<ss> ^desired <copy1>)
   (<copy1> ^duplicate-of <src>
            ^handle <h>
            ^next <copy2>)
   (<copy2> ^next <copy3>)
   (<copy3> ^next <copy4>)
   (<copy4> ^next none)
}

sp {copy-desired*complete-copy-desired*learn-copy-desired-elaboration-rule*5*sets
   (state <s> ^operator <o>
              ^superstate <ss>)
   (<o> ^name complete-copy-desired
        ^workspace <ws>)
   (<ws> ^source-desired <src>
         ^num-sets 5
         ^predicate-set <ps1> <ps2> <ps3> <ps4> <ps5>)
   (<ps1> ^num 1 ^predicate-set-copy <copy1>)
   (<ps2> ^num 2 ^predicate-set-copy <copy2>)
   (<ps3> ^num 3 ^predicate-set-copy <copy3>)
   (<ps4> ^num 4 ^predicate-set-copy <copy4>)
   (<ps5> ^num 5 ^predicate-set-copy <copy5>)
-->
   (<ss> ^desired <copy1>)
   (<copy1> ^duplicate-of <src>
            ^handle <h>
            ^next <copy2>)
   (<copy2> ^next <copy3>)
   (<copy3> ^next <copy4>)
   (<copy4> ^next <copy5>)
   (<copy5> ^next none)
}


