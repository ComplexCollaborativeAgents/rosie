sp {learn-copy-action-elaboration-rule*propose*complete-copy-action
   (state <s> ^name learn-copy-action-elaboration-rule)
-->
   (<s> ^operator <o> + <)
   (<o> ^name complete-copy-action
        ^copy-action <ca>)
}

sp {learn-copy-action-elaboration-rule*elaborate*complete-copy-action*perform*copy
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator <o> +
              ^copy-action <ca>)
   (<o> ^name complete-copy-action)
   (<ca> ^source-action.perform <perf>)
-->
   (<ca> ^perform <perf>)
}

sp {learn-copy-action-elaboration-rule*elaborate*complete-copy-action*perform*default
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator <o> +
              ^copy-action <ca>)
   (<o> ^name complete-copy-action)
   (<ca> ^source-action <src>)
   (<src> -^perform)
-->
   (<ca> ^perform multiple)
}

sp {learn-copy-action-elaboration-rule*apply*complete-copy-action*create*copied-action*subaction-handle
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator.name complete-copy-action
              ^copy-action <ca>)
   (<ca> ^source-action <src>
         ^perform <perf>)
   (<src> ^name <name>
          ^action-handle <h>
          ^subaction-handle <sub-h>)
-->
   (<ca> ^copied-action <copy>)
   (<copy> ^name <name>
           ^action-handle <h>
           ^perform <perf>
           ^subaction-handle <sub-h>)
}

sp {learn-copy-action-elaboration-rule*apply*complete-copy-action*create*copied-action*no*subaction-handle
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator.name complete-copy-action
              ^copy-action <ca>)
   (<ca> ^source-action <src>
         ^perform <perf>)
   (<src> ^name <name>
          ^action-handle <h>
         -^subaction-handle)
-->
   (<ca> ^copied-action <copy>)
   (<copy> ^name <name>
           ^action-handle <h>
           ^perform <perf>)
}

# Also, arg-status
sp {learn-copy-action-elaboration-rule*apply*complete-copy-action*copy*arg-status
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator.name complete-copy-action
              ^copy-action <ca>)
   (<ca> ^copy-argument <arg>)
   (<arg> ^source-arg.arg-status <status>
          ^arg-copy <arg-copy>)
-->
   (<arg-copy> ^arg-status <status>)
}
sp {learn-copy-action-elaboration-rule*apply*complete-copy-action*copy*arg-status*unknown
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator.name complete-copy-action
              ^copy-action <ca>)
   (<ca> ^copy-argument <arg>)
   (<arg> ^source-arg <src>
          ^arg-copy <arg-copy>)
   (<src> -^arg-status)
-->
   (<arg-copy> ^arg-status unknown)
}


# Copy the arguments onto the copied-action and copy the copied-action to the superstate
# (Will create the chunked application rule)
# ENUMERATE: 0-5 arguments

sp {copy-action*complete-copy-action*learn-copy-action-elaboration-rule*0*args
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator.name complete-copy-action
              ^copy-action <ca>)
   (<ca> ^num-args 0
         ^not-copied true
         ^copied-action <copy>
         ^destination <dest>
         ^copy-name <name>)
-->
   (<dest> ^<name> <copy>)
}

sp {copy-action*complete-copy-action*learn-copy-action-elaboration-rule*1*args
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator.name complete-copy-action
              ^copy-action <ca>)
   (<ca> ^num-args 1
         ^not-copied true
         ^copy-argument   <arg1>
         ^copied-action <copy>
         ^destination <dest>
         ^copy-name <name>)
   (<arg1> ^arg-name <arg1-name> ^arg-copy <arg-copy1>)
-->
   (<dest> ^<name> <copy>)
   (<copy> ^<arg1-name> <arg-copy1>)
}

sp {copy-action*complete-copy-action*learn-copy-action-elaboration-rule*2*args
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator.name complete-copy-action
              ^copy-action <ca>)
   (<ca> ^num-args 2
         ^not-copied true
         ^copy-argument   <arg1>
         ^copy-argument { <arg2> > <arg1>}
         ^copied-action <copy>
         ^destination <dest>
         ^copy-name <name>)
   (<arg1> ^arg-name <arg1-name> ^arg-copy <arg-copy1>)
   (<arg2> ^arg-name <arg2-name> ^arg-copy <arg-copy2>)
-->
   (<dest> ^<name> <copy>)
   (<copy> ^<arg1-name> <arg-copy1>
		   ^<arg2-name> <arg-copy2>)
}

sp {copy-action*complete-copy-action*learn-copy-action-elaboration-rule*3*args
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator.name complete-copy-action
              ^copy-action <ca>)
   (<ca> ^num-args 3
         ^not-copied true
         ^copy-argument   <arg1>
         ^copy-argument { <arg2> > <arg1>}
         ^copy-argument { <arg3> > <arg2>}
         ^copied-action <copy>
         ^destination <dest>
         ^copy-name <name>)
   (<arg1> ^arg-name <arg1-name> ^arg-copy <arg-copy1>)
   (<arg2> ^arg-name <arg2-name> ^arg-copy <arg-copy2>)
   (<arg3> ^arg-name <arg3-name> ^arg-copy <arg-copy3>)
-->
   (<dest> ^<name> <copy>)
   (<copy> ^<arg1-name> <arg-copy1>
		   ^<arg2-name> <arg-copy2>
		   ^<arg3-name> <arg-copy3>)
}

sp {copy-action*complete-copy-action*learn-copy-action-elaboration-rule*4*args
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator.name complete-copy-action
              ^copy-action <ca>)
   (<ca> ^num-args 4
         ^not-copied true
         ^copy-argument   <arg1>
         ^copy-argument { <arg2> > <arg1>}
         ^copy-argument { <arg3> > <arg2>}
         ^copy-argument { <arg4> > <arg3>}
         ^copied-action <copy>
         ^destination <dest>
         ^copy-name <name>)
   (<arg1> ^arg-name <arg1-name> ^arg-copy <arg-copy1>)
   (<arg2> ^arg-name <arg2-name> ^arg-copy <arg-copy2>)
   (<arg3> ^arg-name <arg3-name> ^arg-copy <arg-copy3>)
   (<arg4> ^arg-name <arg4-name> ^arg-copy <arg-copy4>)
-->
   (<dest> ^<name> <copy>)
   (<copy> ^<arg1-name> <arg-copy1>
	  	   ^<arg2-name> <arg-copy2>
	   	   ^<arg3-name> <arg-copy3>
		   ^<arg4-name> <arg-copy4>)
}

sp {copy-action*complete-copy-action*learn-copy-action-elaboration-rule*5*args
   (state <s> ^name learn-copy-action-elaboration-rule
              ^operator.name complete-copy-action
              ^copy-action <ca>)
   (<ca> ^num-args 5
         ^not-copied true
         ^copy-argument   <arg1>
         ^copy-argument { <arg2> > <arg1>}
         ^copy-argument { <arg3> > <arg2>}
         ^copy-argument { <arg4> > <arg3>}
         ^copy-argument { <arg5> > <arg4>}
         ^copied-action <copy>
         ^destination <dest>
         ^copy-name <name>)
   (<arg1> ^arg-name <arg1-name> ^arg-copy <arg-copy1>)
   (<arg2> ^arg-name <arg2-name> ^arg-copy <arg-copy2>)
   (<arg3> ^arg-name <arg3-name> ^arg-copy <arg-copy3>)
   (<arg4> ^arg-name <arg4-name> ^arg-copy <arg-copy4>)
   (<arg5> ^arg-name <arg5-name> ^arg-copy <arg-copy5>)
-->
   (<dest> ^<name> <copy>)
   (<copy> ^<arg1-name> <arg-copy1>
			  ^<arg2-name> <arg-copy2>
			  ^<arg3-name> <arg-copy3>
			  ^<arg4-name> <arg-copy4>
			  ^<arg5-name> <arg-copy5>)
}
