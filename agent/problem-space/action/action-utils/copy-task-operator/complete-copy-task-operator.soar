sp {task-utils*copy-task-operator*propose*complete-copy-task-operator
   (state <s> ^copy-task-op-workspace <ws>)
-->
   (<s> ^operator <o> + < =)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
}

sp {task-utils*copy-task-operator*elaborate*complete-copy-task-operator*perform*copy
   (state <s> ^operator <o> +)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^source-task-op.perform <perf>)
-->
   (<ws> ^perform <perf>)
}

sp {task-utils*copy-task-operator*elaborate*complete-copy-task-operator*perform*default
   (state <s> ^operator <o> +)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^source-task-op <src>)
   (<src> -^perform)
-->
   (<ws> ^perform multiple)
}

sp {task-utils*copy-task-operator*prefer*higher*workspace
   (state <s> ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name << complete-copy-task-operator copy-task-argument >>
         ^workspace <ws>)
   (<o2> ^name << complete-copy-task-operator copy-task-argument >>
         ^workspace < <ws>)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {task-utils*copy-task-operator*apply*complete-copy-task-operator*reject
   (state <s> ^operator <o> +)
   (<o> ^name << complete-copy-task-operator copy-task-argument >>
        ^workspace <ws>)
   (<ws> ^copy-name <name>
         ^destination.<name> <copy>)
-->
   (<s> ^operator <o> -)
}

sp {task-utils*copy-task-operator*apply*complete-copy-task-operator*create*task-op-copy*no*subtask-handle
   (state <s> ^operator <o>)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^source-task-op <src>
         ^perform <perf>)
   (<src> ^name <name>
          ^task-handle <h>
          -^subtask-handle <sub-h>)
-->
   (<ws> ^task-op-copy <copy>)
   (<copy> ^name <name>
           ^task-handle <h>
           ^perform <perf>)
}

sp {task-utils*copy-task-operator*apply*complete-copy-task-operator*create*task-op-copy*subtask-handle
   (state <s> ^operator <o>)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^source-task-op <src>
         ^perform <perf>)
   (<src> ^name <name>
          ^task-handle <h>
          ^subtask-handle <sub-h>)
-->
   (<ws> ^task-op-copy <copy>)
   (<copy> ^name <name>
           ^task-handle <h>
           ^perform <perf>
           ^subtask-handle <sub-h>)
}

# Also, arg-status
sp {task-utils*copy-task-operator*apply*complete-copy-task-operator*copy*arg-status
   (state <s> ^operator <o>)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^copy-argument <arg>)
   (<arg> ^source-arg.arg-status <status>
          ^arg-copy <arg-copy>)
-->
   (<arg-copy> ^arg-status <status>)
}
sp {task-utils*copy-task-operator*apply*complete-copy-task-operator*copy*arg-status*unknown
   (state <s> ^operator <o>)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^copy-argument <arg>)
   (<arg> ^source-arg <src>
          ^arg-copy <arg-copy>)
   (<src> -^arg-status)
-->
   (<arg-copy> ^arg-status unknown)
}


# Copy the arguments onto the task-op-copy and copy the task-op-copy to the superstate
# (Will create the chunked application rule)
# ENUMERATE: 0-5 arguments

sp {copy-task-operator*complete-copy-task-operator*learn-copy-task-op-elaboration-rule*0*args
   (state <s> ^operator <o>)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^num-args 0
         ^not-copied true
         ^task-op-copy <copy>
         ^destination <dest>
         ^copy-name <name>)
-->
   (<dest> ^<name> <copy>)
}

sp {copy-task-operator*complete-copy-task-operator*learn-copy-task-op-elaboration-rule*1*args
   (state <s> ^operator <o>)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^num-args 1
         ^not-copied true
         ^copy-argument   <arg1>
         ^task-op-copy <copy>
         ^destination <dest>
         ^copy-name <name>)
   (<arg1> ^arg-name <arg1-name> ^arg-copy <arg-copy1>)
-->
   (<dest> ^<name> <copy>)
   (<copy> ^<arg1-name> <arg-copy1>)
}

sp {copy-task-operator*complete-copy-task-operator*learn-copy-task-op-elaboration-rule*2*args
   (state <s> ^operator <o>)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^num-args 2
         ^not-copied true
         ^copy-argument   <arg1>
         ^copy-argument { <arg2> > <arg1>}
         ^task-op-copy <copy>
         ^destination <dest>
         ^copy-name <name>)
   (<arg1> ^arg-name <arg1-name> ^arg-copy <arg-copy1>)
   (<arg2> ^arg-name <arg2-name> ^arg-copy <arg-copy2>)
-->
   (<dest> ^<name> <copy>)
   (<copy> ^<arg1-name> <arg-copy1>
		   ^<arg2-name> <arg-copy2>)
}

sp {copy-task-operator*complete-copy-task-operator*learn-copy-task-op-elaboration-rule*3*args
   (state <s> ^operator <o>)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^num-args 3
         ^not-copied true
         ^copy-argument   <arg1>
         ^copy-argument { <arg2> > <arg1>}
         ^copy-argument { <arg3> > <arg2>}
         ^task-op-copy <copy>
         ^destination <dest>
         ^copy-name <name>)
   (<arg1> ^arg-name <arg1-name> ^arg-copy <arg-copy1>)
   (<arg2> ^arg-name <arg2-name> ^arg-copy <arg-copy2>)
   (<arg3> ^arg-name <arg3-name> ^arg-copy <arg-copy3>)
-->
   (<dest> ^<name> <copy>)
   (<copy> ^<arg1-name> <arg-copy1>
		   ^<arg2-name> <arg-copy2>
		   ^<arg3-name> <arg-copy3>)
}

sp {copy-task-operator*complete-copy-task-operator*learn-copy-task-op-elaboration-rule*4*args
   (state <s> ^operator <o>)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^num-args 4
         ^not-copied true
         ^copy-argument   <arg1>
         ^copy-argument { <arg2> > <arg1>}
         ^copy-argument { <arg3> > <arg2>}
         ^copy-argument { <arg4> > <arg3>}
         ^task-op-copy <copy>
         ^destination <dest>
         ^copy-name <name>)
   (<arg1> ^arg-name <arg1-name> ^arg-copy <arg-copy1>)
   (<arg2> ^arg-name <arg2-name> ^arg-copy <arg-copy2>)
   (<arg3> ^arg-name <arg3-name> ^arg-copy <arg-copy3>)
   (<arg4> ^arg-name <arg4-name> ^arg-copy <arg-copy4>)
-->
   (<dest> ^<name> <copy>)
   (<copy> ^<arg1-name> <arg-copy1>
	  	   ^<arg2-name> <arg-copy2>
	   	   ^<arg3-name> <arg-copy3>
		   ^<arg4-name> <arg-copy4>)
}

sp {copy-task-operator*complete-copy-task-operator*learn-copy-task-op-elaboration-rule*5*args
   (state <s> ^operator <o>)
   (<o> ^name complete-copy-task-operator
        ^workspace <ws>)
   (<ws> ^num-args 5
         ^not-copied true
         ^copy-argument   <arg1>
         ^copy-argument { <arg2> > <arg1>}
         ^copy-argument { <arg3> > <arg2>}
         ^copy-argument { <arg4> > <arg3>}
         ^copy-argument { <arg5> > <arg4>}
         ^task-op-copy <copy>
         ^destination <dest>
         ^copy-name <name>)
   (<arg1> ^arg-name <arg1-name> ^arg-copy <arg-copy1>)
   (<arg2> ^arg-name <arg2-name> ^arg-copy <arg-copy2>)
   (<arg3> ^arg-name <arg3-name> ^arg-copy <arg-copy3>)
   (<arg4> ^arg-name <arg4-name> ^arg-copy <arg-copy4>)
   (<arg5> ^arg-name <arg5-name> ^arg-copy <arg-copy5>)
-->
   (<dest> ^<name> <copy>)
   (<copy> ^<arg1-name> <arg-copy1>
			  ^<arg2-name> <arg-copy2>
			  ^<arg3-name> <arg-copy3>
			  ^<arg4-name> <arg-copy4>
			  ^<arg5-name> <arg-copy5>)
}
