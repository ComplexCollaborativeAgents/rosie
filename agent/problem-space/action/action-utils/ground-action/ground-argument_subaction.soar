sp {ground-action*propose*ground-argument*goal-predicate*subaction
   (state <s> ^name ground-action
              ^ground-argument <arg>)
  (<arg> ^generalized-rep <gen>
         ^arg-type predicate
          -^instance)
  (<gen> ^item-type goal-predicate
         ^type subaction
         ^subaction-handle <h>)
-->
  (<s> ^operator <o> + =)
  (<o> ^name ground-argument
       ^argument <arg>
       ^arg-type subaction
       ^subaction-handle <h>)
}

sp {ground-action*apply*ground-argument*goal-predicate*subaction
   (state <s> ^name ground-action
              ^operator <o> )
  (<o> ^name ground-argument
       ^argument <arg>
       ^arg-type subaction
       ^subaction-handle <h>)
-->
   (<arg> ^instance <i>)
   (<i> ^item-type goal-predicate
        ^type subaction
        ^subaction-handle <h>)
}

sp {ground-action*propose*ground-argument*subaction*matches*default
   (state <s> ^name ground-action
              ^ground-argument <arg>)
   (<arg> ^generalized-rep <gen>
         -^instance)
   (<gen> ^arg-type subaction
          ^id.default.subaction <pred-handle>)
-->
  (<s> ^operator <o> + =)
  (<o> ^name ground-argument
       ^argument <arg>
       ^arg-type subaction
       ^match-type default
       ^handle <pred-handle>)
}

sp {ground-action*apply*ground-argument*subaction*create*instance
  (state <s> ^name ground-action
             ^operator <o>)
  (<o> ^name ground-argument
       ^arg-type subaction
       ^argument <arg>
       ^handle <pred-handle>)
-->
  (<arg> ^instance <i>)
  (<i> ^arg-type subaction
       ^handle <pred-handle>)
}
