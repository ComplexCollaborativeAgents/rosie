###############################################################
#####                 predicate-handle                    #####

sp {ground-action*propose*ground-argument*predicate-handle*matches*procedural
   (state <s> ^name ground-action
              ^ground-argument <arg>
              ^reference-id.<arg-name> <parg>
              ^reference-action.<arg-name> <op-arg>)
  (<arg> ^generalized-rep <gen>
          -^instance)
  (<gen> ^arg-type predicate-handle
         ^id <pred-slot>)
   (<parg> ^arg-type predicate
           ^id <pred-slot>)
   (<op-arg> ^arg-type predicate
             ^handle <pred-handle>)
-->
  (<s> ^operator <o> + =)
  (<o> ^name ground-argument
       ^argument <arg>
       ^arg-type predicate-handle
       ^match-type procedural
       ^handle <pred-handle>)
}

sp {ground-action*propose*ground-argument*predicate-handle*matches*default
   (state <s> ^name ground-action
              ^ground-argument <arg>)
   (<arg> ^generalized-rep <gen>
         -^instance)
   (<gen> ^arg-type predicate-handle
          ^id.default.predicate-handle <pred-handle>)
-->
  (<s> ^operator <o> + =)
  (<o> ^name ground-argument
       ^argument <arg>
       ^arg-type predicate-handle
       ^match-type default
       ^handle <pred-handle>)
}

sp {ground-action*apply*ground-argument*predicate-handle*create*instance
  (state <s> ^name ground-action
             ^operator <o>)
  (<o> ^name ground-argument
       ^arg-type predicate-handle
       ^argument <arg>
       ^handle <pred-handle>)
-->
  (<arg> ^instance <i>)
  (<i> ^arg-type predicate-handle
       ^handle <pred-handle>)
}
