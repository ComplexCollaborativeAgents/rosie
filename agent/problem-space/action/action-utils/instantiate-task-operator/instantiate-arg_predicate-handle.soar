###############################################################
#####                 predicate-handle                    #####

sp {instantiate-task-operator*propose*instantiate-task-argument*predicate-handle*matches*procedural
   (state <s> ^name instantiate-task-operator
              ^instantiate-task-argument <arg>
              ^reference-tcn-proc.<arg-name> <parg>
              ^reference-task-op.<arg-name> <op-arg>)
  (<arg> ^general-arg-rep <gen>
          -^instantiation)
  (<gen> ^arg-type predicate-handle
         ^id <pred-slot>)
   (<parg> ^arg-type predicate
           ^id <pred-slot>)
   (<op-arg> ^arg-type predicate
             ^handle <pred-handle>)
-->
  (<s> ^operator <o> + =)
  (<o> ^name instantiate-task-argument
       ^argument <arg>
       ^arg-type predicate-handle
       ^match-type procedural
       ^handle <pred-handle>)
}

sp {instantiate-task-operator*propose*instantiate-task-argument*predicate-handle*matches*default
   (state <s> ^name instantiate-task-operator
              ^instantiate-task-argument <arg>)
   (<arg> ^general-arg-rep <gen>
         -^instantiation)
   (<gen> ^arg-type predicate-handle
          ^id.default.predicate-handle <pred-handle>)
-->
  (<s> ^operator <o> + =)
  (<o> ^name instantiate-task-argument
       ^argument <arg>
       ^arg-type predicate-handle
       ^match-type default
       ^handle <pred-handle>)
}

sp {instantiate-task-operator*apply*instantiate-task-argument*predicate-handle*create*instantiation
  (state <s> ^name instantiate-task-operator
             ^operator <o>)
  (<o> ^name instantiate-task-argument
       ^arg-type predicate-handle
       ^argument <arg>
       ^handle <pred-handle>)
-->
  (<arg> ^instantiation <i>)
  (<i> ^arg-type predicate-handle
       ^handle <pred-handle>)
}
