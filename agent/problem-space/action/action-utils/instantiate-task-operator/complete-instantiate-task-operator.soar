sp {instantiate-task-operator*propose*complete-instantiate-task-operator
   (state <s> ^name instantiate-task-operator)
-->
   (<s> ^operator <o> +)
   (<o> ^name complete-instantiate-task-operator)
}

sp {instantiate-task-operator*apply*complete-instantiate-task-operator*create*task-operator-instantiation
   (state <s> ^name instantiate-task-operator
              ^operator.name complete-instantiate-task-operator
              ^general-task-rep <rep>
              ^perform <perf>)
   (<rep> ^handle <handle>
          ^op_name <name>
          ^task-handle <th>)
-->
   (<s> ^task-operator-instantiation <tkop>)
   (<tkop> ^name <name>
           ^task-handle <th>
           ^perform <perf>)
}

sp {instantiate-task-operator*apply*complete-instantiate-task-operator*copy*arg-status
   (state <s> ^name instantiate-task-operator
              ^operator.name complete-instantiate-task-operator
              ^instantiate-task-argument <ita>)
   (<ita> ^general-arg-rep.arg-status <arg-status>
          ^instantiation <i>)
-->
   (<i> ^arg-status <arg-status>)
}


# Copy the arguments onto the task-operator-instantiation and copy the task-operator-instantiation to the superstate
# (Will create the chunked application rule)
# ENUMERATE: 0-5 arguments

sp {instantiate-task-operator*apply*complete-instantiate-task-operator*copy*task-operator-instantiation*superstate*0*arguments
   (state <s> ^name instantiate-task-operator
              ^operator.name complete-instantiate-task-operator
              ^num-args 0
              ^task-operator-instantiation <toi>
              ^destination <dest>)
-->
   (<dest> ^instantiation <toi>)
}

sp {instantiate-task-operator*apply*complete-instantiate-task-operator*copy*task-operator-instantiation*superstate*1*arguments
   (state <s> ^name instantiate-task-operator
              ^operator.name complete-instantiate-task-operator
              ^num-args 1
              ^task-operator-instantiation <toi>
              ^instantiate-task-argument   <arg1>
              ^destination <dest>)
   (<arg1> ^arg-name <arg1-name> ^instantiation <argi1>)
-->
   (<dest> ^instantiation <toi>)
   (<toi> ^<arg1-name> <argi1>)
}

sp {instantiate-task-operator*apply*complete-instantiate-task-operator*copy*task-operator-instantiation*superstate*2*arguments
   (state <s> ^name instantiate-task-operator
              ^operator.name complete-instantiate-task-operator
              ^num-args 2
              ^task-operator-instantiation <toi>
              ^instantiate-task-argument   <arg1>
              ^instantiate-task-argument { <arg2> > <arg1>}
              ^destination <dest>)
   (<arg1> ^arg-name <arg1-name> ^instantiation <argi1>)
   (<arg2> ^arg-name <arg2-name> ^instantiation <argi2>)
-->
   (<dest> ^instantiation <toi>)
   (<toi> ^<arg1-name> <argi1>
          ^<arg2-name> <argi2>)
}

sp {instantiate-task-operator*apply*complete-instantiate-task-operator*copy*task-operator-instantiation*superstate*3*arguments
   (state <s> ^name instantiate-task-operator
              ^operator.name complete-instantiate-task-operator
              ^num-args 3
              ^task-operator-instantiation <toi>
              ^instantiate-task-argument   <arg1>
              ^instantiate-task-argument { <arg2> > <arg1>}
              ^instantiate-task-argument { <arg3> > <arg2>}
              ^destination <dest>)
   (<arg1> ^arg-name <arg1-name> ^instantiation <argi1>)
   (<arg2> ^arg-name <arg2-name> ^instantiation <argi2>)
   (<arg3> ^arg-name <arg3-name> ^instantiation <argi3>)
-->
   (<dest> ^instantiation <toi>)
   (<toi> ^<arg1-name> <argi1>
          ^<arg2-name> <argi2>
          ^<arg3-name> <argi3>)
}

sp {instantiate-task-operator*apply*complete-instantiate-task-operator*copy*task-operator-instantiation*superstate*4*arguments
   (state <s> ^name instantiate-task-operator
              ^operator.name complete-instantiate-task-operator
              ^num-args 4
              ^task-operator-instantiation <toi>
              ^instantiate-task-argument   <arg1>
              ^instantiate-task-argument { <arg2> > <arg1>}
              ^instantiate-task-argument { <arg3> > <arg2>}
              ^instantiate-task-argument { <arg4> > <arg3>}
              ^destination <dest>)
   (<arg1> ^arg-name <arg1-name> ^instantiation <argi1>)
   (<arg2> ^arg-name <arg2-name> ^instantiation <argi2>)
   (<arg3> ^arg-name <arg3-name> ^instantiation <argi3>)
   (<arg4> ^arg-name <arg4-name> ^instantiation <argi4>)
-->
   (<dest> ^instantiation <toi>)
   (<toi> ^<arg1-name> <argi1>
          ^<arg2-name> <argi2>
          ^<arg3-name> <argi3>
          ^<arg4-name> <argi4>)
}

sp {instantiate-task-operator*apply*complete-instantiate-task-operator*copy*task-operator-instantiation*superstate*5*arguments
   (state <s> ^name instantiate-task-operator
              ^operator.name complete-instantiate-task-operator
              ^num-args 5
              ^task-operator-instantiation <toi>
              ^instantiate-task-argument   <arg1>
              ^instantiate-task-argument { <arg2> > <arg1>}
              ^instantiate-task-argument { <arg3> > <arg2>}
              ^instantiate-task-argument { <arg4> > <arg3>}
              ^instantiate-task-argument { <arg5> > <arg4>}
              ^destination <dest>)
   (<arg1> ^arg-name <arg1-name> ^instantiation <argi1>)
   (<arg2> ^arg-name <arg2-name> ^instantiation <argi2>)
   (<arg3> ^arg-name <arg3-name> ^instantiation <argi3>)
   (<arg4> ^arg-name <arg4-name> ^instantiation <argi4>)
   (<arg5> ^arg-name <arg5-name> ^instantiation <argi5>)
-->
   (<dest> ^instantiation <toi>)
   (<toi> ^<arg1-name> <argi1>
          ^<arg2-name> <argi2>
          ^<arg3-name> <argi3>
          ^<arg4-name> <argi4>
          ^<arg5-name> <argi5>)
}
