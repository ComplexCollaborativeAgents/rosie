sp {learn-proposal-rule-substate*propose*retrieve-learning-episode
   (state <s> ^name learn-proposal-rule-substate
             -^learning-episode)
-->
   (<s> ^operator <o> +)
   (<o> ^name retrieve-learning-episode)
}

sp {learn-proposal-rule-substate*apply*retrieve-learning-episode
   (state <s> ^name learn-proposal-rule-substate
              ^operator.name retrieve-learning-episode
              ^epmem.command <cmd>)
-->
   (<cmd> ^query <q>)
   (<q> ^operator <o>)
   (<o> ^name satisfy-purpose
        ^purpose.type retrospective-learning)
}

sp {learn-proposal-rule-substate*apply*retrieve-learning-episode*success
   (state <s> ^name learn-proposal-rule-substate
              ^operator.name retrieve-learning-episode
              ^epmem <epmem>)
   (<epmem> ^result <res>
            ^result.retrieved <episode>
            ^command <cmd>)
   (<res> ^success <q>
          ^retrieved <episode>
          ^memory-id <ep-id>
          ^normalized-match-score 1.0)
   (<cmd> ^query <q>)
-->
   (<s> ^learning-episode <episode>)
   (<cmd> ^query <q> -)
}

#sp {learn-proposal-rule-substate*propose*operator*superstate
#   (state <s> ^name learn-proposal-rule-substate)
#-->
#   (<s> ^retrieved-action <a>)
#   (<a> ^name op_deliver1
#        ^action-handle deliver1
#        ^perform multiple
#        ^subaction-handle none
#        ^arg1 <arg1>
#        ^arg2 <arg2>)
#   (<arg1> ^arg-type object
#           ^arg-status real
#           ^id <obj1>)
#   (<arg2> ^arg-type predicate
#           ^arg-status desired
#           ^handle in1
#           ^2 <obj2>)
#   (<obj1> ^handle box1_1 ^item-type object ^predicates <preds1>)
#   (<preds1> ^visible true ^category object ^arm-status not-grabbed ^color red1 ^shape box1)
#   (<obj2> ^handle loc-kitchen1 ^item-type object ^predicates <preds2> ^waypoint wp03)
#   (<preds2> ^category location ^name kitchen1 ^modifier1 current1 ^spatial-shape room1 ^visible true)
#}

sp {learn-proposal-rule-substate*propose*retrieve-initial-episode
   (state <s> ^name learn-proposal-rule-substate
              ^learning-episode
             -^initial-episode)
-->
   (<s> ^operator <o> +)
   (<o> ^name retrieve-initial-episode)
}

sp {learn-proposal-rule-substate*apply*retrieve-initial-episode
   (state <s> ^name learn-proposal-rule-substate
              ^operator.name retrieve-initial-episode
              ^learning-episode.operator <o>
              ^epmem.command <cmd>)
   (<o> ^name satisfy-purpose
        ^purpose.parameters.action.execution-operator.action-handle <action-handle>)
-->
   (<cmd> ^query <q>)
   (<q> ^action-stack.top <top>)
   (<top> ^start-of-execution true
          ^execution-operator.action-handle <action-handle>)
}

sp {learn-proposal-rule-substate*apply*retrieve-initial-episode*success
   (state <s> ^name learn-proposal-rule-substate
              ^operator.name retrieve-initial-episode
              ^epmem <epmem>)
   (<epmem> ^result <res>
            ^result.retrieved <episode>
            ^command <cmd>)
   (<res> ^success <q>
          ^retrieved <episode>
          ^memory-id <ep-id>
          ^normalized-match-score 1.0)
   (<cmd> ^query <q>)
-->
   (<s> ^initial-episode <episode>)
   (<cmd> ^query <q> -)
}

