#### constructing object arguments

# If the object is not in the world, create a proper world object representation
# using construct-world-object (Implemented in manage-world-state/construct-world-object.soar)

# Check to see if there is already a world-object

sp {task-utils*construct-task-argument*elaborate*construct-task-argument*world-object
   (state <s> ^construct-task-argument <arg>
              ^top-state.world.objects.object <src-obj>)
   (<arg> ^arg-type object
          ^source <src-obj>)
-->
   (<arg> ^world-object <src-obj>)
}

sp {task-utils*construct-task-argument*elaborate*construct-task-argument*world-object*from*source
   (state <s> ^construct-task-argument <arg>)
   (<arg> ^arg-type object
          ^source.world-object <obj>)
-->
   (<arg> ^world-object <obj>)
}

# If the object is from smem, propose construct-world-object
sp {task-utils*construct-task-argument*propose*construct-world-object*from*smem
   (state <s> ^construct-task-argument <arg>)
   (<arg> ^arg-type object
          ^source <src-obj>
         -^world-object)
   (<src-obj> ^object-instance true) # means it is an smem object
-->
   (<s> ^operator <o> + =)
   (<o> ^name construct-world-object
        ^source-type smem
        ^source-obj <src-obj>
        ^result-destination <arg>
        ^result-name world-object)
}

# If the object is imagined (new rep created during comprehension), propose construct-world-object
sp {task-utils*construct-task-argument*propose*construct-world-object*from*imagination
   (state <s> ^construct-task-argument <arg>)
   (<arg> ^arg-type object
          ^source <src-obj>
         -^world-object)
   (<src-obj> ^item-type object
             -^object-instance true)  # means it is not from smem
-->
   (<s> ^operator <o> + =)
   (<o> ^name construct-world-object
        ^source-type imagined
        ^source-obj <src-obj>
        ^result-destination <src-obj>
        ^result-name world-object)
}


### construct-task-argument object

sp {task-utils*construct-task-argument*propose*construct-task-argument*object
   (state <s> ^construct-task-argument <arg>)
   (<arg> ^arg-type object
          ^world-object <obj>
         -^created-arg)
-->
   (<s> ^operator <o> + =)
   (<o> ^name construct-task-argument
        ^argument <arg>
        ^arg-type object
        ^object <obj>)
}

sp {task-utils*construct-task-argument*apply*construct-task-argument*object
   (state <s> ^operator <o>)
   (<o> ^name construct-task-argument
        ^argument <arg>
        ^arg-type object
        ^object <obj>)
-->
   (<arg> ^created-arg <carg>)
   (<carg> ^id <obj>)
}
