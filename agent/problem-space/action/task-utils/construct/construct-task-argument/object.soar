#### constructing object arguments


# If it is not an smem object, it is already in the proper representation
sp {task-utils*construct-task-argument*elaborate*construct-task-argument*object*world-object*not*smem*not*linked
   (state <s> ^construct-task-argument <arg>)
   (<arg> ^arg-type object
          ^source <src-obj>)
   (<src-obj> ^item-type object
             -^object-instance true) # not from smem
-->
   (<arg> ^world-object <src-obj>)
}


### If it is an smem-object, convert it into a world object representation
# using construct-world-object (Implemented in manage-world-state/construct-world-object.soar)
sp {task-utils*construct-task-argument*propose*construct-world-object*from*smem
   (state <s> ^construct-task-argument <arg>)
   (<arg> ^arg-type object
          ^source <src-obj>
         -^world-object)
   (<src-obj> ^object-instance true) # means it is an smem object
-->
   (<s> ^operator <o> + =)
   (<o> ^name construct-world-object
        ^source-type smem
        ^source-obj <src-obj>
        ^result-destination <arg>
        ^result-name world-object)
}

### construct-task-argument object

sp {task-utils*construct-task-argument*propose*construct-task-argument*object
   (state <s> ^construct-task-argument <arg>)
   (<arg> ^arg-type object
          ^world-object <obj>
         -^created-arg)
-->
   (<s> ^operator <o> + =)
   (<o> ^name construct-task-argument
        ^argument <arg>
        ^arg-type object
        ^object <obj>)
}

sp {task-utils*construct-task-argument*apply*construct-task-argument*object
   (state <s> ^operator <o>)
   (<o> ^name construct-task-argument
        ^argument <arg>
        ^arg-type object
        ^object <obj>)
-->
   (<arg> ^created-arg <carg>)
   (<carg> ^id <obj>)
}


