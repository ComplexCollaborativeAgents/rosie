### copy-argument clause (until-clause after-clause)

sp {task-utils*copy-task-argument*clause*elaborate*copy-predicate-set
   (state <s> ^copy-task-argument <copy-cl>)
   (<copy-cl> ^arg-type << until-clause after-clause >>
              ^source-arg <src>
              ^object-map <map>)
-->
   (<s> ^copy-task-argument <copy-ps>)
   (<copy-ps> ^arg-type predicate-set
              ^source-arg <src>
              ^object-map <map>)
   (<copy-cl> ^copy-predicate-set <copy-ps>)
}

sp {task-utils*copy-task-argument*clause*elaborate*copy-predicate-set*result
   (state <s> ^copy-task-argument <copy-cl>)
   (<copy-cl> ^arg-type << until-clause after-clause >>
              ^copy-predicate-set.arg-copy <copy>)
-->
   (<copy-cl> ^arg-copy <copy>)
}


#### STATE PREDICATE
#
#sp {task-utils*copy-task-operator*expand*clause*argument*state
#   (state <s> ^copy-task-op-workspace <ws>)
#   (<ws> ^copy-argument <arg>)
#   (<arg> ^arg-type << until-clause after-clause >>
#          ^source-arg.predicate <src>)
#   (<src> ^type state
#          ^handle <h>
#          ^1 <obj1>)
#-->
#   (<arg> ^pred-type state
#          ^pred-handle <h>
#          ^obj1-copy <obj1-copy>)
#
#   (<ws> ^copy-argument <obj1-copy>)
#   (<obj1-copy> ^arg-type object
#                ^source-arg.id <obj1>)
#}
#
#sp {task-utils*copy-task-operator*propose*copy-task-argument*clause*state
#   (state <s> ^copy-task-op-workspace <ws>)
#   (<ws> ^copy-argument <arg>)
#   (<arg> ^arg-type { <clause-type> << until-clause after-clause >> }
#          ^pred-type state
#          ^pred-handle <h>
#          ^obj1-copy.arg-copy.id <obj1-copy>
#         -^arg-copy)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name copy-task-argument
#        ^workspace <ws>
#        ^argument <arg>
#        ^arg-type clause
#        ^clause-type <clause-type>
#        ^pred-type state
#        ^pred-handle <h>
#        ^obj1 <obj1-copy>)
#}
#
#sp {task-utils*copy-task-operator*apply*copy-task-argument*clause*state
#   (state <s> ^operator <o>)
#   (<o> ^name copy-task-argument
#        ^argument <arg>
#        ^arg-type clause
#        ^clause-type <clause-type>
#        ^pred-handle <h>
#        ^pred-type state
#        ^obj1 <obj1>)
#-->
#   (<arg> ^arg-copy <copy>)
#   (<copy> ^arg-type <clause-type>
#           ^predicate <new-pred>)
#   (<new-pred> ^type state
#               ^handle <h>
#               ^1 <obj1>)
#}
#
#### RELATION PREDICATE
#
#sp {task-utils*copy-task-operator*expand*clause*argument*relation
#   (state <s> ^copy-task-op-workspace <ws>)
#   (<ws> ^copy-argument <arg>)
#   (<arg> ^arg-type << until-clause after-clause >>
#          ^source-arg.predicate <src>
#         -^arg-copy)
#   (<src> ^type relation
#          ^handle <h>
#          ^1 <obj1>
#          ^2 <obj2>)
#-->
#   (<arg> ^pred-type relation
#          ^pred-handle <h>
#          ^obj1-copy <obj1-copy>
#          ^obj2-copy <obj2-copy>)
#
#   (<ws> ^copy-argument <obj1-copy> <obj2-copy>)
#   (<obj1-copy> ^arg-type object
#                ^source-arg.id <obj1>)
#   (<obj2-copy> ^arg-type object
#                ^source-arg.id <obj2>)
#}
#
#sp {task-utils*copy-task-operator*propose*copy-task-argument*clause*relation
#   (state <s> ^copy-task-op-workspace <ws>)
#   (<ws> ^copy-argument <arg>)
#   (<arg> ^arg-type { <clause-type> << until-clause after-clause >> }
#          ^pred-type relation
#          ^pred-handle <h>
#          ^obj1-copy.arg-copy.id <obj1-copy>
#          ^obj2-copy.arg-copy.id <obj2-copy>
#         -^arg-copy)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name copy-task-argument
#        ^workspace <ws>
#        ^argument <arg>
#        ^arg-type clause
#        ^clause-type <clause-type>
#        ^pred-type relation
#        ^pred-handle <h>
#        ^obj1 <obj1-copy>
#        ^obj2 <obj2-copy>)
#}
#
#sp {task-utils*copy-task-operator*apply*copy-task-argument*clause*relation
#   (state <s> ^operator <o>)
#   (<o> ^name copy-task-argument
#        ^argument <arg>
#        ^arg-type clause
#        ^clause-type <clause-type>
#        ^pred-handle <h>
#        ^pred-type relation
#        ^obj1 <obj1>
#        ^obj2 <obj2>)
#-->
#   (<arg> ^arg-copy <copy>)
#   (<copy> ^arg-type <clause-type>
#           ^predicate <new-pred>)
#   (<new-pred> ^type relation
#               ^handle <h>
#               ^1 <obj1>
#               ^2 <obj2>)
#}
#
#### DURATION PREDICATE
#
#sp {task-utils*copy-task-operator*expand*clause*duration
#   (state <s> ^copy-task-op-workspace <ws>)
#   (<ws> ^copy-argument <arg>)
#   (<arg> ^arg-type << until-clause after-clause >>
#          ^source-arg.predicate <src>)
#   (<src> ^type duration
#          ^number <num>
#          ^unit <unit>)
#-->
#   (<arg> ^pred-type duration
#          ^number <num>
#          ^unit <unit>)
#}
#
#sp {task-utils*copy-task-operator*propose*copy-task-argument*clause*duration
#   (state <s> ^copy-task-op-workspace <ws>)
#   (<ws> ^copy-argument <arg>)
#   (<arg> ^arg-type { <clause-type> << until-clause after-clause >> }
#          ^pred-type duration
#          ^number <num>
#          ^unit <unit>
#         -^arg-copy)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name copy-task-argument
#        ^workspace <ws>
#        ^argument <arg>
#        ^arg-type clause
#        ^clause-type <clause-type>
#        ^pred-type duration
#        ^number <num>
#        ^unit <unit>)
#}
#
#sp {task-utils*copy-task-operator*apply*copy-task-argument*clause*duration
#   (state <s> ^operator <o>)
#   (<o> ^name copy-task-argument
#        ^argument <arg>
#        ^arg-type clause
#        ^clause-type <clause-type>
#        ^pred-type duration
#        ^number <num>
#        ^unit <unit>)
#-->
#   (<arg> ^arg-copy <copy>)
#   (<copy> ^arg-type <clause-type>
#           ^predicate <new-pred>)
#   (<new-pred> ^type duration
#               ^number <num>
#               ^unit <unit>)
#}
#
#### CLOCKTIME PREDICATE
#
#sp {task-utils*copy-task-operator*expand*clause*clocktime
#   (state <s> ^copy-task-op-workspace <ws>)
#   (<ws> ^copy-argument <arg>)
#   (<arg> ^arg-type << until-clause after-clause >>
#          ^source-arg.predicate <src>)
#   (<src> ^type clocktime
#          ^hour <hour>
#          ^minute <minute>)
#-->
#   (<arg> ^pred-type clocktime
#          ^hour <hour>
#          ^minute <minute>)
#}
#
#sp {task-utils*copy-task-operator*propose*copy-task-argument*clause*clocktime
#   (state <s> ^copy-task-op-workspace <ws>)
#   (<ws> ^copy-argument <arg>)
#   (<arg> ^arg-type { <clause-type> << until-clause after-clause >> }
#          ^pred-type clocktime
#          ^hour <hour>
#          ^minute <minute>
#         -^arg-copy)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name copy-task-argument
#        ^workspace <ws>
#        ^argument <arg>
#        ^arg-type clause
#        ^clause-type <clause-type>
#        ^pred-type clocktime
#        ^hour <hour>
#        ^minute <minute>)
#}
#
#sp {task-utils*copy-task-operator*apply*copy-task-argument*clause*clocktime
#   (state <s> ^operator <o>)
#   (<o> ^name copy-task-argument
#        ^argument <arg>
#        ^arg-type clause
#        ^clause-type <clause-type>
#        ^pred-type clocktime
#        ^hour <hour>
#        ^minute <minute>)
#-->
#   (<arg> ^arg-copy <copy>)
#   (<copy> ^arg-type <clause-type>
#           ^predicate <new-pred>)
#   (<new-pred> ^type clocktime
#               ^hour <hour>
#               ^minute <minute>)
#}
