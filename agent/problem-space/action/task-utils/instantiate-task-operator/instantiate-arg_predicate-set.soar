###############################################################
#####                predicate-set                        #####

sp {instantiate-task-operator*instantiate-task-argument*predicate-set*elaborate*pred-count
   (state <s> ^name instantiate-task-operator
              ^instantiate-task-argument <arg>)
   (<arg> ^arg-type predicate-set
          ^general-arg-rep.pred-count <c>)
-->
   (<arg> ^pred-count <c>)
}

# ENUMERATE: 1-5 predicates
sp {instantiate-task-operator*instantiate-task-argument*expand*predicate-set*predicate*1
  (state <s> ^name instantiate-task-operator
             ^instantiate-task-argument <arg>)
  (<arg> ^arg-type predicate-set
         ^general-arg-rep.{1} <p1>)
-->
  (<s> ^instantiate-task-argument <gp1>)
  (<gp1> ^arg-type predicate
         ^general-arg-rep <p1>)
  (<arg> ^instantiate-pred1 <gp1>)
}

sp {instantiate-task-operator*instantiate-task-argument*expand*predicate-set*predicate*2
  (state <s> ^name instantiate-task-operator
             ^instantiate-task-argument <arg>)
  (<arg> ^arg-type predicate-set
         ^general-arg-rep.{2} <p2>)
-->
  (<s> ^instantiate-task-argument <gp2>)
  (<gp2> ^arg-type predicate
         ^general-arg-rep <p2>)
  (<arg> ^instantiate-pred2 <gp2>)
}

sp {instantiate-task-operator*instantiate-task-argument*expand*predicate-set*predicate*3
  (state <s> ^name instantiate-task-operator
             ^instantiate-task-argument <arg>)
  (<arg> ^arg-type predicate-set
         ^general-arg-rep.{3} <p3>)
-->
  (<s> ^instantiate-task-argument <gp3>)
  (<gp3> ^arg-type predicate
         ^general-arg-rep <p3>)
  (<arg> ^instantiate-pred3 <gp3>)
}

sp {instantiate-task-operator*instantiate-task-argument*expand*predicate-set*predicate*4
  (state <s> ^name instantiate-task-operator
             ^instantiate-task-argument <arg>)
  (<arg> ^arg-type predicate-set
         ^general-arg-rep.{4} <p4>)
-->
  (<s> ^instantiate-task-argument <gp4>)
  (<gp4> ^arg-type predicate
         ^general-arg-rep <p4>)
  (<arg> ^instantiate-pred4 <gp4>)
}

sp {instantiate-task-operator*instantiate-task-argument*expand*predicate-set*predicate*5
  (state <s> ^name instantiate-task-operator
             ^instantiate-task-argument <arg>)
  (<arg> ^arg-type predicate-set
         ^general-arg-rep.{5} <p5>)
-->
  (<s> ^instantiate-task-argument <gp5>)
  (<gp5> ^arg-type predicate
         ^general-arg-rep <p5>)
  (<arg> ^instantiate-pred5 <gp5>)
}

# Propose instantiate-task-argument predicate-set
sp {instantiate-task-operator*propose*instantiate-task-argument*predicate-set
  (state <s> ^name instantiate-task-operator
             ^instantiate-task-argument <arg>)
  (<arg> ^arg-type predicate-set
        -^instantiation)
-->
  (<s> ^operator <o> + =)
  (<o> ^name instantiate-task-argument
       ^argument <arg>
       ^arg-type predicate-set)
}

# Reject instantiate-task-argument predicate-set if one of the predicates is still uninstantiateed
sp {instantiate-task-operator*reject*instantiate-task-argument*predicate-set*uninstantiateed*pred
  (state <s> ^name instantiate-task-operator
             ^operator <o> +)
  (<o> ^name instantiate-task-argument
       ^argument <arg>
       ^arg-type predicate-set)
  (<arg> ^<pred-num> <gp>)
  (<gp> ^arg-type predicate
       -^instantiation)
-->
  (<s> ^operator <o> -)
}

# ENUMERATE: 1-5 predicates
sp {instantiate-task-operator*apply*instantiate-task-argument*predicate-set*1*predicate
   (state <s> ^name instantiate-task-operator
              ^operator <o>)
   (<o> ^name instantiate-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^pred-count 1
          ^instantiate-pred1.instantiation <p1>)
-->
   (<arg> ^instantiation <i>)
   (<i> ^pred-count 1
        ^1 <p1>)
}


sp {instantiate-task-operator*apply*instantiate-task-argument*predicate-set*2*predicate
   (state <s> ^name instantiate-task-operator
              ^operator <o>)
   (<o> ^name instantiate-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^pred-count 2
          ^instantiate-pred1.instantiation <p1>
          ^instantiate-pred2.instantiation <p2>)
-->
   (<arg> ^instantiation <i>)
   (<i> ^pred-count 2
        ^1 <p1>
        ^2 <p2>)
}

sp {instantiate-task-operator*apply*instantiate-task-argument*predicate-set*3*predicate
   (state <s> ^name instantiate-task-operator
              ^operator <o>)
   (<o> ^name instantiate-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^pred-count 3
          ^instantiate-pred1.instantiation <p1>
          ^instantiate-pred2.instantiation <p2>
          ^instantiate-pred3.instantiation <p3>)
-->
   (<arg> ^instantiation <i>)
   (<i> ^pred-count 3
        ^1 <p1>
        ^2 <p2>
        ^3 <p3>)
}

sp {instantiate-task-operator*apply*instantiate-task-argument*predicate-set*4*predicate
   (state <s> ^name instantiate-task-operator
              ^operator <o>)
   (<o> ^name instantiate-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^pred-count 4
          ^instantiate-pred1.instantiation <p1>
          ^instantiate-pred2.instantiation <p2>
          ^instantiate-pred3.instantiation <p3>
          ^instantiate-pred4.instantiation <p4>)
-->
   (<arg> ^instantiation <i>)
   (<i> ^pred-count 4
        ^1 <p1>
        ^2 <p2>
        ^3 <p3>
        ^4 <p4>)
}

sp {instantiate-task-operator*apply*instantiate-task-argument*predicate-set*5*predicate
   (state <s> ^name instantiate-task-operator
              ^operator <o>)
   (<o> ^name instantiate-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^pred-count 5
          ^instantiate-pred1.instantiation <p1>
          ^instantiate-pred2.instantiation <p2>
          ^instantiate-pred3.instantiation <p3>
          ^instantiate-pred4.instantiation <p4>
          ^instantiate-pred5.instantiation <p5>)
-->
   (<arg> ^instantiation <i>)
   (<i> ^pred-count 5
        ^1 <p1>
        ^2 <p2>
        ^3 <p3>
        ^4 <p4>
        ^5 <p5>)
}
