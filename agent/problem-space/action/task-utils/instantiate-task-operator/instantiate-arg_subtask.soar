sp {instantiate-task-operator*propose*instantiate-task-argument*goal-predicate*subtask
   (state <s> ^name instantiate-task-operator
              ^instantiate-task-argument <arg>)
  (<arg> ^general-arg-rep <gen>
         ^arg-type predicate
          -^instantiation)
  (<gen> ^item-type goal-predicate
         ^type subtask
         ^subtask-handle <h>)
-->
  (<s> ^operator <o> + =)
  (<o> ^name instantiate-task-argument
       ^argument <arg>
       ^arg-type subtask
       ^subtask-handle <h>)
}

sp {instantiate-task-operator*apply*instantiate-task-argument*goal-predicate*subtask
   (state <s> ^name instantiate-task-operator
              ^operator <o> )
  (<o> ^name instantiate-task-argument
       ^argument <arg>
       ^arg-type subtask
       ^subtask-handle <h>)
-->
   (<arg> ^instantiation <i>)
   (<i> ^item-type goal-predicate
        ^type subtask
        ^subtask-handle <h>)
}

sp {instantiate-task-operator*propose*instantiate-task-argument*subtask*matches*default
   (state <s> ^name instantiate-task-operator
              ^instantiate-task-argument <arg>)
   (<arg> ^general-arg-rep <gen>
         -^instantiation)
   (<gen> ^arg-type subtask
          ^id.default.subtask <pred-handle>)
-->
  (<s> ^operator <o> + =)
  (<o> ^name instantiate-task-argument
       ^argument <arg>
       ^arg-type subtask
       ^match-type default
       ^handle <pred-handle>)
}

sp {instantiate-task-operator*apply*instantiate-task-argument*subtask*create*instantiation
  (state <s> ^name instantiate-task-operator
             ^operator <o>)
  (<o> ^name instantiate-task-argument
       ^arg-type subtask
       ^argument <arg>
       ^handle <pred-handle>)
-->
  (<arg> ^instantiation <i>)
  (<i> ^arg-type subtask
       ^handle <pred-handle>)
}
