## op_pick-up1
sp {composite-action*propose*op_pick-up1*tabletop
   (state <s> ^problem-space <ps>
              ^world.objects.object <obj>
             -^world.objects.object.predicates.arm-status grabbed)
   (<ps> ^name action
         ^action.propose-action-operators true)
   (<obj> ^predicates <preds>)
   (<preds> ^category block
            ^visible true
            ^arm-status not-grabbed)
-->
   (<s> ^operator <op> +)
   (<op> ^name op_pick-up1 
         ^action-handle pick-up1
         ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}

## op_put-down1
sp {composite-action*propose*op_put-down1*tabletop
   (state <s> ^problem-space <ps>
              ^world.objects.object <obj>
              ^world.objects.object { <obj2> <> <obj> })
   (<ps> ^name action
         ^action.propose-action-operators true)
   (<obj> ^predicates.arm-status grabbed)
   (<obj2> ^predicates <obj2-preds>)
   (<obj2-preds> ^visible true)
-->
   (<s> ^operator <op> +)
   (<op> ^name op_put-down1
         ^action-handle put-down1
         ^arg1 <arg1>
         ^arg2 <arg2>)
   (<arg1> ^arg-type object
           ^id <obj>)
   (<arg2> ^arg-type predicate
           ^default-handle on1
           ^any-predicate true
           ^2 <obj2>)
}

## op_turn-on1
sp {composite-action*propose*op_turn-on1*tabletop
   (state <s> ^problem-space <ps>
              ^world.objects.object <obj>)
   (<ps> ^name action
         ^action.propose-action-operators true)
   (<obj> ^predicates <preds>)
   (<preds> ^visible true
            ^activation1 off2)
-->
   (<s> ^operator <op> +)
   (<op> ^name op_turn-on1 
         ^action-handle op_turn-on1
         ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}

## op_turn-off1
sp {composite-action*propose*op_turn-off1*tabletop
   (state <s> ^problem-space <ps>
              ^world.objects.object <obj>)
   (<ps> ^name action
         ^action.propose-action-operators true)
   (<obj> ^predicates <preds>)
   (<preds> ^visible true
            ^activation1 on2)
-->
   (<s> ^operator <op> +)
   (<op> ^name op_turn-off1 
         ^action-handle op_turn-off1
         ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}

## op_open1
sp {composite-action*propose*op_open1*tabletop
   (state <s> ^problem-space <ps>
              ^world.objects.object <obj>)
   (<ps> ^name action
         ^action.propose-action-operators true)
   (<obj> ^predicates <preds>)
   (<preds> ^visible true
            ^door2 closed2)
-->
   (<s> ^operator <op> +)
   (<op> ^name op_open1 
         ^action-handle op_open1
         ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}

## op_close1
sp {composite-action*propose*op_close1*tabletop
   (state <s> ^problem-space <ps>
              ^world.objects.object <obj>)
   (<ps> ^name action
         ^action.propose-action-operators true)
   (<obj> ^predicates <preds>)
   (<preds> ^visible true
            ^door2 open2)
-->
   (<s> ^operator <op> +)
   (<op> ^name op_close1 
         ^action-handle op_close1
         ^arg1 <arg1>)
   (<arg1> ^arg-type object
           ^id <obj>)
}

#sp {composite-action*propose*op_put-down1*with*obj2
#   (state <s> ^problem-space <ps>
#              ^world.objects.object <obj1>
#              ^world.objects.object { <obj2> <> <obj1> })
#   (<ps> ^name action
#         ^action.propose-action-operators true)
#   (<obj1> ^predicates.arm-status grabbed)
#   (<obj2> ^predicates.visible true
#           ^predicates.category object)
#-->
#   (<s> ^operator <op> +)
#   (<op> ^name op_put-down1
#         ^action-handle put-down1
#         ^arg1 <arg1>
#         ^arg2 <arg2>)
#   (<arg1> ^arg-type object
#           ^id <obj1>)
#   (<arg2> ^arg-type predicate
#           ^default-handle on1
#           ^any-predicate true
#           ^2 <obj2>)
#}
