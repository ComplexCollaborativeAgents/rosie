sp {add-subaction-to-tcn*propose*store-task-subaction
  (state <s> ^name add-subaction-to-tcn
             ^task-concept-network.procedural.subactions <subs>
             ^subaction-structure <sub>)
-->
  (<s> ^operator <o> + >)
  (<o> ^name store-task-subaction
       ^subaction <sub>
       ^subaction-list <subs>)
}

sp {add-subaction-to-tcn*apply*store-task-subaction*store*root
   (state <s> ^name add-subaction-to-tcn
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-task-subaction
        ^subaction <sub>
        ^subaction-list <subs>)
-->
   (<subs> ^subaction <sub>)
   (<cmd> ^store <subs> <sub>)
}

sp {add-subaction-to-tcn*apply*store-task-subaction*argument
   (state <s> ^name add-subaction-to-tcn
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-task-subaction
        ^subaction.<arg-name> <arg>)
   (<arg> ^arg-type <any>)
-->
   (<cmd> ^store <arg>)
}

sp {add-subaction-to-tcn*apply*store-task-subaction*arg*slots
   (state <s> ^name add-subaction-to-tcn
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-task-subaction
        ^subaction.<arg-name>.{ << id 1 2 3 4 5 predicate >> } <slot>)
-->
   (<cmd> ^store <slot>)
}

sp {add-subaction-to-tcn*apply*store-task-subaction*predicate*arg*default
   (state <s> ^name add-subaction-to-tcn
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-task-subaction
        ^subaction.<arg-name>.{ << id 1 2 3 4 5 >> }.{ << default imagined >> } <def>)
-->
   (<cmd> ^store <def>)
}

sp {add-subaction-to-tcn*apply*store-task-subaction*arg*predicate*slot
   (state <s> ^name add-subaction-to-tcn
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-task-subaction
        ^subaction.<arg-name>.predicate.{ << id 1 2 3 4 5 >> } <slot>)
-->
   (<cmd> ^store <slot>)
}

sp {add-subaction-to-tcn*apply*store-task-subaction*predicate*arg*predicate*default
   (state <s> ^name add-subaction-to-tcn
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-task-subaction
        ^subaction.<arg-name>.predicate.{ << id 1 2 3 4 5 >> }.{ << default imagined >> } <def>)
-->
   (<cmd> ^store <def>)
}

sp {add-subaction-to-tcn*apply*store-task-subaction*success*return*created-subaction
   (state <s> ^name add-subaction-to-tcn
             ^operator <o>
             ^subaction-structure <sub>
             ^smem.result.success <sub>
             ^superstate <ss>)
   (<o> ^name store-task-subaction
        ^subaction <sub>)
   (<sub> ^handle <h>)
-->
   (<ss> ^created-subaction <h>)
}
