############################# learn-subaction-proposal #########################

Will take a smem representation of a subaction operator and create an instance
  by matching it against the action-operator and world
  It then will propose that operator to the superstate and learn a chunk


##### State Rep ######

action-id       - the smem representation of the parent action
subaction-id    - the smem representation of the subaction
action-operator - the parent action, elaborated from superstate.action-operator
world           - elaborated from superstate.world


##### ground-argument ######

For each argument on the subaction-id, try to ground it against the world/action-operator
  (see action/state-elaborations/ground-argument)


##### Operators #####

create-operator - creates the root of the subaction-operator and copies level1 attributes 
  (like op_name, action-handle)

create-operator-argument - Copies the result of each ground-argument onto the subaction-operator

complete-learn-subaction-proposal - Will propose the subaction-operator onto the superstate
  And learn a chunk 




