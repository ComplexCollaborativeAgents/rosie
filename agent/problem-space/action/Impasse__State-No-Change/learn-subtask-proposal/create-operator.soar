sp {learn-subtask-proposal*propose*create-operator
   (state <s> ^name learn-subtask-proposal
              ^instantiate-task-operator <ito>
              -^subtask-operator)
   (<ito> ^instantiation <task-op>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-operator
        ^subtask-operator <task-op>)
}

sp {learn-subtask-proposal*apply*create-operator*copy*subtask-handle
   (state <s> ^name learn-subtask-proposal
              ^subtask-tcn.handle <h>
              ^operator <o>)
   (<o> ^name create-operator
        ^subtask-operator <task-op>)
-->
   (<task-op> ^subtask-handle <h>)
}

sp {learn-subtask-proposal*apply*create-operator*copy*subtask-operator
   (state <s> ^name learn-subtask-proposal
              ^operator <o>)
   (<o> ^name create-operator
        ^subtask-operator <subtask-op>)
-->
   (<s> ^subtask-operator <subtask-op>)
}

sp {learn-subtask-proposal*apply*create-operator*copy*current-subgoal
   (state <s> ^name learn-subtask-proposal
              ^subtask-tcn.handle <h>
              ^subtask-info.goal.{1}.handle <sg-handle>
              ^operator <o>)
   (<o> ^name create-operator
        ^subtask-operator <task-op>)
-->
   (<task-op> ^current-subgoal <sg-handle>)
}
