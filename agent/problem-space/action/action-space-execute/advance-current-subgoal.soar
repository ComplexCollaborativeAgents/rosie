sp {action-space*execute*propose*advance-current-subgoal
   (state <s> ^problem-space.action-space execute
              ^task-concept-network.goal <g>
              ^action-operator <a>
              ^desired <des>)
   (<g> ^subgoal-count <c>
        ^{ <sg-num> < <c> }.handle <subgoal-h>)
   (<des> ^handle <subgoal-h>
          ^satisfied true)
   (<a> ^current-subgoal <subgoal-h>)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name advance-current-subgoal
        ^next-subgoal-num (+ <sg-num> 1))
}

sp {action-space*execute*apply*advance-current-subgoal*change*current-subgoal
   (state <s> ^problem-space.action-space execute
              ^operator <o>
              ^action-operator <a>
              ^task-concept-network.goal <g>)
   (<o> ^name advance-current-subgoal
        ^next-subgoal-num <next-sg-num>)
   (<a> ^current-subgoal <old-sg>)
   (<g> ^<next-sg-num> <new-subgoal>)
   (<new-subgoal> ^handle <new-sg>)
-->
   (<a> ^current-subgoal <old-sg> -
        ^current-subgoal <new-sg>)
}

sp {action-space*execute*apply*advance-current-subgoal*remove*performed-subaction
   (state <s> ^problem-space.action-space execute
              ^operator.name advance-current-subgoal
              ^action-operator <a>)
   (<a> ^performed <sub-h>)
-->
   (<a> ^performed <sub-h> -)
}


