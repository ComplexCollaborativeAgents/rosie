sp {problem-space*action*push-task-segment*propose*add-task-objects
  (state <s> ^name push-task-segment
             ^segment-to-push <seg>
             -^added-objects)
-->
  (<s> ^operator <o> + >)
  (<o> ^name add-task-objects)
}

sp {problem-space*action*push-task-segment*elaborate*add-task-objects*from*add-object-to-world*link
  (state <s> ^name push-task-segment
             ^operator <o> +
             ^add-object-to-world.linked-to <obj>)
  (<o> ^name add-task-objects)
-->
  (<o> ^object <obj>)
}

sp {problem-space*action*push-task-segment*elaborate*add-task-objects*object
  (state <s> ^name push-task-segment
             ^operator <o> +
             ^segment-to-push.task-operator.<arg-name> <arg>)
  (<o> ^name add-task-objects)
  (<arg> ^arg-type object
         ^id <obj>)
-->
  (<o> ^object <obj>)
}

sp {problem-space*action*push-task-segment*elaborate*add-task-objects*object*from*predicate
   (state <s> ^name push-task-segment
              ^operator <o> +
              ^segment-to-push.task-operator.<arg-name> <arg>)
   (<o> ^name add-task-objects)
   (<arg> ^arg-type predicate
          ^2 <obj>)
-->
   (<o> ^object <obj>)
}

sp {problem-space*action*push-task-segment*elaborate*add-taks-objects*object*from*until-clause
   (state <s> ^name push-task-segment
              ^operator <o> +
              ^segment-to-push.task-operator.until-clause <until>)
   (<o> ^name add-task-objects)
   (<until> ^predicate.{ <num> << 1 2 >> } <obj>)
-->
   (<o> ^object <obj>)
}

sp {problem-space*action*push-task-segment*apply*add-task-objects*no*objects
  (state <s> ^name push-task-segment
             ^operator.name add-task-objects
             ^segment-to-push <seg>)
-->
  (<s> ^added-objects true)
}

sp {problem-space*action*push-task-segment*apply*add-task-objects*copy*object
  (state <s> ^name push-task-segment
             ^operator <o>
             ^task-stack.task-objects <objs>)
  (<o> ^name add-task-objects
       ^object <obj>)
-->
  (<objs> ^object <obj>)
}

