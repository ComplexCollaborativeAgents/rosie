
###### FROM elaborations.soar

### predicate-lti 

# retrieve smem information for any concepts/predicates/properties
sp {create-task-operator*elaborate*smem-query*predicate
   (state <s> ^name create-task-operator
              ^command-message.<any> <arg>)
   (<arg> ^item-type << concept predicate property >>
          ^handle <pred-handle>)
-->
   (<s> ^smem-query <q>)
   (<q> ^cue.handle <pred-handle>
        ^depth 4)
}

# elaborate result of predicate retrievals as ^predicate-lti
sp {create-task-operator*elaborate*smem-query*result*predicate-lti
   (state <s> ^name create-task-operator
              ^command-message.<any> <arg>
              ^smem-query <q>)
   (<arg> ^item-type << concept predicate property >>
          ^handle <pred-handle>)
   (<q> ^cue.handle <pred-handle>
        ^result <pred-lti>)
-->
   (<s> ^predicate-lti <pred-lti>)
}

###### argument-info ######

# argument-info
#   original-name <arg-name>
#   value <arg>
#   procedural <parg>  # from task-concept-network.procedural.<arg-name> <parg>

# for each argument - elaborate an argument-info structure
# ^argument-info <arg-info>
#   ^original-name <arg-name> # from command-message.<arg-name> <arg>
#   ^value <arg>              # from command-message.<arg-name> <arg>
#   ^procedural <parg>        # from task-concept-network.procedrual.<arg-name> <parg>
#   ^arg-name <name>          # the name to use for the argument on the operator


## argument-info for concepts
sp {create-task-operator*elaborate*argument-info*concept
   (state <s> ^name create-task-operator
              ^command-message <msg>)
  (<msg> ^<arg-name> <arg>)
  (<arg> ^item-type concept
         ^handle <handle>)
-->
  (<s> ^argument-info <arg-info>)
  (<arg-info> ^arg-name <arg-name>
              ^arg-type concept
              ^handle <handle>)
}

## argument-info for predicate arg
sp {create-task-operator*elaborate*argument-info*predicate*arg
   (state <s> ^name create-task-operator
              ^command-message <msg>)
  (<msg> ^{ <arg-name> << arg1 arg2 arg3 arg4 arg5 >> } <arg>)
  (<arg> ^item-type predicate
        -^until-clause
         ^handle <handle>
         ^2 <obj2>)
-->
  (<s> ^argument-info <arg-info>)
  (<arg-info> ^arg-name <arg-name>
              ^arg-type predicate
              ^handle <handle>
              ^2 <obj2>)
}

sp {create-task-operator*elaborate*argument-info*predicate*pred*rel*arg2
   (state <s> ^name create-task-operator
              ^command-message <msg>)
  (<msg> ^{ << predicate relation >> } <arg>)
  (<arg> ^item-type predicate
        -^until-clause
         ^handle <handle>
         ^2 <obj2>)
-->
  (<s> ^argument-info <arg-info>)
  (<arg-info> ^arg-name arg2
              ^arg-type predicate
              ^handle <handle>
              ^2 <obj2>)
}

sp {create-task-operator*elaborate*argument-info*predicate*arg2*relation*arg1
   (state <s> ^name create-task-operator
              ^command-message <msg>)
   (<msg> ^arg2.{2}.relations <arg1>)
   (<arg1> ^handle <handle>
           ^2 <obj1>)
-->
   (<s> ^argument-info <arg-info>)
   (<arg-info> ^arg-name arg1
               ^arg-type predicate
               ^handle <handle>
               ^2 <obj1>)
}

## argument-info for until-clause

sp {create-task-operator*elaborate*argument-info*until-clause*predicate*visible
   (state <s> ^name create-task-operator
              ^command-message.<arg-name>.until-clause <until>)
   (<until> ^action.handle sense1
            ^agent.handle rosie
            ^arg1 <obj>)
-->
   (<s> ^argument-info <arg-info>)
   (<arg-info> ^arg-name until-clause
               ^arg-type until-clause
               ^predicate <pred>)
   (<pred> ^type state
           ^handle visible1
           ^1 <obj>)
}

### arg-status
# Information about the status of the argument

# concept arg-status: default = abstract
sp {create-task-operator*elaborate*argument-info*concept*arg-status*default*real
   (state <s> ^name create-task-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type concept
              -^procedural.arg-status)
-->
   (<arg-info> ^arg-status abstract)
}

# predicate arg-status: value depends on the type of predicate
sp {create-task-operator*elaborate*argument-info*predicate*arg-status*existing
   (state <s> ^name create-task-operator
              ^argument-info <arg-info>
              ^predicate-lti <pred-info>)
   (<arg-info> ^arg-type predicate
               ^handle <pred-handle>
              -^procedural.arg-status)
   (<pred-info> ^handle <pred-handle>
                ^relation-type existing)
-->
   (<arg-info> ^arg-status existing)
}

sp {create-task-operator*elaborate*argument-info*predicate*arg-status*desired
   (state <s> ^name create-task-operator
              ^argument-info <arg-info>
              ^predicate-lti <pred-info>)
   (<arg-info> ^arg-type predicate
               ^handle <pred-handle>
              -^procedural.arg-status)
   (<pred-info> ^handle <pred-handle>
                ^relation-type desired)
-->
   (<arg-info> ^arg-status desired)
}

