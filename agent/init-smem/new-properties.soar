### +color

   (@401000 ^handle color ^type visual ^item-type property)

### +red1

   # word = 'red'
   (<red> ^spelling |red|
          ^referent @401001
          ^attachment immediate
          ^structure-type ADJ
   (@401001 ^handle red1 ^property @401000 ^item-type predicate)

### +orange1

   # word = 'orange'
   (<orange> ^spelling |orange|
             ^structure-type ADJ
             ^attachment immediate
             ^referent @401002
   (@401002 ^handle orange1 ^property @401000 ^item-type predicate)

### +yellow1

   # word = 'yellow'
   (<yellow> ^spelling |yellow|
             ^structure-type ADJ
             ^attachment immediate
             ^referent @401003
   (@401003 ^handle yellow1 ^property @401000 ^item-type predicate)

### +green1

   # word = 'green'
   (<green> ^spelling |green|
            ^structure-type ADJ
            ^attachment immediate
            ^referent @401004
   (@401004 ^handle green1 ^property @401000 ^item-type predicate)

### +blue1

   # word = 'blue'
   (<blue> ^spelling |blue|
           ^structure-type ADJ
           ^attachment immediate
           ^referent @401005
   (@401005 ^handle blue1 ^property @401000 ^item-type predicate)

### +purple1

   # word = 'purple'
   (<purple> ^spelling |purple|
             ^structure-type ADJ
             ^attachment immediate
             ^referent @401006
   (@401006 ^handle purple1 ^property @401000 ^item-type predicate)

### +white1

   # word = 'white'
   (<white> ^spelling |white|
            ^structure-type ADJ
            ^attachment immediate
            ^referent @401007
   (@401007 ^handle white1 ^property @401000 ^item-type predicate)

### +black1

   # word = 'black'
   (<black> ^spelling |black|
            ^structure-type ADJ
            ^referent @401008
   (@401008 ^handle black1 ^property @401000 ^item-type predicate)

### +brown1

   # word = 'brown'
   (<brown> ^spelling |brown|
            ^structure-type ADJ
            ^referent @401009
   (@401009 ^handle brown1 ^property @401000 ^item-type predicate)

### +gray1

   # word = 'gray'
   (<gray> ^spelling |gray|
           ^structure-type ADJ
           ^referent @401010
   (@401010 ^handle gray1 ^property @401000 ^item-type predicate)

### +shape

   (@402000 ^handle shape ^type visual ^item-type property)

### +triangle1

   # word = 'triangle'
   (<triangle> ^spelling |triangle|
               ^structure-type N
               ^number singular
               ^referent @402001
   (@402001 ^handle triangle1 ^property @402000 ^item-type predicate)

### +arch1

   # word = 'arch'
   (<arch> ^spelling |arch|
           ^structure-type N
           ^number signular
           ^referent @402002
   (@402002 ^handle arch1 ^property @402000 ^item-type predicate)

### +square1

   # word = 'square'
   (<square> ^spelling |square|
             ^structure-type N
             ^number signular
             ^referent @402003
   (@402003 ^handle square1 ^property @402000 ^item-type predicate)

### +l-block1

   # word = 'l-block'
   (<l-block> ^spelling |l-block|
              ^structure-type N
              ^number singular
              ^referent @402004
   (@402004 ^handle l-block1 ^property @402000 ^item-type predicate)

### +t-block1

   # word = 't-block'
   (<t-block> ^spelling |t-block|
              ^structure-type N
              ^number singular
              ^property P2000
              ^referent @402005
   (@402005 ^handle t-block1 ^property @402000 ^item-type predicate)

### +sphere1

   # word = 'sphere'
   (<sphere> ^spelling |sphere|
             ^structure-type N
             ^number singular
             ^referent @402006
   (@402006 ^handle sphere1 ^property @402000 ^item-type predicate)

### +chicken1

   # word = 'chicken'
   (<chicken> ^spelling |chicken|
              ^structure-type N
              ^number singular
              ^referent @402007
   (@402007 ^handle chicken1 ^property @402000 ^item-type predicate)

### +rectangle1

   # word = 'rectangle'
   (<rectangle> ^spelling |rectangle|
                ^structure-type N
                ^number signular
                ^referent @402008
   (@402008 ^handle rectangle1 ^property @402000 ^item-type predicate)

### +soda1

   # word = 'soda'
   (<soda> ^spelling |soda|
           ^structure-type N
           ^number singular
           ^referent @402010
   # word = 'sodas'
   (<sodas> ^spelling |sodas|
            ^structure-type N
            ^number plural
            ^referent @402010
   (@402010 ^handle soda1 ^property @402000 ^item-type predicate)

### +box1

   # word = 'box'
   (<box> ^spelling |box|
          ^structure-type N
          ^number singular
          ^referent @402011
   (@402011 ^handle box1 ^property @402000 ^item-type predicate)

### +steak1

   # word = 'steak'
   (<steak> ^spelling |steak|
            ^structure-type N
            ^number singular
            ^referent @402012
   (@402012 ^handle steak1 ^property @402000 ^item-type predicate)

### +lights1

   # word = 'lights'
   (<lights> ^spelling |lights|
             ^structure-type N
             ^number singular
             ^on-off-state-change true
             ^referent @402013
   # word = 'light'
   (<light> ^spelling |light|
            ^structure-type N
            ^number singular
            ^on-off-state-change true
            ^referent @402013
   (@402013 ^handle lights1 ^property @402000 ^item-type predicate)

### +package1

   # word = 'package'
   (<package> ^spelling |package|
              ^structure-type N
              ^number singular
              ^referent @402014
   (@402014 ^handle package1 ^property @402000 ^item-type predicate)

### +papers1

   # word = 'papers'
   (<papers> ^spelling |papers|
             ^structure-type N
             ^number plural
             ^referent @402015
   (@402015 ^handle papers1 ^property @402000 ^item-type predicate)

### +kinect1

   # word = 'kinect'
   (<kinect> ^spelling |kinect|
             ^structure-type N
             ^number singular
             ^referent @402016
   (@402016 ^handle kinect1 ^property @402000 ^item-type predicate)

### +trash1

   # word = 'trash'
   (<trash> ^spelling |trash|
            ^structure-type N
            ^number singular
            ^referent @402017
   (@402017 ^handle trash1 ^property @404000 ^item-type predicate)

### +line1

   # word = 'line'
   (<line> ^spelling |line|
           ^structure-type N
           ^number singular
           ^referent @402018
   (@402018 ^handle line1 ^property @402000 ^item-type predicate)

### +triangles1

   # word = 'triangles'
   (<triangles> ^spelling |triangles|
                ^structure-type N
                ^number plural
                ^referent @402019
   (@402019 ^handle triangles1 ^multiple true ^property @402000 ^item-type predicate)

### +stapler1

   # word = 'stapler'
   (<stapler> ^spelling |stapler|
              ^structure-type N
              ^number singular
              ^referent @402020
   (@402020 ^handle stapler1 ^property @402000 ^item-type predicate)

### +book1

   # word = 'book'
   (<book> ^spelling |book|
           ^structure-type N
           ^number singular
           ^referent @402021
   (@402021 ^handle book1 ^property @402000 ^item-type predicate)

### +water1

   # word = 'water'
   (<water> ^spelling |water|
            ^structure-type N
            ^number singular
            ^referent @402022
   (@402022 ^handle water1 ^property @402000 ^item-type predicate)

### +juice1

   # word = 'juice'
   (<juice> ^spelling |juice|
            ^structure-type N
            ^number singular
            ^referent @402023
   (@402023 ^handle juice1 ^property @402000 ^item-type predicate)

### +milk1

   # word = 'milk'
   (<milk> ^spelling |milk|
           ^structure-type N
           ^number singular
           ^referent @402024
   (@402024 ^handle milk1 ^property @402000 ^item-type predicate)

### +cupboard1

   # word = 'cupboard'
   (<cupboard> ^spelling |cupboard|
               ^structure-type N
               ^number singular
               ^referent @402025
   (@402025 ^handle cupboard1 ^property @402000 ^item-type predicate)

### +bread1

   # word = 'bread'
   (<bread> ^spelling |bread|
            ^structure-type N
            ^number singular
            ^referent @402027
   (@402027 ^handle bread1 ^property @402000 ^item-type predicate)

### +tissues1

   # word = 'tissues'
   (<tissues> ^spelling |tissues|
              ^structure-type N
              ^number singular
              ^referent @402028
   (@402028 ^handle tissues1 ^property @402000 ^item-type predicate)

### +size

   (@403000 ^handle size ^type visual ^item-type property)

### +small1

   # word = 'small'
   (<small> ^spelling |small|
            ^structure-type ADJ
            ^attachment immediate
            ^referent @403001
   # word = 'little'
   (<little> ^spelling |little|
             ^structure-type ADJ
             ^attachment immediate
             ^referent @403001
   (@403001 ^handle small1 ^property @403000 ^item-type predicate)

### +medium1

   # word = 'medium'
   (<medium> ^spelling |medium|
             ^structure-type ADJ
             ^attachment immediate
             ^referent @403002
   (@403002 ^handle medium1 ^property @403000 ^item-type predicate)

### +large1

   # word = 'large'
   (<large> ^spelling |large|
            ^structure-type ADJ
            ^attachment immediate
            ^referent @403003
   # word = 'big'
   (<big> ^spelling |big|
          ^structure-type ADJ
          ^attachment immediate
          ^referent @403003
   (@403003 ^handle large1 ^property @403000 ^item-type predicate)

### +tiny1

   # word = 'tiny'
   (<tiny> ^spelling |tiny|
           ^structure-type ADJ
           ^attachment immediate
           ^referent @403004
   (@403004 ^handle tiny1 ^property @403000 ^item-type predicate)

### +giant1

   # word = 'giant'
   (<giant> ^spelling |giant|
            ^structure-type ADJ
            ^attachment immediate
            ^referent @403005
   (@403005 ^handle giant1 ^property @403000 ^item-type predicate)

### +name

   (@404000 ^handle name ^type visual ^item-type property)

### +pantry

   # word = 'pantry'
   (<pantry> ^spelling |pantry|
             ^structure-type N
             ^number singular
             ^referent @404001
   (@404001 ^handle pantry ^property @404000 ^item-type predicate)

### +garbage

   # word = 'garbage'
   (<garbage> ^spelling |garbage|
              ^structure-type N
              ^number singular
              ^referent @404002
   (@404002 ^handle garbage ^property @404000 ^item-type predicate)

### +table

   # word = 'table'
   (<table> ^spelling |table|
            ^structure-type N
            ^number singular
            ^referent @404003
   (@404003 ^handle table ^property @404000 ^item-type predicate)

### +grid-red

   (@404008 ^handle grid-red ^property @404000)

### +grid-orange

   (@404009 ^handle grid-orange ^property @404000)

### +grid-yellow

   (@404010 ^handle grid-yellow ^property @404000)

### +grid-green

   (@404011 ^handle grid-green ^property @404000)

### +grid-blue

   (@404012 ^handle grid-blue ^property @404000)

### +bin-1

   (@404015 ^handle bin-1 ^property @404000)

### +bin-2

   (@404016 ^handle bin-2 ^property @404000)

### +bin-3

   (@404017 ^handle bin-3 ^property @404000)

### +bin-4

   (@404018 ^handle bin-4 ^property @404000)

### +bin-5

   (@404019 ^handle bin-5 ^property @404000)

### +bin-6

   (@404020 ^handle bin-6 ^property @404000)

### +stove

   # word = 'stove'
   (<stove> ^spelling |stove|
            ^structure-type N
            ^number singular
            ^on-off-state-change true
            ^referent @404023
   (@404023 ^handle stove ^property @404000)

### +kitchen1

   # word = 'kitchen'
   (<kitchen> ^spelling |kitchen|
              ^structure-type N
              ^number singular
              ^referent @404029
   (@404029 ^handle kitchen1 ^property @404000 ^item-type predicate)

### +atrium1

   # word = 'atrium'
   (<atrium> ^spelling |atrium|
             ^structure-type N
             ^number singular
             ^referent @404033
   (@404033 ^handle atrium1 ^property @404000 ^item-type predicate)

### +alice1

   # word = 'alice'
   (<alice> ^spelling |alice|
            ^structure-type PN
            ^referent @404040
            ^number singular
            ^specifier definite
            ^singleton-DP true
            ^converts-to DP
   (@404040 ^handle alice1 ^property @404000 ^item-type predicate)

### +bob1

   # word = 'bob'
   (<bob> ^spelling |bob|
          ^structure-type PN
          ^referent @404041
          ^number singular
          ^specifier definite
          ^singleton-DP true
          ^converts-to DP
   (@404041 ^handle bob1 ^property @404000 ^item-type predicate)

### +charlie1

   # word = 'charlie'
   (<charlie> ^spelling |charlie|
              ^structure-type PN
              ^referent @404042
              ^number singular
              ^specifier definite
              ^singleton-DP true
              ^converts-to DP
   (@404042 ^handle charlie1 ^property @404000 ^item-type predicate)

### +fridge1

   # word = 'fridge'
   (<fridge> ^spelling |fridge|
             ^structure-type N
             ^number singular
             ^referent @404043
   (@404043 ^handle fridge1 ^property @404000 ^item-type predicate)

### +faucet1

   # word = 'faucet'
   (<faucet> ^spelling |faucet|
             ^structure-type N
             ^number singular
             ^on-off-state-change true
             ^referent @404044
   (@404044 ^handle faucet1 ^property @404000 ^item-type predicate)

### +water2

   # word = 'water'
   (<water> ^spelling |water|
            ^syntactic-referent-type DP
            ^structure-type N
            ^number singular
            ^referent @404045
   (@404045 ^handle water2 ^property @404000 ^item-type predicate)

### +cup1

   # word = 'cup'
   (<cup> ^spelling |cup|
          ^structure-type N
          ^number singular
          ^on-off-state-change true
          ^referent @404046
   (@404046 ^handle cup1 ^property @404000 ^item-type predicate)

### +dealer

   # word = 'dealer'
   (<dealer> ^spelling |dealer|
             ^structure-type N
             ^number singular
             ^referent @404047
   (@404047 ^handle dealer ^property @404000 ^item-type predicate)

### +player

   # word = 'player'
   (<player> ^spelling |player|
             ^structure-type N
             ^number singular
             ^referent @404048
   (@404048 ^handle player ^property @404000 ^item-type predicate)

### +deck

   # word = 'deck'
   (<deck> ^spelling |deck|
           ^structure-type N
           ^number singular
           ^referent @404049
   (@404049 ^handle deck ^property @404000 ^item-type predicate)

### +weight

   (@405000 ^handle weight ^type measurable ^item-type property)

### +heavy1

   # word = 'heavy'
   (<heavy> ^spelling |heavy|
            ^referent @405001
            ^attachment immediate
            ^structure-type ADJ
   (@405001 ^handle heavy1 ^property @405000 ^item-type predicate)

### +light1

   # word = 'light'
   (<light> ^spelling |light|
            ^referent @405002
            ^attachment immediate
            ^structure-type ADJ
   (@405002 ^handle light1 ^property @405000 ^item-type predicate)

### +heaviest1

   # word = 'heaviest'
   (<heaviest> ^spelling |heaviest|
               ^referent @405003
               ^attachment immediate
               ^structure-type ADJ
   (@405003 ^handle heaviest1 ^property @405000 ^item-type predicate)

### +lightest1

   # word = 'lightest'
   (<lightest> ^spelling |lightest|
               ^referent @405004
               ^attachment immediate
               ^structure-type ADJ
   (@405004 ^handle lightest1 ^property @405000 ^item-type predicate)

### +temperature

   (@406000 ^handle temperature ^type measurable ^item-type property)

### +hot1

   # word = 'hot'
   (<hot> ^spelling |hot|
          ^referent @406001
          ^attachment immediate
          ^structure-type ADJ
   (@406001 ^handle hot1 ^property @406000)

### +warm1

   # word = 'warm'
   (<warm> ^spelling |warm|
           ^referent @406002
           ^attachment immediate
           ^structure-type ADJ
   (@406002 ^handle warm1 ^property @406000)

### +cool1

   # word = 'cool'
   (<cool> ^spelling |cool|
           ^referent @406003
           ^attachment immediate
           ^structure-type ADJ
   (@406003 ^handle cool1 ^property @406000)

### +cold1

   # word = 'cold'
   (<cold> ^spelling |cold|
           ^referent @406004
           ^attachment immediate
           ^structure-type ADJ
   (@406004 ^handle cold1 ^property @406000)

### +hottest1

   # word = 'hottest'
   (<hottest> ^spelling |hottest|
              ^referent @406005
              ^attachment immediate
              ^structure-type ADJ
   (@406005 ^handle hottest1 ^property @406000)

### +coldest1

   # word = 'coldest'
   (<coldest> ^spelling |coldest|
              ^referent @406006
              ^attachment immediate
              ^structure-type ADJ
   (@406006 ^handle coldest1 ^property @406000)

### +category

   (@407000 ^handle category ^type visual ^item-type property)

### +block

   # word = 'block'
   (<block> ^spelling |block|
            ^structure-type N
            ^number singular
            ^referent @407001
   (@407001 ^handle block ^property @407000)

### +location

   # word = 'location'
   (<location> ^spelling |location|
               ^structure-type N
               ^syntactic-referent-type DP
               ^number singular
               ^referent @407002
   (@407002 ^handle location ^property @407000)

### +object

   # word = 'drink'
   (<drink> ^spelling |drink|
            ^structure-type N
            ^number singular
            ^referent @407003
   # word = 'object'
   (<object> ^spelling |object|
             ^structure-type N
             ^number singular
             ^referent @407003
   (@407003 ^handle object ^property @407000 ^subcategory @407001 @407002 @407006 @407008)

### +blocks

   # word = 'blocks'
   (<blocks> ^spelling |blocks|
             ^structure-type N
             ^number plural
             ^referent @407004
   (@407004 ^handle blocks ^multiple true ^property @407000)

### +locations

   # word = 'locations'
   (<locations> ^spelling |locations|
                ^structure-type N
                ^syntactic-referent-type DP
                ^number plural
                ^referent @407005
   (@407005 ^handle locations ^multiple true ^property @407000)

### +piece

   # word = 'piece'
   (<piece> ^spelling |piece|
            ^structure-type N
            ^number singular
            ^referent @407006
   (@407006 ^handle piece ^property @407000)

### +pieces

   # word = 'pieces'
   (<pieces> ^spelling |pieces|
             ^structure-type N
             ^number plural
             ^referent @407007
   (@407007 ^handle pieces ^multiple true ^property @407000)

### +card

   (@407008 ^handle card ^property @407000)

### +cards

   (@407009 ^handle cards ^multiple true ^property @407000)

### +tile

   # word = 'tile'
   (<tile> ^spelling |tile|
           ^structure-type N
           ^number singular
           ^referent @407010
   (@407010 ^handle tile ^property @407000)

### +tiles

   # word = 'tiles'
   (<tiles> ^spelling |tiles|
            ^structure-type N
            ^number plural
            ^referent @407011
   (@407011 ^handle tiles ^multiple true ^property @407000)

### +message

   (@407012 ^handle message ^property @407000)

### +person

   (@407014 ^handle person ^property @407000)

### +question

   (@407015 ^handle question ^property @407000)

### +hand

   (@407016 ^handle hand ^property @407000)

### +hands

   (@407017 ^handle hands ^multiple true ^property @407000)

### +boat

   (@407020 ^handle boat ^property @407000)

### +bank

   (@407021 ^handle bank ^property @407000)

### +discard

   (@407022 ^handle discard ^property @407000)

### +cardinal-direction1

   (@408000 ^handle cardinal-direction1 ^item-type property)

### +north1

   # word = 'northern'
   (<northern> ^spelling |northern|
               ^structure-type ADJ
               ^referent @408001
   # word = 'north'
   (<north> ^spelling |north|
            ^structure-type CARDINAL
            ^number singular
            ^referent @408001
   # word = 'n'
   (<n> ^spelling |n|
        ^structure-type CARDINAL
        ^number singular
        ^referent @408001
   (@408001 ^handle north1 ^property @408000 ^yaw 1.507 ^item-type concept)

### +east1

   # word = 'eastern'
   (<eastern> ^spelling |eastern|
              ^structure-type ADJ
              ^referent @408002
   # word = 'east'
   (<east> ^spelling |east|
           ^structure-type CARDINAL
           ^number singular
           ^referent @408002
   # word = 'e'
   (<e> ^spelling |e|
        ^structure-type CARDINAL
        ^number singular
        ^referent @408002
   (@408002 ^handle east1 ^property @408000 ^yaw 0.0 ^item-type concept)

### +south1

   # word = 'southern'
   (<southern> ^spelling |southern|
               ^structure-type ADJ
               ^referent @408003
   # word = 'south'
   (<south> ^spelling |south|
            ^structure-type CARDINAL
            ^number singular
            ^referent @408003
   # word = 's'
   (<s> ^spelling |s|
        ^structure-type CARDINAL
        ^number singular
        ^referent @408003
   (@408003 ^handle south1 ^property @408000 ^yaw -1.507 ^item-type concept)

### +west1

   # word = 'western'
   (<western> ^spelling |western|
              ^structure-type ADJ
              ^referent @408004
   # word = 'west'
   (<west> ^spelling |west|
           ^structure-type CARDINAL
           ^number singular
           ^referent @408004
   # word = 'w'
   (<w> ^spelling |w|
        ^structure-type CARDINAL
        ^number singular
        ^referent @408004
   (@408004 ^handle west1 ^property @408000 ^yaw 3.14 ^item-type concept)

### +relative-direction1

   (@409000 ^handle relative-direction1 ^item-type property)

### +right1

   (@409001 ^handle right1 ^property @409000 ^side -1 ^item-type concept ^yaw -1.57)

### +left1

   (@409002 ^handle left1 ^property @409000 ^side 1 ^item-type concept ^yaw 1.57)

### +around1

   (@409003 ^handle around1 ^property @409000 ^side -1 ^item-type concept ^yaw 3.14)

### +unit

   (@4010000 ^handle unit ^type unit ^item-type property)

### +meters

   # word = 'meter'
   (<meter> ^spelling |meter|
            ^structure-type N
            ^number singular
            ^referent @4010001
   # word = 'meters'
   (<meters> ^spelling |meters|
             ^structure-type N
             ^number plural
             ^referent @4010001
   (@4010001 ^handle meters ^property @4010000 ^item-type concept)

### +feet

   # word = 'foot'
   (<foot> ^spelling |foot|
           ^structure-type N
           ^number singular
           ^referent @4010002
   # word = 'feet'
   (<feet> ^spelling |feet|
           ^structure-type N
           ^number plural
           ^referent @4010002
   (@4010002 ^handle feet ^property @4010000 ^item-type concept)

### +inches

   # word = 'inch'
   (<inch> ^spelling |inch|
           ^structure-type N
           ^number singular
           ^referent @4010003
   # word = 'inches'
   (<inches> ^spelling |inches|
             ^structure-type N
             ^number plural
             ^referent @4010003
   (@4010003 ^handle inches ^property @4010000 ^item-type concept)

### +centimeters

   # word = 'centimeter'
   (<centimeter> ^spelling |centimeter|
                 ^structure-type N
                 ^number singular
                 ^referent @4010004
   # word = 'centimeters'
   (<centimeters> ^spelling |centimeters|
                  ^structure-type N
                  ^number plural
                  ^referent @4010004
   (@4010004 ^handle centimeters ^property @4010000 ^item-type concept)

### +number

   (@4011000 ^handle number ^type number ^item-type property)

### +zeroth1

   # word = 'zeroth'
   (<zeroth> ^spelling |zeroth|
             ^super-type @6010000
             ^number plural
             ^constraint @4011100
   (@4011100 ^handle zeroth1 ^property @4011000 ^item-type predicate)

### +first1

   # word = 'first'
   (<first> ^spelling |first|
            ^attachment immediate
            ^structure-type ADJ
            ^constraint @4011101
   (@4011101 ^handle first1 ^property @4011000 ^item-type predicate)

### +second1

   # word = 'second'
   (<second> ^spelling |second|
             ^attachment immediate
             ^structure-type ADJ
             ^constraint @4011102
   (@4011102 ^handle second1 ^property @4011000 ^item-type predicate)

### +third1

   # word = 'third'
   (<third> ^spelling |third|
            ^super-type @6010000
            ^number singular
            ^constraint @4011103
   (@4011103 ^handle third1 ^property @4011000 ^item-type predicate)

### +fourth1

   # word = 'fourth'
   (<fourth> ^spelling |fourth|
             ^super-type @6010000
             ^number singular
             ^constraint @4011104
   (@4011104 ^handle fourth1 ^property @4011000 ^item-type predicate)

### +fifth1

   # word = 'fifth'
   (<fifth> ^spelling |fifth|
            ^super-type @6010000
            ^number singular
            ^constraint @4011105
   (@4011105 ^handle fifth1 ^property @4011000 ^item-type predicate)

### +sixth1

   # word = 'sixth'
   (<sixth> ^spelling |sixth|
            ^super-type @6010000
            ^number singular
            ^constraint @4011106
   (@4011106 ^handle sixth1 ^property @4011000 ^item-type predicate)

### +seventh1

   # word = 'seventh'
   (<seventh> ^spelling |seventh|
              ^super-type @6010000
              ^number singular
              ^constraint @4011107
   (@4011107 ^handle seventh1 ^property @4011000 ^item-type predicate)

### +eighth1

   # word = 'eighth'
   (<eighth> ^spelling |eighth|
             ^super-type @6010000
             ^number singular
             ^constraint @4011108
   (@4011108 ^handle eighth1 ^property @4011000 ^item-type predicate)

### +ninth1

   # word = 'ninth'
   (<ninth> ^spelling |ninth|
            ^super-type @6010000
            ^number singular
            ^constraint @4011109
   (@4011109 ^handle ninth1 ^property @4011000 ^item-type predicate)

### +0

   # word = '0'
   (<0> ^spelling |0|
        ^structure-type DP
        ^number singular
        ^constraint @4011200
        ^specifier indefinite
   # word = 'no'
   (<no> ^spelling |no|
         ^super-type @6010000
         ^number plural
         ^constraint @4011200
   # word = 'zero'
   (<zero> ^spelling |zero|
           ^super-type @6010000
           ^number plural
           ^constraint @4011200
   # word = 'D-zero'
   (<D-zero> ^prior-word D
             ^structure-type ADJ
             ^current-word |zero|
             ^spelling |D-zero|
             ^referent @4011200
   (@4011200 ^handle 0 ^property @4011000 ^item-type predicate)

### +1

   # word = '1'
   (<1> ^spelling |1|
        ^structure-type DP
        ^number singular
        ^constraint @4011201
        ^specifier indefinite
   # word = 'one'
   (<one> ^spelling |one|
          ^super-type @6010000
          ^number singular
          ^constraint @4011201
   # word = 'D-one'
   (<D-one> ^prior-word D
            ^structure-type ADJ
            ^current-word |one|
            ^spelling |D-one|
            ^referent @4011201
   (@4011201 ^handle 1 ^property @4011000 ^item-type predicate)

### +2

   # word = '2'
   (<2> ^spelling |2|
        ^structure-type DP
        ^number singular
        ^constraint @4011202
        ^specifier indefinite
   # word = 'two'
   (<two> ^spelling |two|
          ^super-type @6010000
          ^number plural
          ^constraint @4011202
   # word = 'D-two'
   (<D-two> ^prior-word D
            ^structure-type ADJ
            ^current-word |two|
            ^spelling |D-two|
            ^referent @4011202
   (@4011202 ^handle 2 ^property @4011000 ^item-type predicate)

### +3

   # word = '3'
   (<3> ^spelling |3|
        ^structure-type DP
        ^number singular
        ^specifier indefinite
        ^constraint @4011203
   # word = 'three'
   (<three> ^spelling |three|
            ^super-type @6010000
            ^number singular
            ^constraint @4011203
   # word = 'D-three'
   (<D-three> ^prior-word D
              ^structure-type ADJ
              ^current-word |three|
              ^spelling |D-three|
              ^referent @4011203
   (@4011203 ^handle 3 ^property @4011000 ^item-type predicate)

### +4

   # word = '4'
   (<4> ^spelling |4|
        ^structure-type DP
        ^number singular
        ^specifier indefinite
        ^constraint @4011204
   # word = 'four'
   (<four> ^spelling |four|
           ^super-type @6010000
           ^number singular
           ^constraint @4011204
   # word = 'D-four'
   (<D-four> ^prior-word D
             ^structure-type ADJ
             ^current-word |four|
             ^spelling |D-four|
             ^referent @4011204
   (@4011204 ^handle 4 ^property @4011000 ^item-type predicate)

### +5

   # word = '5'
   (<5> ^spelling |5|
        ^structure-type DP
        ^number singular
        ^specifier indefinite
        ^constraint @4011205
   # word = 'five'
   (<five> ^spelling |five|
           ^super-type @6010000
           ^number singular
           ^constraint @4011205
   # word = 'D-five'
   (<D-five> ^prior-word D
             ^structure-type ADJ
             ^current-word |five|
             ^spelling |D-five|
             ^referent @4011205
   (@4011205 ^handle 5 ^property @4011000 ^item-type predicate)

### +6

   # word = '6'
   (<6> ^spelling |6|
        ^structure-type DP
        ^number singular
        ^specifier indefinite
        ^constraint @4011206
   # word = 'six'
   (<six> ^spelling |six|
          ^super-type @6010000
          ^number singular
          ^constraint @4011206
   # word = 'D-six'
   (<D-six> ^prior-word D
            ^structure-type ADJ
            ^current-word |six|
            ^spelling |D-six|
            ^referent @4011206
   (@4011206 ^handle 6 ^property @4011000 ^item-type predicate)

### +7

   # word = '7'
   (<7> ^spelling |7|
        ^structure-type DP
        ^number singular
        ^specifier indefinite
        ^constraint @4011207
   # word = 'seven'
   (<seven> ^spelling |seven|
            ^super-type @6010000
            ^number singular
            ^constraint @4011207
   # word = 'D-seven'
   (<D-seven> ^prior-word D
              ^structure-type ADJ
              ^current-word |seven|
              ^spelling |D-seven|
              ^referent @4011207
   (@4011207 ^handle 7 ^property @4011000 ^item-type predicate)

### +8

   # word = '8'
   (<8> ^spelling |8|
        ^structure-type DP
        ^number singular
        ^specifier indefinite
        ^constraint @4011208
   # word = 'eight'
   (<eight> ^spelling |eight|
            ^super-type @6010000
            ^number singular
            ^constraint @4011208
   # word = 'D-eight'
   (<D-eight> ^prior-word D
              ^structure-type ADJ
              ^current-word |eight|
              ^spelling |D-eight|
              ^referent @4011208
   (@4011208 ^handle 8 ^property @4011000 ^item-type predicate)

### +9

   # word = '9'
   (<9> ^spelling |9|
        ^structure-type DP
        ^number singular
        ^specifier indefinite
        ^constraint @4011209
   # word = 'nine'
   (<nine> ^spelling |nine|
           ^super-type @6010000
           ^number singular
           ^constraint @4011209
   # word = 'D-nine'
   (<D-nine> ^prior-word D
             ^structure-type ADJ
             ^current-word |nine|
             ^spelling |D-nine|
             ^referent @4011209
   (@4011209 ^handle 9 ^property @4011000 ^item-type predicate)

### +10

   # word = '10'
   (<10> ^spelling |10|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011210
   # word = 'ten'
   (<ten> ^spelling |ten|
          ^super-type @6010000
          ^number singular
          ^constraint @4011210
   # word = 'D-ten'
   (<D-ten> ^prior-word D
            ^structure-type ADJ
            ^current-word |ten|
            ^spelling |D-ten|
            ^referent @4011210
   # word = 'D-twenty'
   (<D-twenty> ^prior-word D
               ^structure-type ADJ
               ^current-word |twenty|
               ^spelling |D-twenty|
               ^referent @4011210
   (@4011210 ^handle 10 ^property @4011000 ^item-type predicate)

### +11

   # word = '11'
   (<11> ^spelling |11|
         ^structure-type DP
         ^number singular
         ^constraint @4011211
         ^specifier indefinite
   # word = 'eleven'
   (<eleven> ^spelling |eleven|
             ^super-type @6010000
             ^number singular
             ^constraint @4011211
   # word = 'D-eleven'
   (<D-eleven> ^prior-word D
               ^structure-type ADJ
               ^current-word |eleven|
               ^spelling |D-eleven|
               ^referent @4011211
   (@4011211 ^handle 11 ^property @4011000 ^item-type predicate)

### +12

   # word = '12'
   (<12> ^spelling |12|
         ^structure-type DP
         ^number singular
         ^constraint @4011212
         ^specifier indefinite
   # word = 'twelve'
   (<twelve> ^spelling |twelve|
             ^super-type @6010000
             ^number plural
             ^constraint @4011212
   # word = 'D-twelve'
   (<D-twelve> ^prior-word D
               ^structure-type ADJ
               ^current-word |twelve|
               ^spelling |D-twelve|
               ^referent @4011212
   (@4011212 ^handle 12 ^property @4011000 ^item-type predicate)

### +13

   # word = '13'
   (<13> ^spelling |13|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011213
   # word = 'thirteen'
   (<thirteen> ^spelling |thirteen|
               ^super-type @6010000
               ^number singular
               ^constraint @4011213
   # word = 'D-thirteen'
   (<D-thirteen> ^prior-word D
                 ^structure-type ADJ
                 ^current-word |thirteen|
                 ^spelling |D-thirteen|
                 ^referent @4011213
   (@4011213 ^handle 13 ^property @4011000 ^item-type predicate)

### +14

   # word = '14'
   (<14> ^spelling |14|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011214
   # word = 'fourteen'
   (<fourteen> ^spelling |fourteen|
               ^super-type @6010000
               ^number singular
               ^constraint @4011214
   # word = 'D-fourteen'
   (<D-fourteen> ^prior-word D
                 ^structure-type ADJ
                 ^current-word |fourteen|
                 ^spelling |D-fourteen|
                 ^referent @4011214
   (@4011214 ^handle 14 ^property @4011000 ^item-type predicate)

### +15

   # word = '15'
   (<15> ^spelling |15|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011215
   # word = 'fifteen'
   (<fifteen> ^spelling |fifteen|
              ^super-type @6010000
              ^number singular
              ^constraint @4011215
   # word = 'D-fifteen'
   (<D-fifteen> ^prior-word D
                ^structure-type ADJ
                ^current-word |fifteen|
                ^spelling |D-fifteen|
                ^referent @4011215
   (@4011215 ^handle 15 ^property @4011000 ^item-type predicate)

### +16

   # word = '16'
   (<16> ^spelling |16|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011216
   # word = 'sixteen'
   (<sixteen> ^spelling |sixteen|
              ^super-type @6010000
              ^number singular
              ^constraint @4011216
   # word = 'D-sixteen'
   (<D-sixteen> ^prior-word D
                ^structure-type ADJ
                ^current-word |sixteen|
                ^spelling |D-sixteen|
                ^referent @4011216
   (@4011216 ^handle 16 ^property @4011000 ^item-type predicate)

### +17

   # word = '17'
   (<17> ^spelling |17|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011217
   # word = 'seventeen'
   (<seventeen> ^spelling |seventeen|
                ^super-type @6010000
                ^number singular
                ^constraint @4011217
   # word = 'D-seventeen'
   (<D-seventeen> ^prior-word D
                  ^structure-type ADJ
                  ^current-word |seventeen|
                  ^spelling |D-seventeen|
                  ^referent @4011217
   (@4011217 ^handle 17 ^property @4011000 ^item-type predicate)

### +18

   # word = '18'
   (<18> ^spelling |18|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011218
   # word = 'eighteen'
   (<eighteen> ^spelling |eighteen|
               ^super-type @6010000
               ^number singular
               ^constraint @4011218
   # word = 'D-eighteen'
   (<D-eighteen> ^prior-word D
                 ^structure-type ADJ
                 ^current-word |eighteen|
                 ^spelling |D-eighteen|
                 ^referent @4011218
   (@4011218 ^handle 18 ^property @4011000 ^item-type predicate)

### +19

   # word = '19'
   (<19> ^spelling |19|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011219
   # word = 'nineteen'
   (<nineteen> ^spelling |nineteen|
               ^super-type @6010000
               ^number singular
               ^constraint @4011219
   # word = 'D-nineteen'
   (<D-nineteen> ^prior-word D
                 ^structure-type ADJ
                 ^current-word |nineteen|
                 ^spelling |D-nineteen|
                 ^referent @4011219
   (@4011219 ^handle 19 ^property @4011000 ^item-type predicate)

### +20

   # word = '20'
   (<20> ^spelling |20|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011220
   # word = 'twenty'
   (<twenty> ^spelling |twenty|
             ^super-type @6010000
             ^number singular
             ^constraint @4011220
   (@4011220 ^handle 20 ^property @4011000 ^item-type predicate)

### +30

   # word = '30'
   (<30> ^spelling |30|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011230
   # word = 'thirty'
   (<thirty> ^spelling |thirty|
             ^super-type @6010000
             ^number singular
             ^constraint @4011230
   (@4011230 ^handle 30 ^property @4011000 ^item-type predicate)

### +31

   # word = '31'
   (<31> ^spelling |31|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011231
   # word = 'thirty-one'
   (<thirty-one> ^spelling |thirty-one|
                 ^super-type @6010000
                 ^number singular
                 ^constraint @4011231
   (@4011231 ^handle 31 ^property @4011000 ^item-type predicate)

### +40

   # word = '30'
   (<30> ^spelling |30|
         ^structure-type DP
         ^number singular
         ^specifier indefinite
         ^constraint @4011230
   # word = 'thirty'
   (<thirty> ^spelling |thirty|
             ^super-type @6010000
             ^number singular
             ^constraint @4011230
   (@4011230 ^handle 40 ^property @4011000 ^item-type predicate)

### +spatial-shape

   (@4012000 ^handle spatial-shape ^type visual ^item-type property)

### +end1

   # word = 'end'
   (<end> ^spelling |end|
          ^structure-type N
          ^number singular
          ^referent @4012001
   (@4012001 ^handle end1 ^property @4012000 ^item-type predicate)

### +wall1

   # word = 'wall'
   (<wall> ^spelling |wall|
           ^structure-type N
           ^referent @4012002
           ^number singular
   (@4012002 ^handle wall1 ^property @4012000 ^item-type predicate)

### +hall1

   # word = 'hall'
   (<hall> ^spelling |hall|
           ^structure-type N
           ^number singular
           ^referent @4012003
   # word = 'hallway'
   (<hallway> ^spelling |hallway|
              ^structure-type N
              ^number singular
              ^referent @4012003
   (@4012003 ^handle hall1 ^property @4012000 ^item-type predicate)

### +door

   # word = 'door'
   (<door> ^spelling |door|
           ^structure-type N
           ^number singular
           ^referent @4012004
   # word = 'doorway'
   (<doorway> ^spelling |doorway|
              ^structure-type N
              ^number singular
              ^referent @4012004
   (@4012004 ^handle door ^property @4012000 ^output-word door ^item-type predicate)

### +intersection

   # word = 'intersection'
   (<intersection> ^spelling |intersection|
                   ^structure-type N
                   ^number singular
                   ^referent @4012005
   # word = 'intersections'
   (<intersections> ^spelling |intersections|
                    ^structure-type N
                    ^number plural
                    ^referent @4012005
   # word = 'junction'
   (<junction> ^spelling |junction|
               ^structure-type N
               ^number singular
               ^referent @4012005
   (@4012005 ^handle intersection ^property @4012000 ^output-word intersection ^item-type predicate)

### +opening1

   # word = 'opening'
   (<opening> ^spelling |opening|
              ^structure-type N
              ^number singular
              ^referent @4012006
   (@4012006 ^handle opening1 ^property @4012000 ^item-type predicate)

### +t-intersection1

   # word = 't-intersection'
   (<t-intersection> ^spelling |t-intersection|
                     ^structure-type N
                     ^number singular
                     ^referent @4012007
   (@4012007 ^handle t-intersection1 ^property @4012000 ^item-type predicate)

### +room1

   # word = 'room'
   (<room> ^spelling |room|
           ^structure-type N
           ^number singular
           ^referent @4012008
   (@4012008 ^handle room1 ^property @4012000 ^item-type predicate)

### +waypoint

   # word = 'waypoint'
   (<waypoint> ^spelling |waypoint|
               ^structure-type N
               ^number singular
               ^referent @4012009
   (@4012009 ^handle waypoint ^property @4012000 ^item-type predicate)

### +office1

   # word = 'office'
   (<office> ^spelling |office|
             ^structure-type N
             ^number singular
             ^referent @4012011
   (@4012011 ^handle office1 ^property @4012000 ^item-type predicate ^style office)

### +property

   (@4014000 ^handle property ^type visual ^item-type property)

### +activation1

   (@4014000 ^handle activation1 ^type state ^item-type property)

### +on2

   (@4014001 ^handle on2 ^property @4014000 ^item-type concept)

### +off2

   (@4014002 ^handle off2 ^property @4014000 ^item-type concept)

### +meat1

   (@4014100 ^handle meat1 ^type state ^item-type property)

### +cooked1

   # word = 'cooked'
   (<cooked> ^spelling |cooked|
             ^structure-type ADJ
             ^attachment immediate
             ^referent @4014101
   (@4014101 ^handle cooked1 ^property @4014100 ^item-type concept)

### +raw1

   # word = 'raw'
   (<raw> ^spelling |raw|
          ^structure-type ADJ
          ^referent @4014102
   (@4014102 ^handle raw1 ^property @4014100 ^item-type concept)

### +door1

   (@4014200 ^handle door1 ^type state ^item-type property)

### +open2

   # word = 'open'
   (<open> ^spelling |open|
           ^structure-type ADJ
           ^referent @4014201
   (@4014201 ^handle open2 ^property @4014200 ^item-type concept)

### +closed2

   (@4014202 ^handle closed2 ^property @4014200 ^item-type concept)

### +action1

   (@4014300 ^handle action1 ^type state ^item-type property)

### +last-moved1

   # word = 'last-moved'
   (<last-moved> ^spelling |last-moved|
                 ^structure-type ADJ
                 ^attachment immediate
                 ^referent @4014302
   (@4014302 ^handle last-moved1 ^property @4014300 ^item-type predicate)

### +modifier1

   (@4015000 ^handle modifier1 ^type visual ^item-type property)

### +starting1

   # word = 'starting'
   (<starting> ^spelling |starting|
               ^structure-type ADJ
               ^attachment immediate
               ^referent @4015001
   # word = 'done'
   (<done> ^spelling |done|
           ^structure-type ADJ
           ^referent @4015001
   # word = 'finished'
   (<finished> ^spelling |finished|
               ^structure-type ADJ
               ^referent @4015001
   (@4015001 ^handle starting1 ^item-type predicate ^property @4015000)

### +current1

   # word = 'won'
   (<won> ^spelling |won|
          ^structure-type ADJ
          ^referent @4015002
   (@4015002 ^handle current1 ^item-type predicate ^property @4015000)

### +answer1

   # word = 'lost'
   (<lost> ^spelling |lost|
           ^structure-type ADJ
           ^referent @4015003
   (@4015003 ^handle answer1 ^item-type predicate ^property @4015000)

### +desired1

   # word = 'desired'
   (<desired> ^spelling |desired|
              ^structure-type ADJ
              ^attachment immediate
              ^referent @4015004
   (@4015004 ^handle desired1 ^item-type predicate ^property @4015000)

### +storage1

   # word = 'storage'
   (<storage> ^spelling |storage|
              ^structure-type ADJ
              ^attachment immediate
              ^referent @4015006
   (@4015006 ^handle storage1 ^item-type predicate ^property @4015000)

### +property3

   (@4015000 ^handle property3 ^type visual ^item-type property)

### +task-completed

   # word = 'starting'
   (<starting> ^spelling |starting|
               ^structure-type ADJ
               ^attachment immediate
               ^referent @4015001
   # word = 'done'
   (<done> ^spelling |done|
           ^structure-type ADJ
           ^referent @4015001
   # word = 'finished'
   (<finished> ^spelling |finished|
               ^structure-type ADJ
               ^referent @4015001
   (@4015001 ^handle task-completed ^property @4015000 ^item-type predicate)

### +won

   # word = 'won'
   (<won> ^spelling |won|
          ^structure-type ADJ
          ^referent @4015002
   (@4015002 ^handle won ^property @4015000 ^item-type predicate)

### +lost

   # word = 'lost'
   (<lost> ^spelling |lost|
           ^structure-type ADJ
           ^referent @4015003
   (@4015003 ^handle lost ^property @4015000 ^item-type predicate)

### +possessive

   (@4016000 ^handle possessive ^item-type property)

### +alices1

   # word = 'alice's'
   (<alice's> ^spelling |alice's|
              ^super-type @991050
              ^referent @4016001
              ^number singular
              ^specifier definite
   (@4016001 ^handle alices1 ^property @4016000 ^item-type predicate ^person-name alice1)

### +bobs1

   # word = 'bob's'
   (<bob's> ^spelling |bob's|
            ^super-type @991050
            ^referent @4016002
            ^number singular
            ^specifier definite
   (@4016002 ^handle bobs1 ^property @4016000 ^item-type predicate ^person-name bob1)

### +charlies1

   # word = 'charlie's'
   (<charlie's> ^spelling |charlie's|
                ^super-type @991050
                ^referent @4016003
                ^number singular
                ^specifier definite
   (@4016003 ^handle charlies1 ^property @4016000 ^item-type predicate ^person-name charlie1)

### +gender

   (@4017000 ^handle gender ^type visual ^item-type property)

### +last-name

   (@4018000 ^handle last-name ^type visual ^item-type property)

### +first-name

   (@4019000 ^handle first-name ^type visual ^item-type property)

### +property1

   (@202000 ^handle property1 ^type visual ^item-type property)

### +game1

   (@202001 ^handle game1 ^type concept ^item-type property)

### +location2

   (@4013000 ^handle location2 ^type visual ^item-type property)

### +soar1

   # word = 'soar'
   (<soar> ^spelling |soar|
           ^attachment immediate
           ^structure-type ADJ
           ^referent @4013007
   (@4013007 ^handle soar1 ^property @404000 ^item-type predicate)

### +april1

   # word = 'april'
   (<april> ^spelling |april|
            ^attachment immediate
            ^structure-type ADJ
            ^referent @4013008
   (@4013008 ^handle april1 ^property @404000 ^item-type predicate)

### +main1

   # word = 'main'
   (<main> ^spelling |main|
           ^attachment immediate
           ^structure-type ADJ
           ^referent @4013009
   (@4013009 ^handle main1 ^property @404000 ^item-type predicate)

### +copy1

   # word = 'copy'
   (<copy> ^spelling |copy|
           ^attachment immediate
           ^structure-type ADJ
           ^referent @4013010
   (@4013010 ^handle copy1 ^property @404000 ^item-type predicate)

### +building1

   # word = 'building'
   (<building> ^spelling |building|
               ^structure-type N
               ^number singular
               ^referent @4013011
   (@4013011 ^handle building1 ^property @404000 ^item-type predicate)

### +conference1

   # word = 'conference'
   (<conference> ^spelling |conference|
                 ^structure-type ADJ
                 ^attachment immediate
                 ^referent @4013012
   (@4013012 ^handle conference1 ^property @404000 ^item-type predicate)

### +lab1

   # word = 'lab'
   (<lab> ^spelling |lab|
          ^structure-type N
          ^number singular
          ^referent @4013013
   (@4013013 ^handle lab1 ^property @404000 ^item-type predicate ^style office)

### +robotics1

   # word = 'robotics'
   (<robotics> ^spelling |robotics|
               ^attachment immediate
               ^structure-type ADJ
               ^referent @4013014
   (@4013014 ^handle robotics1 ^property @404000 ^item-type predicate ^style office)

