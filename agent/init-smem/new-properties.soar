############################################################
############### CATEGORY = name              ###############

### !name
smem --add {
   (@404000 ^handle name ^type visual ^item-type property)
}

### +trash1
smem --add {
   (<word-trash> ^spelling |trash|
                 ^structure-type N
                 ^number singular
                 ^referent <trash1>)
   (<trash1> ^handle trash1 ^property @404000 ^item-type predicate)
}

### +pantry
smem --add {
   (<word-pantry> ^spelling |pantry|
                  ^structure-type N
                  ^number singular
                  ^referent <pantry>)
   (<pantry> ^handle pantry ^property @404000 ^item-type predicate)
}

### +garbage
smem --add {
   (<word-garbage> ^spelling |garbage|
                   ^structure-type N
                   ^number singular
                   ^referent <garbage>)
   (<garbage> ^handle garbage ^property @404000 ^item-type predicate)
}

### +table
smem --add {
   (<word-table> ^spelling |table|
                 ^structure-type N
                 ^number singular
                 ^referent <table>)
   (<table> ^handle table ^property @404000 ^item-type predicate)
}

### +grid-red
smem --add {
   (<grid-red> ^handle grid-red ^property @404000)
}

### +grid-orange
smem --add {
   (<grid-orange> ^handle grid-orange ^property @404000)
}

### +grid-yellow
smem --add {
   (<grid-yellow> ^handle grid-yellow ^property @404000)
}

### +grid-green
smem --add {
   (<grid-green> ^handle grid-green ^property @404000)
}

### +grid-blue
smem --add {
   (<grid-blue> ^handle grid-blue ^property @404000)
}

### +bin-1
smem --add {
   (<bin-1> ^handle bin-1 ^property @404000)
}

### +bin-2
smem --add {
   (<bin-2> ^handle bin-2 ^property @404000)
}

### +bin-3
smem --add {
   (<bin-3> ^handle bin-3 ^property @404000)
}

### +bin-4
smem --add {
   (<bin-4> ^handle bin-4 ^property @404000)
}

### +bin-5
smem --add {
   (<bin-5> ^handle bin-5 ^property @404000)
}

### +bin-6
smem --add {
   (<bin-6> ^handle bin-6 ^property @404000)
}

### +stove
smem --add {
   (<word-stove> ^spelling |stove|
                 ^structure-type N
                 ^number singular
                 ^on-off-state-change true
                 ^referent <stove>)
   (<stove> ^handle stove ^property @404000)
}

### +kitchen1
smem --add {
   (<word-kitchen> ^spelling |kitchen|
                   ^structure-type N
                   ^number singular
                   ^referent <kitchen1>)
   (<kitchen1> ^handle kitchen1 ^property @404000 ^item-type predicate)
}

### +atrium1
smem --add {
   (<word-atrium> ^spelling |atrium|
                  ^structure-type N
                  ^number singular
                  ^referent <atrium1>)
   (<atrium1> ^handle atrium1 ^property @404000 ^item-type predicate)
}

### +alice1
smem --add {
   (<word-alice> ^spelling |alice|
                 ^structure-type PN
                 ^referent <alice1>
                 ^number singular
                 ^specifier definite
                 ^singleton-DP true
                 ^converts-to DP)
   (<alice1> ^handle alice1 ^property @404000 ^item-type predicate)
}

### +bob1
smem --add {
   (<word-bob> ^spelling |bob|
               ^structure-type PN
               ^referent <bob1>
               ^number singular
               ^specifier definite
               ^singleton-DP true
               ^converts-to DP)
   (<bob1> ^handle bob1 ^property @404000 ^item-type predicate)
}

### +charlie1
smem --add {
   (<word-charlie> ^spelling |charlie|
                   ^structure-type PN
                   ^referent <charlie1>
                   ^number singular
                   ^specifier definite
                   ^singleton-DP true
                   ^converts-to DP)
   (<charlie1> ^handle charlie1 ^property @404000 ^item-type predicate)
}

### +fridge1
smem --add {
   (<word-fridge> ^spelling |fridge|
                  ^structure-type N
                  ^number singular
                  ^referent <fridge1>)
   (<fridge1> ^handle fridge1 ^property @404000 ^item-type predicate)
}

### +faucet1
smem --add {
   (<word-faucet> ^spelling |faucet|
                  ^structure-type N
                  ^number singular
                  ^on-off-state-change true
                  ^referent <faucet1>)
   (<faucet1> ^handle faucet1 ^property @404000 ^item-type predicate)
}

### +water2
smem --add {
   (<word-water> ^spelling |water|
                 ^syntactic-referent-type DP
                 ^structure-type N
                 ^number singular
                 ^referent <water2>)
   (<water2> ^handle water2 ^property @404000 ^item-type predicate)
}

### +cup1
smem --add {
   (<word-cup> ^spelling |cup|
               ^structure-type N
               ^number singular
               ^on-off-state-change true
               ^referent <cup1>)
   (<cup1> ^handle cup1 ^property @404000 ^item-type predicate)
}

### +dealer
smem --add {
   (<word-dealer> ^spelling |dealer|
                  ^structure-type N
                  ^number singular
                  ^referent <dealer>)
   (<dealer> ^handle dealer ^property @404000 ^item-type predicate)
}

### +player
smem --add {
   (<word-player> ^spelling |player|
                  ^structure-type N
                  ^number singular
                  ^referent <player>)
   (<player> ^handle player ^property @404000 ^item-type predicate)
}

### +deck
smem --add {
   (<word-deck> ^spelling |deck|
                ^structure-type N
                ^number singular
                ^referent <deck>)
   (<deck> ^handle deck ^property @404000 ^item-type predicate)
}

### +soar1
smem --add {
   (<word-soar> ^spelling |soar|
                ^attachment immediate
                ^structure-type ADJ
                ^referent <soar1>)
   (<soar1> ^handle soar1 ^property @404000 ^item-type predicate)
}

### +april1
smem --add {
   (<word-april> ^spelling |april|
                 ^attachment immediate
                 ^structure-type ADJ
                 ^referent <april1>)
   (<april1> ^handle april1 ^property @404000 ^item-type predicate)
}

### +main1
smem --add {
   (<word-main> ^spelling |main|
                ^attachment immediate
                ^structure-type ADJ
                ^referent <main1>)
   (<main1> ^handle main1 ^property @404000 ^item-type predicate)
}

### +copy1
smem --add {
   (<word-copy> ^spelling |copy|
                ^attachment immediate
                ^structure-type ADJ
                ^referent <copy1>)
   (<copy1> ^handle copy1 ^property @404000 ^item-type predicate)
}

### +building1
smem --add {
   (<word-building> ^spelling |building|
                    ^structure-type N
                    ^number singular
                    ^referent <building1>)
   (<building1> ^handle building1 ^property @404000 ^item-type predicate)
}

### +conference1
smem --add {
   (<word-conference> ^spelling |conference|
                      ^structure-type ADJ
                      ^attachment immediate
                      ^referent <conference1>)
   (<conference1> ^handle conference1 ^property @404000 ^item-type predicate)
}

### +lab1
smem --add {
   (<word-lab> ^spelling |lab|
               ^structure-type N
               ^number singular
               ^referent <lab1>)
   (<lab1> ^handle lab1 ^property @404000 ^item-type predicate ^style office)
}

### +robotics1
smem --add {
   (<word-robotics> ^spelling |robotics|
                    ^attachment immediate
                    ^structure-type ADJ
                    ^referent <robotics1>)
   (<robotics1> ^handle robotics1 ^property @404000 ^item-type predicate ^style office)
}

############################################################
############### CATEGORY = first-name        ###############

### !first-name
smem --add {
   (@4019000 ^handle first-name ^type visual ^item-type property)
}

############################################################
############### CATEGORY = last-name         ###############

### !last-name
smem --add {
   (@4018000 ^handle last-name ^type visual ^item-type property)
}

############################################################
############### CATEGORY = possessive        ###############

### !possessive
smem --add {
   (@4016000 ^handle possessive ^item-type property)
}

### +alices1
smem --add {
   (<word-alices> ^spelling |alice's|
                  ^super-type @991050
                  ^referent <alices1>
                  ^number singular
                  ^specifier definite)
   (<alices1> ^handle alices1 ^property @4016000 ^item-type predicate ^person-name alice1)
}

### +bobs1
smem --add {
   (<word-bobs> ^spelling |bob's|
                ^super-type @991050
                ^referent <bobs1>
                ^number singular
                ^specifier definite)
   (<bobs1> ^handle bobs1 ^property @4016000 ^item-type predicate ^person-name bob1)
}

### +charlies1
smem --add {
   (<word-charlies> ^spelling |charlie's|
                    ^super-type @991050
                    ^referent <charlies1>
                    ^number singular
                    ^specifier definite)
   (<charlies1> ^handle charlies1 ^property @4016000 ^item-type predicate ^person-name charlie1)
}

############################################################
############### CATEGORY = gender            ###############

### !gender
smem --add {
   (@4017000 ^handle gender ^type visual ^item-type property)
}

############################################################
############### CATEGORY = color             ###############

### !color
smem --add {
   (@401000 ^handle color ^type visual ^item-type property)
}

### +red1
smem --add {
   (<word-red> ^spelling |red|
               ^referent <red1>
               ^attachment immediate
               ^structure-type ADJ)
   (<red1> ^handle red1 ^property @401000 ^item-type predicate)
}

### +orange1
smem --add {
   (<word-orange> ^spelling |orange|
                  ^structure-type ADJ
                  ^attachment immediate
                  ^referent <orange1>)
   (<orange1> ^handle orange1 ^property @401000 ^item-type predicate)
}

### +yellow1
smem --add {
   (<word-yellow> ^spelling |yellow|
                  ^structure-type ADJ
                  ^attachment immediate
                  ^referent <yellow1>)
   (<yellow1> ^handle yellow1 ^property @401000 ^item-type predicate)
}

### +green1
smem --add {
   (<word-green> ^spelling |green|
                 ^structure-type ADJ
                 ^attachment immediate
                 ^referent <green1>)
   (<green1> ^handle green1 ^property @401000 ^item-type predicate)
}

### +blue1
smem --add {
   (<word-blue> ^spelling |blue|
                ^structure-type ADJ
                ^attachment immediate
                ^referent <blue1>)
   (<blue1> ^handle blue1 ^property @401000 ^item-type predicate)
}

### +purple1
smem --add {
   (<word-purple> ^spelling |purple|
                  ^structure-type ADJ
                  ^attachment immediate
                  ^referent <purple1>)
   (<purple1> ^handle purple1 ^property @401000 ^item-type predicate)
}

### +white1
smem --add {
   (<word-white> ^spelling |white|
                 ^structure-type ADJ
                 ^attachment immediate
                 ^referent <white1>)
   (<white1> ^handle white1 ^property @401000 ^item-type predicate)
}

### +black1
smem --add {
   (<word-black> ^spelling |black|
                 ^structure-type ADJ
                 ^referent <black1>)
   (<black1> ^handle black1 ^property @401000 ^item-type predicate)
}

### +brown1
smem --add {
   (<word-brown> ^spelling |brown|
                 ^structure-type ADJ
                 ^referent <brown1>)
   (<brown1> ^handle brown1 ^property @401000 ^item-type predicate)
}

### +gray1
smem --add {
   (<word-gray> ^spelling |gray|
                ^structure-type ADJ
                ^referent <gray1>)
   (<gray1> ^handle gray1 ^property @401000 ^item-type predicate)
}

############################################################
############### CATEGORY = shape             ###############

### !shape
smem --add {
   (@402000 ^handle shape ^type visual ^item-type property)
}

### +triangle1
smem --add {
   (<word-triangle> ^spelling |triangle|
                    ^structure-type N
                    ^number singular
                    ^referent <triangle1>)
   (<triangle1> ^handle triangle1 ^property @402000 ^item-type predicate)
}

### +arch1
smem --add {
   (<word-arch> ^spelling |arch|
                ^structure-type N
                ^number signular
                ^referent <arch1>)
   (<arch1> ^handle arch1 ^property @402000 ^item-type predicate)
}

### +square1
smem --add {
   (<word-square> ^spelling |square|
                  ^structure-type N
                  ^number signular
                  ^referent <square1>)
   (<square1> ^handle square1 ^property @402000 ^item-type predicate)
}

### +l-block1
smem --add {
   (<word-l-block> ^spelling |l-block|
                   ^structure-type N
                   ^number singular
                   ^referent <l-block1>)
   (<l-block1> ^handle l-block1 ^property @402000 ^item-type predicate)
}

### +t-block1
smem --add {
   (<word-t-block> ^spelling |t-block|
                   ^structure-type N
                   ^number singular
                   ^property P2000
                   ^referent <t-block1>)
   (<t-block1> ^handle t-block1 ^property @402000 ^item-type predicate)
}

### +sphere1
smem --add {
   (<word-sphere> ^spelling |sphere|
                  ^structure-type N
                  ^number singular
                  ^referent <sphere1>)
   (<sphere1> ^handle sphere1 ^property @402000 ^item-type predicate)
}

### +chicken1
smem --add {
   (<word-chicken> ^spelling |chicken|
                   ^structure-type N
                   ^number singular
                   ^referent <chicken1>)
   (<chicken1> ^handle chicken1 ^property @402000 ^item-type predicate)
}

### +rectangle1
smem --add {
   (<word-rectangle> ^spelling |rectangle|
                     ^structure-type N
                     ^number signular
                     ^referent <rectangle1>)
   (<rectangle1> ^handle rectangle1 ^property @402000 ^item-type predicate)
}

### +soda1
smem --add {
   (<word-soda> ^spelling |soda|
                ^structure-type N
                ^number singular
                ^referent <soda1>)
   (<word-sodas> ^spelling |sodas|
                 ^structure-type N
                 ^number plural
                 ^referent <soda1>)
   (<soda1> ^handle soda1 ^property @402000 ^item-type predicate)
}

### +box1
smem --add {
   (<word-box> ^spelling |box|
               ^structure-type N
               ^number singular
               ^referent <box1>)
   (<box1> ^handle box1 ^property @402000 ^item-type predicate)
}

### +steak1
smem --add {
   (<word-steak> ^spelling |steak|
                 ^structure-type N
                 ^number singular
                 ^referent <steak1>)
   (<steak1> ^handle steak1 ^property @402000 ^item-type predicate)
}

### +lights1
smem --add {
   (<word-lights> ^spelling |lights|
                  ^structure-type N
                  ^number singular
                  ^on-off-state-change true
                  ^referent <lights1>)
   (<word-light> ^spelling |light|
                 ^structure-type N
                 ^number singular
                 ^on-off-state-change true
                 ^referent <lights1>)
   (<lights1> ^handle lights1 ^property @402000 ^item-type predicate)
}

### +package1
smem --add {
   (<word-package> ^spelling |package|
                   ^structure-type N
                   ^number singular
                   ^referent <package1>)
   (<package1> ^handle package1 ^property @402000 ^item-type predicate)
}

### +papers1
smem --add {
   (<word-papers> ^spelling |papers|
                  ^structure-type N
                  ^number plural
                  ^referent <papers1>)
   (<papers1> ^handle papers1 ^property @402000 ^item-type predicate)
}

### +kinect1
smem --add {
   (<word-kinect> ^spelling |kinect|
                  ^structure-type N
                  ^number singular
                  ^referent <kinect1>)
   (<kinect1> ^handle kinect1 ^property @402000 ^item-type predicate)
}

### +line1
smem --add {
   (<word-line> ^spelling |line|
                ^structure-type N
                ^number singular
                ^referent <line1>)
   (<line1> ^handle line1 ^property @402000 ^item-type predicate)
}

### +triangles1
smem --add {
   (<word-triangles> ^spelling |triangles|
                     ^structure-type N
                     ^number plural
                     ^referent <triangles1>)
   (<triangles1> ^handle triangles1 ^multiple true ^property @402000 ^item-type predicate)
}

### +stapler1
smem --add {
   (<word-stapler> ^spelling |stapler|
                   ^structure-type N
                   ^number singular
                   ^referent <stapler1>)
   (<stapler1> ^handle stapler1 ^property @402000 ^item-type predicate)
}

### +book1
smem --add {
   (<word-book> ^spelling |book|
                ^structure-type N
                ^number singular
                ^referent <book1>)
   (<book1> ^handle book1 ^property @402000 ^item-type predicate)
}

### +water1
smem --add {
   (<word-water> ^spelling |water|
                 ^structure-type N
                 ^number singular
                 ^referent <water1>)
   (<water1> ^handle water1 ^property @402000 ^item-type predicate)
}

### +juice1
smem --add {
   (<word-juice> ^spelling |juice|
                 ^structure-type N
                 ^number singular
                 ^referent <juice1>)
   (<juice1> ^handle juice1 ^property @402000 ^item-type predicate)
}

### +milk1
smem --add {
   (<word-milk> ^spelling |milk|
                ^structure-type N
                ^number singular
                ^referent <milk1>)
   (<milk1> ^handle milk1 ^property @402000 ^item-type predicate)
}

### +cupboard1
smem --add {
   (<word-cupboard> ^spelling |cupboard|
                    ^structure-type N
                    ^number singular
                    ^referent <cupboard1>)
   (<cupboard1> ^handle cupboard1 ^property @402000 ^item-type predicate)
}

### +bread1
smem --add {
   (<word-bread> ^spelling |bread|
                 ^structure-type N
                 ^number singular
                 ^referent <bread1>)
   (<bread1> ^handle bread1 ^property @402000 ^item-type predicate)
}

### +tissues1
smem --add {
   (<word-tissues> ^spelling |tissues|
                   ^structure-type N
                   ^number singular
                   ^referent <tissues1>)
   (<tissues1> ^handle tissues1 ^property @402000 ^item-type predicate)
}

############################################################
############### CATEGORY = size              ###############

### !size
smem --add {
   (@403000 ^handle size ^type visual ^item-type property)
}

### +small1
smem --add {
   (<word-small> ^spelling |small|
                 ^structure-type ADJ
                 ^attachment immediate
                 ^referent <small1>)
   (<word-little> ^spelling |little|
                  ^structure-type ADJ
                  ^attachment immediate
                  ^referent <small1>)
   (<small1> ^handle small1 ^property @403000 ^item-type predicate)
}

### +medium1
smem --add {
   (<word-medium> ^spelling |medium|
                  ^structure-type ADJ
                  ^attachment immediate
                  ^referent <medium1>)
   (<medium1> ^handle medium1 ^property @403000 ^item-type predicate)
}

### +large1
smem --add {
   (<word-large> ^spelling |large|
                 ^structure-type ADJ
                 ^attachment immediate
                 ^referent <large1>)
   (<word-big> ^spelling |big|
               ^structure-type ADJ
               ^attachment immediate
               ^referent <large1>)
   (<large1> ^handle large1 ^property @403000 ^item-type predicate)
}

### +tiny1
smem --add {
   (<word-tiny> ^spelling |tiny|
                ^structure-type ADJ
                ^attachment immediate
                ^referent <tiny1>)
   (<tiny1> ^handle tiny1 ^property @403000 ^item-type predicate)
}

### +giant1
smem --add {
   (<word-giant> ^spelling |giant|
                 ^structure-type ADJ
                 ^attachment immediate
                 ^referent <giant1>)
   (<giant1> ^handle giant1 ^property @403000 ^item-type predicate)
}

############################################################
############### CATEGORY = weight            ###############

### !weight
smem --add {
   (@405000 ^handle weight ^type measurable ^item-type property)
}

### +heavy1
smem --add {
   (<word-heavy> ^spelling |heavy|
                 ^referent <heavy1>
                 ^attachment immediate
                 ^structure-type ADJ)
   (<heavy1> ^handle heavy1 ^property @405000 ^item-type predicate)
}

### +light1
smem --add {
   (<word-light> ^spelling |light|
                 ^referent <light1>
                 ^attachment immediate
                 ^structure-type ADJ)
   (<light1> ^handle light1 ^property @405000 ^item-type predicate)
}

### +heaviest1
smem --add {
   (<word-heaviest> ^spelling |heaviest|
                    ^referent <heaviest1>
                    ^attachment immediate
                    ^structure-type ADJ)
   (<heaviest1> ^handle heaviest1 ^property @405000 ^item-type predicate)
}

### +lightest1
smem --add {
   (<word-lightest> ^spelling |lightest|
                    ^referent <lightest1>
                    ^attachment immediate
                    ^structure-type ADJ)
   (<lightest1> ^handle lightest1 ^property @405000 ^item-type predicate)
}

############################################################
############### CATEGORY = temperature       ###############

### !temperature
smem --add {
   (@406000 ^handle temperature ^type measurable ^item-type property)
}

### +hot1
smem --add {
   (<word-hot> ^spelling |hot|
               ^referent <hot1>
               ^attachment immediate
               ^structure-type ADJ)
   (<hot1> ^handle hot1 ^property @406000)
}

### +warm1
smem --add {
   (<word-warm> ^spelling |warm|
                ^referent <warm1>
                ^attachment immediate
                ^structure-type ADJ)
   (<warm1> ^handle warm1 ^property @406000)
}

### +cool1
smem --add {
   (<word-cool> ^spelling |cool|
                ^referent <cool1>
                ^attachment immediate
                ^structure-type ADJ)
   (<cool1> ^handle cool1 ^property @406000)
}

### +cold1
smem --add {
   (<word-cold> ^spelling |cold|
                ^referent <cold1>
                ^attachment immediate
                ^structure-type ADJ)
   (<cold1> ^handle cold1 ^property @406000)
}

### +hottest1
smem --add {
   (<word-hottest> ^spelling |hottest|
                   ^referent <hottest1>
                   ^attachment immediate
                   ^structure-type ADJ)
   (<hottest1> ^handle hottest1 ^property @406000)
}

### +coldest1
smem --add {
   (<word-coldest> ^spelling |coldest|
                   ^referent <coldest1>
                   ^attachment immediate
                   ^structure-type ADJ)
   (<coldest1> ^handle coldest1 ^property @406000)
}

############################################################
############### CATEGORY = activation1       ###############

### !activation1
smem --add {
   (@4014000 ^handle activation1 ^type state ^item-type property)
}

### +on2
#smem --add {
#   (<on2> ^handle on2 ^property @4014000 ^item-type concept)
#}

### +off2
#smem --add {
#   (<off2> ^handle off2 ^property @4014000 ^item-type concept)
#}

############################################################
############### CATEGORY = spatial-shape     ###############

### !spatial-shape
smem --add {
   (@4012000 ^handle spatial-shape ^type visual ^item-type property)
}

### +end1
smem --add {
   (<word-end> ^spelling |end|
               ^structure-type N
               ^number singular
               ^referent <end1>)
   (<end1> ^handle end1 ^property @4012000 ^item-type predicate)
}

### +wall1
smem --add {
   (<word-wall> ^spelling |wall|
                ^structure-type N
                ^referent <wall1>
                ^number singular)
   (<wall1> ^handle wall1 ^property @4012000 ^item-type predicate)
}

### +hall1
smem --add {
   (<word-hall> ^spelling |hall|
                ^structure-type N
                ^number singular
                ^referent <hall1>)
   (<word-hallway> ^spelling |hallway|
                   ^structure-type N
                   ^number singular
                   ^referent <hall1>)
   (<hall1> ^handle hall1 ^property @4012000 ^item-type predicate)
}

### +door
smem --add {
   (<word-door> ^spelling |door|
                ^structure-type N
                ^number singular
                ^referent <door>)
   (<word-doorway> ^spelling |doorway|
                   ^structure-type N
                   ^number singular
                   ^referent <door>)
   (<door> ^handle door ^property @4012000 ^output-word door ^item-type predicate)
}

### +intersection
smem --add {
   (<word-intersection> ^spelling |intersection|
                        ^structure-type N
                        ^number singular
                        ^referent <intersection>)
   (<word-intersections> ^spelling |intersections|
                         ^structure-type N
                         ^number plural
                         ^referent <intersection>)
   (<word-junction> ^spelling |junction|
                    ^structure-type N
                    ^number singular
                    ^referent <intersection>)
   (<intersection> ^handle intersection ^property @4012000 ^output-word intersection ^item-type predicate)
}

### +opening1
smem --add {
   (<word-opening> ^spelling |opening|
                   ^structure-type N
                   ^number singular
                   ^referent <opening1>)
   (<opening1> ^handle opening1 ^property @4012000 ^item-type predicate)
}

### +t-intersection1
smem --add {
   (<word-t-intersection> ^spelling |t-intersection|
                          ^structure-type N
                          ^number singular
                          ^referent <t-intersection1>)
   (<t-intersection1> ^handle t-intersection1 ^property @4012000 ^item-type predicate)
}

### +room1
smem --add {
   (<word-room> ^spelling |room|
                ^structure-type N
                ^number singular
                ^referent <room1>)
   (<room1> ^handle room1 ^property @4012000 ^item-type predicate)
}

### +waypoint
smem --add {
   (<word-waypoint> ^spelling |waypoint|
                    ^structure-type N
                    ^number singular
                    ^referent <waypoint>)
   (<waypoint> ^handle waypoint ^property @4012000 ^item-type predicate)
}

### +office1
smem --add {
   (<word-office> ^spelling |office|
                  ^structure-type N
                  ^number singular
                  ^referent <office1>)
   (<office1> ^handle office1 ^property @4012000 ^item-type predicate ^style office)
}

############################################################
############### CATEGORY = door1             ###############

### !door1
smem --add {
   (@4014200 ^handle door1 ^type state ^item-type property)
}

### +open2
smem --add {
   (<word-open> ^spelling |open|
                ^structure-type ADJ
                ^referent <open2>)
   (<open2> ^handle open2 ^property @4014200 ^item-type concept)
}

### +closed2
smem --add {
   (<closed2> ^handle closed2 ^property @4014200 ^item-type concept)
}

############################################################
############### CATEGORY = location2         ###############

### !location2
smem --add {
   (@4013000 ^handle location2 ^type visual ^item-type property)
}

############################################################
############### CATEGORY = meat1             ###############

### !meat1
smem --add {
   (@4014100 ^handle meat1 ^type state ^item-type property)
}

### +cooked1
smem --add {
   (<word-cooked> ^spelling |cooked|
                  ^structure-type ADJ
                  ^attachment immediate
                  ^referent <cooked1>)
   (<cooked1> ^handle cooked1 ^property @4014100 ^item-type concept)
}

### +raw1
smem --add {
   (<word-raw> ^spelling |raw|
               ^structure-type ADJ
               ^referent <raw1>)
   (<raw1> ^handle raw1 ^property @4014100 ^item-type concept)
}

############################################################
############### CATEGORY = game1             ###############

### !game1
smem --add {
   (@202001 ^handle game1 ^type concept ^item-type property)
}

############################################################
############### CATEGORY = action1           ###############

### !action1
smem --add {
   (@4014300 ^handle action1 ^type state ^item-type property)
}

### +last-moved1
smem --add {
   (<word-last-moved> ^spelling |last-moved|
                      ^structure-type ADJ
                      ^attachment immediate
                      ^referent <last-moved1>)
   (<last-moved1> ^handle last-moved1 ^property @4014300 ^item-type predicate)
}

############################################################
############### CATEGORY = number            ###############

### !number
smem --add {
   (@4011000 ^handle number ^type number ^item-type property)
}

### +zeroth1
smem --add {
   (<word-zeroth> ^spelling |zeroth|
                  ^super-type @6010000
                  ^number plural
                  ^constraint <zeroth1>)
   (<zeroth1> ^handle zeroth1 ^property @4011000 ^item-type predicate)
}

### +first1
smem --add {
   (<word-first> ^spelling |first|
                 ^attachment immediate
                 ^structure-type ADJ
                 ^constraint <first1>)
   (<first1> ^handle first1 ^property @4011000 ^item-type predicate)
}

### +second1
smem --add {
   (<word-second> ^spelling |second|
                  ^attachment immediate
                  ^structure-type ADJ
                  ^constraint <second1>)
   (<second1> ^handle second1 ^property @4011000 ^item-type predicate)
}

### +third1
smem --add {
   (<word-third> ^spelling |third|
                 ^super-type @6010000
                 ^number singular
                 ^constraint <third1>)
   (<third1> ^handle third1 ^property @4011000 ^item-type predicate)
}

### +fourth1
smem --add {
   (<word-fourth> ^spelling |fourth|
                  ^super-type @6010000
                  ^number singular
                  ^constraint <fourth1>)
   (<fourth1> ^handle fourth1 ^property @4011000 ^item-type predicate)
}

### +fifth1
smem --add {
   (<word-fifth> ^spelling |fifth|
                 ^super-type @6010000
                 ^number singular
                 ^constraint <fifth1>)
   (<fifth1> ^handle fifth1 ^property @4011000 ^item-type predicate)
}

### +sixth1
smem --add {
   (<word-sixth> ^spelling |sixth|
                 ^super-type @6010000
                 ^number singular
                 ^constraint <sixth1>)
   (<sixth1> ^handle sixth1 ^property @4011000 ^item-type predicate)
}

### +seventh1
smem --add {
   (<word-seventh> ^spelling |seventh|
                   ^super-type @6010000
                   ^number singular
                   ^constraint <seventh1>)
   (<seventh1> ^handle seventh1 ^property @4011000 ^item-type predicate)
}

### +eighth1
smem --add {
   (<word-eighth> ^spelling |eighth|
                  ^super-type @6010000
                  ^number singular
                  ^constraint <eighth1>)
   (<eighth1> ^handle eighth1 ^property @4011000 ^item-type predicate)
}

### +ninth1
smem --add {
   (<word-ninth> ^spelling |ninth|
                 ^super-type @6010000
                 ^number singular
                 ^constraint <ninth1>)
   (<ninth1> ^handle ninth1 ^property @4011000 ^item-type predicate)
}

### +0
smem --add {
   (<word-0> ^spelling |0|
             ^structure-type DP
             ^number singular
             ^constraint <num0>
             ^specifier indefinite)
   (<word-no> ^spelling |no|
              ^super-type @6010000
              ^number plural
              ^constraint <num0>)
   (<word-zero> ^spelling |zero|
                ^super-type @6010000
                ^number plural
                ^constraint <num0>)
   (<word-D-zero> ^prior-word D
                  ^structure-type ADJ
                  ^current-word |zero|
                  ^spelling |D-zero|
                  ^referent <num0>)
   (<num0> ^handle 0 ^property @4011000 ^item-type predicate)
}

### +1
smem --add {
   (<word-1> ^spelling |1|
             ^structure-type DP
             ^number singular
             ^constraint <num1>
             ^specifier indefinite)
   (<word-one> ^spelling |one|
               ^super-type @6010000
               ^number singular
               ^constraint <num1>)
   (<word-D-one> ^prior-word D
                 ^structure-type ADJ
                 ^current-word |one|
                 ^spelling |D-one|
                 ^referent <num1>)
   (<num1> ^handle 1 ^property @4011000 ^item-type predicate)
}

### +2
smem --add {
   (<word-2> ^spelling |2|
             ^structure-type DP
             ^number singular
             ^constraint <num2>
             ^specifier indefinite)
   (<word-two> ^spelling |two|
               ^super-type @6010000
               ^number plural
               ^constraint <num2>)
   (<word-D-two> ^prior-word D
                 ^structure-type ADJ
                 ^current-word |two|
                 ^spelling |D-two|
                 ^referent <num2>)
   (<num2> ^handle 2 ^property @4011000 ^item-type predicate)
}

### +3
smem --add {
   (<word-3> ^spelling |3|
             ^structure-type DP
             ^number singular
             ^specifier indefinite
             ^constraint <num3>)
   (<word-three> ^spelling |three|
                 ^super-type @6010000
                 ^number singular
                 ^constraint <num3>)
   (<word-D-three> ^prior-word D
                   ^structure-type ADJ
                   ^current-word |three|
                   ^spelling |D-three|
                   ^referent <num3>)
   (<num3> ^handle 3 ^property @4011000 ^item-type predicate)
}

### +4
smem --add {
   (<word-4> ^spelling |4|
             ^structure-type DP
             ^number singular
             ^specifier indefinite
             ^constraint <num4>)
   (<word-four> ^spelling |four|
                ^super-type @6010000
                ^number singular
                ^constraint <num4>)
   (<word-D-four> ^prior-word D
                  ^structure-type ADJ
                  ^current-word |four|
                  ^spelling |D-four|
                  ^referent <num4>)
   (<num4> ^handle 4 ^property @4011000 ^item-type predicate)
}

### +5
smem --add {
   (<word-5> ^spelling |5|
             ^structure-type DP
             ^number singular
             ^specifier indefinite
             ^constraint <num5>)
   (<word-five> ^spelling |five|
                ^super-type @6010000
                ^number singular
                ^constraint <num5>)
   (<word-D-five> ^prior-word D
                  ^structure-type ADJ
                  ^current-word |five|
                  ^spelling |D-five|
                  ^referent <num5>)
   (<num5> ^handle 5 ^property @4011000 ^item-type predicate)
}

### +6
smem --add {
   (<word-6> ^spelling |6|
             ^structure-type DP
             ^number singular
             ^specifier indefinite
             ^constraint <num6>)
   (<word-six> ^spelling |six|
               ^super-type @6010000
               ^number singular
               ^constraint <num6>)
   (<word-D-six> ^prior-word D
                 ^structure-type ADJ
                 ^current-word |six|
                 ^spelling |D-six|
                 ^referent <num6>)
   (<num6> ^handle 6 ^property @4011000 ^item-type predicate)
}

### +7
smem --add {
   (<word-7> ^spelling |7|
             ^structure-type DP
             ^number singular
             ^specifier indefinite
             ^constraint <num7>)
   (<word-seven> ^spelling |seven|
                 ^super-type @6010000
                 ^number singular
                 ^constraint <num7>)
   (<word-D-seven> ^prior-word D
                   ^structure-type ADJ
                   ^current-word |seven|
                   ^spelling |D-seven|
                   ^referent <num7>)
   (<num7> ^handle 7 ^property @4011000 ^item-type predicate)
}

### +8
smem --add {
   (<word-8> ^spelling |8|
             ^structure-type DP
             ^number singular
             ^specifier indefinite
             ^constraint <num8>)
   (<word-eight> ^spelling |eight|
                 ^super-type @6010000
                 ^number singular
                 ^constraint <num8>)
   (<word-D-eight> ^prior-word D
                   ^structure-type ADJ
                   ^current-word |eight|
                   ^spelling |D-eight|
                   ^referent <num8>)
   (<num8> ^handle 8 ^property @4011000 ^item-type predicate)
}

### +9
smem --add {
   (<word-9> ^spelling |9|
             ^structure-type DP
             ^number singular
             ^specifier indefinite
             ^constraint <num9>)
   (<word-nine> ^spelling |nine|
                ^super-type @6010000
                ^number singular
                ^constraint <num9>)
   (<word-D-nine> ^prior-word D
                  ^structure-type ADJ
                  ^current-word |nine|
                  ^spelling |D-nine|
                  ^referent <num9>)
   (<num9> ^handle 9 ^property @4011000 ^item-type predicate)
}

### +10
smem --add {
   (<word-10> ^spelling |10|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num10>)
   (<word-ten> ^spelling |ten|
               ^super-type @6010000
               ^number singular
               ^constraint <num10>)
   (<word-D-ten> ^prior-word D
                 ^structure-type ADJ
                 ^current-word |ten|
                 ^spelling |D-ten|
                 ^referent <num10>)
   (<word-D-twenty> ^prior-word D
                    ^structure-type ADJ
                    ^current-word |twenty|
                    ^spelling |D-twenty|
                    ^referent <num10>)
   (<num10> ^handle 10 ^property @4011000 ^item-type predicate)
}

### +11
smem --add {
   (<word-11> ^spelling |11|
              ^structure-type DP
              ^number singular
              ^constraint <num11>
              ^specifier indefinite)
   (<word-eleven> ^spelling |eleven|
                  ^super-type @6010000
                  ^number singular
                  ^constraint <num11>)
   (<word-D-eleven> ^prior-word D
                    ^structure-type ADJ
                    ^current-word |eleven|
                    ^spelling |D-eleven|
                    ^referent <num11>)
   (<num11> ^handle 11 ^property @4011000 ^item-type predicate)
}

### +12
smem --add {
   (<word-12> ^spelling |12|
              ^structure-type DP
              ^number singular
              ^constraint <num12>
              ^specifier indefinite)
   (<word-twelve> ^spelling |twelve|
                  ^super-type @6010000
                  ^number plural
                  ^constraint <num12>)
   (<word-D-twelve> ^prior-word D
                    ^structure-type ADJ
                    ^current-word |twelve|
                    ^spelling |D-twelve|
                    ^referent <num12>)
   (<num12> ^handle 12 ^property @4011000 ^item-type predicate)
}

### +13
smem --add {
   (<word-13> ^spelling |13|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num13>)
   (<word-thirteen> ^spelling |thirteen|
                    ^super-type @6010000
                    ^number singular
                    ^constraint <num13>)
   (<word-D-thirteen> ^prior-word D
                      ^structure-type ADJ
                      ^current-word |thirteen|
                      ^spelling |D-thirteen|
                      ^referent <num13>)
   (<num13> ^handle 13 ^property @4011000 ^item-type predicate)
}

### +14
smem --add {
   (<word-14> ^spelling |14|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num14>)
   (<word-fourteen> ^spelling |fourteen|
                    ^super-type @6010000
                    ^number singular
                    ^constraint <num14>)
   (<word-D-fourteen> ^prior-word D
                      ^structure-type ADJ
                      ^current-word |fourteen|
                      ^spelling |D-fourteen|
                      ^referent <num14>)
   (<num14> ^handle 14 ^property @4011000 ^item-type predicate)
}

### +15
smem --add {
   (<word-15> ^spelling |15|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num15>)
   (<word-fifteen> ^spelling |fifteen|
                   ^super-type @6010000
                   ^number singular
                   ^constraint <num15>)
   (<word-D-fifteen> ^prior-word D
                     ^structure-type ADJ
                     ^current-word |fifteen|
                     ^spelling |D-fifteen|
                     ^referent <num15>)
   (<num15> ^handle 15 ^property @4011000 ^item-type predicate)
}

### +16
smem --add {
   (<word-16> ^spelling |16|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num16>)
   (<word-sixteen> ^spelling |sixteen|
                   ^super-type @6010000
                   ^number singular
                   ^constraint <num16>)
   (<word-D-sixteen> ^prior-word D
                     ^structure-type ADJ
                     ^current-word |sixteen|
                     ^spelling |D-sixteen|
                     ^referent <num16>)
   (<num16> ^handle 16 ^property @4011000 ^item-type predicate)
}

### +17
smem --add {
   (<word-17> ^spelling |17|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num17>)
   (<word-seventeen> ^spelling |seventeen|
                     ^super-type @6010000
                     ^number singular
                     ^constraint <num17>)
   (<word-D-seventeen> ^prior-word D
                       ^structure-type ADJ
                       ^current-word |seventeen|
                       ^spelling |D-seventeen|
                       ^referent <num17>)
   (<num17> ^handle 17 ^property @4011000 ^item-type predicate)
}

### +18
smem --add {
   (<word-18> ^spelling |18|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num18>)
   (<word-eighteen> ^spelling |eighteen|
                    ^super-type @6010000
                    ^number singular
                    ^constraint <num18>)
   (<word-D-eighteen> ^prior-word D
                      ^structure-type ADJ
                      ^current-word |eighteen|
                      ^spelling |D-eighteen|
                      ^referent <num18>)
   (<num18> ^handle 18 ^property @4011000 ^item-type predicate)
}

### +19
smem --add {
   (<word-19> ^spelling |19|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num19>)
   (<word-nineteen> ^spelling |nineteen|
                    ^super-type @6010000
                    ^number singular
                    ^constraint <num19>)
   (<word-D-nineteen> ^prior-word D
                      ^structure-type ADJ
                      ^current-word |nineteen|
                      ^spelling |D-nineteen|
                      ^referent <num19>)
   (<num19> ^handle 19 ^property @4011000 ^item-type predicate)
}

### +20
smem --add {
   (<word-20> ^spelling |20|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num20>)
   (<word-twenty> ^spelling |twenty|
                  ^super-type @6010000
                  ^number singular
                  ^constraint <num20>)
   (<num20> ^handle 20 ^property @4011000 ^item-type predicate)
}

### +30
smem --add {
   (<word-30> ^spelling |30|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num30>)
   (<word-thirty> ^spelling |thirty|
                  ^super-type @6010000
                  ^number singular
                  ^constraint <num30>)
   (<num30> ^handle 30 ^property @4011000 ^item-type predicate)
}

### +31
smem --add {
   (<word-31> ^spelling |31|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num31>)
   (<word-thirty-one> ^spelling |thirty-one|
                      ^super-type @6010000
                      ^number singular
                      ^constraint <num31>)
   (<num31> ^handle 31 ^property @4011000 ^item-type predicate)
}

### +40
smem --add {
   (<word-30> ^spelling |30|
              ^structure-type DP
              ^number singular
              ^specifier indefinite
              ^constraint <num40>)
   (<word-thirty> ^spelling |thirty|
                  ^super-type @6010000
                  ^number singular
                  ^constraint <num40>)
   (<num40> ^handle 40 ^property @4011000 ^item-type predicate)
}

############################################################
############### CATEGORY = unit              ###############

### !unit
smem --add {
   (@4010000 ^handle unit ^type unit ^item-type property)
}

### +meters
smem --add {
   (<word-meter> ^spelling |meter|
                 ^structure-type N
                 ^number singular
                 ^referent <meters>)
   (<word-meters> ^spelling |meters|
                  ^structure-type N
                  ^number plural
                  ^referent <meters>)
   (<meters> ^handle meters ^property @4010000 ^item-type concept)
}

### +feet
smem --add {
   (<word-foot> ^spelling |foot|
                ^structure-type N
                ^number singular
                ^referent <feet>)
   (<word-feet> ^spelling |feet|
                ^structure-type N
                ^number plural
                ^referent <feet>)
   (<feet> ^handle feet ^property @4010000 ^item-type concept)
}

### +inches
smem --add {
   (<word-inch> ^spelling |inch|
                ^structure-type N
                ^number singular
                ^referent <inches>)
   (<word-inches> ^spelling |inches|
                  ^structure-type N
                  ^number plural
                  ^referent <inches>)
   (<inches> ^handle inches ^property @4010000 ^item-type concept)
}

### +centimeters
smem --add {
   (<word-centimeter> ^spelling |centimeter|
                      ^structure-type N
                      ^number singular
                      ^referent <centimeters>)
   (<word-centimeters> ^spelling |centimeters|
                       ^structure-type N
                       ^number plural
                       ^referent <centimeters>)
   (<centimeters> ^handle centimeters ^property @4010000 ^item-type concept)
}

############################################################
############### CATEGORY = cardinal-direction1 ###############

### !cardinal-direction1
smem --add {
   (@408000 ^handle cardinal-direction1 ^item-type property)
}

### +north1
smem --add {
   (<word-northern> ^spelling |northern|
                    ^structure-type ADJ
                    ^referent <north1>)
   (<word-north> ^spelling |north|
                 ^structure-type CARDINAL
                 ^number singular
                 ^referent <north1>)
   (<word-n> ^spelling |n|
             ^structure-type CARDINAL
             ^number singular
             ^referent <north1>)
   (<north1> ^handle north1 ^property @408000 ^yaw 1.507 ^item-type concept)
}

### +east1
smem --add {
   (<word-eastern> ^spelling |eastern|
                   ^structure-type ADJ
                   ^referent <east1>)
   (<word-east> ^spelling |east|
                ^structure-type CARDINAL
                ^number singular
                ^referent <east1>)
   (<word-e> ^spelling |e|
             ^structure-type CARDINAL
             ^number singular
             ^referent <east1>)
   (<east1> ^handle east1 ^property @408000 ^yaw 0.0 ^item-type concept)
}

### +south1
smem --add {
   (<word-southern> ^spelling |southern|
                    ^structure-type ADJ
                    ^referent <south1>)
   (<word-south> ^spelling |south|
                 ^structure-type CARDINAL
                 ^number singular
                 ^referent <south1>)
   (<word-s> ^spelling |s|
             ^structure-type CARDINAL
             ^number singular
             ^referent <south1>)
   (<south1> ^handle south1 ^property @408000 ^yaw -1.507 ^item-type concept)
}

### +west1
smem --add {
   (<word-western> ^spelling |western|
                   ^structure-type ADJ
                   ^referent <west1>)
   (<word-west> ^spelling |west|
                ^structure-type CARDINAL
                ^number singular
                ^referent <west1>)
   (<word-w> ^spelling |w|
             ^structure-type CARDINAL
             ^number singular
             ^referent <west1>)
   (<west1> ^handle west1 ^property @408000 ^yaw 3.14 ^item-type concept)
}

############################################################
############### CATEGORY = relative-direction1 ###############

### !relative-direction1
smem --add {
   (@409000 ^handle relative-direction1 ^item-type property)
}

### +right1
smem --add {
   (<right1> ^handle right1 ^property @409000 ^side -1 ^item-type concept ^yaw -1.57)
}

### +left1
smem --add {
   (<left1> ^handle left1 ^property @409000 ^side 1 ^item-type concept ^yaw 1.57)
}

### +around1
smem --add {
   (<around1> ^handle around1 ^property @409000 ^side -1 ^item-type concept ^yaw 3.14)
}

############################################################
############### CATEGORY = property3         ###############

### !property3
smem --add {
   (@4022000 ^handle property3 ^type visual ^item-type property)
}

### +task-completed
smem --add {
   (<word-starting> ^spelling |starting|
                    ^structure-type ADJ
                    ^attachment immediate
                    ^referent <task-completed>)
   (<word-done> ^spelling |done|
                ^structure-type ADJ
                ^referent <task-completed>)
   (<word-finished> ^spelling |finished|
                    ^structure-type ADJ
                    ^referent <task-completed>)
   (<task-completed> ^handle task-completed ^property @4022000 ^item-type predicate)
}

### +won
smem --add {
   (<word-won> ^spelling |won|
               ^structure-type ADJ
               ^referent <won>)
   (<won> ^handle won ^property @4022000 ^item-type predicate)
}

### +lost
smem --add {
   (<word-lost> ^spelling |lost|
                ^structure-type ADJ
                ^referent <lost>)
   (<lost> ^handle lost ^property @4022000 ^item-type predicate)
}

############################################################
############### CATEGORY = property1         ###############

### !property1
smem --add {
   (@202000 ^handle property1 ^type visual ^item-type property)
}

############################################################
############### CATEGORY = modifier1         ###############

### !modifier1
smem --add {
   (@4015000 ^handle modifier1 ^type visual ^item-type property)
}

### +starting1
#smem --add {
#   (<starting1> ^handle starting1 ^item-type predicate ^property @4015000)
#}

### +current1
#smem --add {
#   (<current1> ^handle current1 ^item-type predicate ^property @4015000)
#}

### +answer1
#smem --add {
#   (<answer1> ^handle answer1 ^item-type predicate ^property @4015000)
#}

### +desired1
smem --add {
   (<word-desired> ^spelling |desired|
                   ^structure-type ADJ
                   ^attachment immediate
                   ^referent <desired1>)
#   (<desired1> ^handle desired1 ^item-type predicate ^property @4015000)
}

### +storage1
smem --add {
   (<word-storage> ^spelling |storage|
                   ^structure-type ADJ
                   ^attachment immediate
                   ^referent <storage1>)
#   (<storage1> ^handle storage1 ^item-type predicate ^property @4015000)
}

############################################################
############### CATEGORY = category          ###############

### !category
smem --add {
   (@407000 ^handle category ^type visual ^item-type property)
}

### +block
smem --add {
   (<word-block> ^spelling |block|
                 ^structure-type N
                 ^number singular
                 ^referent <block>)
   (<block> ^handle block ^property @407000)
}

### +location
smem --add {
   (<word-location> ^spelling |location|
                    ^structure-type N
                    ^syntactic-referent-type DP
                    ^number singular
                    ^referent <location>)
   (<location> ^handle location ^property @407000)
}

### +object
smem --add {
   (<word-drink> ^spelling |drink|
                 ^structure-type N
                 ^number singular
                 ^referent <object>)
   (<word-object> ^spelling |object|
                  ^structure-type N
                  ^number singular
                  ^referent <object>)
   (<object> ^handle object ^property @407000 ^subcategory @407001 @407002 @407006 @407008)
}

### +blocks
smem --add {
   (<word-blocks> ^spelling |blocks|
                  ^structure-type N
                  ^number plural
                  ^referent <blocks>)
   (<blocks> ^handle blocks ^multiple true ^property @407000)
}

### +locations
smem --add {
   (<word-locations> ^spelling |locations|
                     ^structure-type N
                     ^syntactic-referent-type DP
                     ^number plural
                     ^referent <locations>)
   (<locations> ^handle locations ^multiple true ^property @407000)
}

### +piece
smem --add {
   (<word-piece> ^spelling |piece|
                 ^structure-type N
                 ^number singular
                 ^referent <piece>)
   (<piece> ^handle piece ^property @407000)
}

### +pieces
smem --add {
   (<word-pieces> ^spelling |pieces|
                  ^structure-type N
                  ^number plural
                  ^referent <pieces>)
   (<pieces> ^handle pieces ^multiple true ^property @407000)
}

### +card
#smem --add {
#   (<card> ^handle card ^property @407000)
#}

### +cards
#smem --add {
#   (<cards> ^handle cards ^multiple true ^property @407000)
#}

### +tile
smem --add {
   (<word-tile> ^spelling |tile|
                ^structure-type N
                ^number singular
                ^referent <tile>)
   (<tile> ^handle tile ^property @407000)
}

### +tiles
smem --add {
   (<word-tiles> ^spelling |tiles|
                 ^structure-type N
                 ^number plural
                 ^referent <tiles>)
   (<tiles> ^handle tiles ^multiple true ^property @407000)
}

### +message
smem --add {
   (<message> ^handle message ^property @407000)
}

### +person
smem --add {
   (<person> ^handle person ^property @407000)
}

### +question
smem --add {
   (<question> ^handle question ^property @407000)
}

### +hand
#smem --add {
#   (<hand> ^handle hand ^property @407000)
#}

### +hands
#smem --add {
#   (<hands> ^handle hands ^multiple true ^property @407000)
#}

### +boat
#smem --add {
#   (<boat> ^handle boat ^property @407000)
#}

### +bank
#smem --add {
#   (<bank> ^handle bank ^property @407000)
#}

### +discard
#smem --add {
#   (<discard> ^handle discard ^property @407000)
#}

