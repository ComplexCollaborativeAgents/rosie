
#########################################################
#
# Change: missing-object
#   Occurs when a belief object is no longer visible 
#     and should be in view
#
#########################################################

sp {top-state*perception-monitor*elaborate*change-info*missing-object*tabletop
   (state <s> ^superstate nil
              ^agent-params.domain << fetch tabletop >>
              ^perception-monitor.change-info <info>)
-->
   (<info> ^change <missing-obj>)
   (<missing-obj> ^type missing-object 
                ^category object
                ^op-name attend-to-stale-object)
}

sp {top-state*perception-monitor*elaborate*change-info*missing-object*magicbot
   (state <s> ^superstate nil
              ^agent-params.domain << ai2thor magicbot cozmo >>
              ^perception-monitor.change-info <info>)
-->
   (<info> ^change <stale-obj>)
   (<stale-obj> ^type missing-object 
                ^category object
                ^op-name attend-to-missing-object)
}

sp {top-state*perception-monitor*object-monitor*elaborate*change*missing-object*tabletop
   (state <s> ^superstate nil
              ^agent-params.domain << tabletop fetch >>
              ^perception-monitor <perc-mon>)
   (<perc-mon> ^changes <changes>
               ^object-monitor.object-info <obj-info>)
   (<obj-info> ^status <status>)
   (<status> ^is-visible1 not-visible1
             ^is-occluded false)
-->
   (<changes> ^change <change>)
   (<change> ^type missing-object
             ^object-info <obj-info>)
}

sp {top-state*perception-monitor*object-monitor*elaborate*change*missing-object*magicbot
   (state <s> ^superstate nil
              ^agent-params.domain << ai2thor magicbot cozmo >>
              ^perception-monitor <perc-mon>)
   (<perc-mon> ^changes <changes>
               ^object-monitor.object-info <obj-info>)
   (<obj-info> ^status <status>
              -^wm-obj.predicates.is-confirmed1 not-confirmed1)
   (<status> ^is-visible1 not-visible1
            ^in-view true)
-->
   (<changes> ^change <change>)
   (<change> ^type missing-object
             ^object-info <obj-info>)
}



#############################################################################
# Change: recheck-occlusion
#   Periodically check occluded objects to see if they are still occluded
#############################################################################

sp {top-state*perception-monitor*elaborate*change-info*recheck-occlusion
   (state <s> ^superstate nil
              ^perception-monitor.change-info <info>)
-->
   (<info> ^change <recheck-occlusion>)
   (<recheck-occlusion> ^type recheck-occlusion
                        ^category object
                        ^op-name check-for-occlusion)
}

sp {top-state*perception-monitor*object-monitor*elaborate*change*recheck-occlusion
   (state <s> ^superstate nil
              ^perception-monitor <perc-mon>)
   (<perc-mon> ^changes <changes>
               ^object-monitor.object-info <obj-info>)
   (<obj-info> ^status.occlusion-timer-expired true)
-->
   (<changes> ^change <change>)
   (<change> ^type recheck-occlusion
             ^object-info <obj-info>)
}


