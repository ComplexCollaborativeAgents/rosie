
#########################################################
#
# Change: create-belief-object
#   Occurs when there is a perception object but not a belief one
#
#########################################################

sp {top-state*perception-monitor*elaborate*change-info*create-belief-object
   (state <s> ^superstate nil
              ^perception-monitor.change-info <info>)
-->
   (<info> ^change <create-belief-obj>)
   (<create-belief-obj> ^type create-belief-object 
                ^category object
                ^op-name create-belief-object)
}

sp {top-state*perception-monitor*object-monitor*elaborate*change*create-belief-object
   (state <s> ^superstate nil
             -^agent-params.domain internal
              ^perception-monitor <perc-mon>)
   (<perc-mon> ^changes <changes>
               ^object-monitor.object-info <obj-info>)
   (<obj-info> ^perception-obj <pobj>
               ^belief-id
              -^belief-obj)
-->
   (<changes> ^change <change>)
   (<change> ^type create-belief-object
             ^object-info <obj-info>)
}



#########################################################
#
# Change: delete-object
#   Occurs when a ^delete-object flag appears on object-info
#
#########################################################

sp {top-state*perception-monitor*elaborate*change-info*delete-object
   (state <s> ^superstate nil
              ^perception-monitor.change-info <info>)
-->
   (<info> ^change <del-obj>)
   (<del-obj> ^type delete-object
              ^category object
              ^op-name delete-object)
}

sp {top-state*perception-monitor*object-monitor*elaborate*change*delete-object
   (state <s> ^superstate nil
              ^perception-monitor <perc-mon>)
   (<perc-mon> ^changes <changes>
               ^object-monitor.object-info <obj-info>)
   (<obj-info> ^delete-object true)
-->
   (<changes> ^change <change>)
   (<change> ^type delete-object
             ^object-info <obj-info>)
}

#########################################################
#
# Change: update-pose
#   Occurs when a ^update-pose true flag appears on object-info
#
#########################################################

sp {top-state*perception-monitor*elaborate*change-info*update-pose
   (state <s> ^superstate nil
              ^perception-monitor.change-info <info>)
-->
   (<info> ^change <update-obj>)
   (<update-obj> ^type update-pose
                 ^category object
                 ^op-name update-pose)
}

sp {top-state*perception-monitor*object-monitor*elaborate*change*update-object
   (state <s> ^superstate nil
              ^perception-monitor <perc-mon>)
   (<perc-mon> ^changes <changes>
               ^object-monitor.object-info <obj-info>)
   (<obj-info> ^update-pose true)
-->
   (<changes> ^change <change>)
   (<change> ^type update-pose
             ^object-info <obj-info>)
}
