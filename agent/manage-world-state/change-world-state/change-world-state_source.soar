########################################################
# change-world-state 
#
# This operator can be proposed anywhere, with multiple changes
#   all the changes will happen in 1 elaboration cycle,
#   so it designed to be somewhat atomic
#   (it will create SVS commands, but they will not take effect until next DC)
# 
# In the following documentation, 
#   These are all added to an operator named change-world-state
#     you can have as many as you want
#   <obj-info> is from top-state.perception-monitor.object-monitor.object-info <obj-info>
#   

#### add-object-to-world
# (<o> ^add-object-to-world <info>)
# (<info> ^object <obj>  - should be a valid world object representation
#         ^perception-id <perc-id> - optional
# Will add the object to the world and object-monitor

source add-object-to-world.soar


#### create-belief-object
# (<o> ^create-belief-object <obj-info>)
# Will create a new belief object by copying (<obj-info> ^perception-obj <obj>)
#   with the id (<obj-info> ^belief-id <bel-id>)

source create-belief-object.soar


#### change-object-predicate
# (<o> ^change-object-predicate <chg>)
# (<chg> ^object-info <obj-info>
#        ^property-handle <prop>
#        ^predicate-handle <pred>)
# Will create the predicate ^<prop> <pred> on the world object
#   and remove any other predicates with the same property

source change-object-predicate.soar


#### change-perception-id
# (<o> ^change-perception-id <chg>)
# (<chg> ^object-info <obj-info>
#        ^perception-id <id>)
# Will change <obj-info> ^perception-id <id> to the given one

source change-perception-id.soar


#### update-object-pose
# (<o> ^update-object-pose <obj-info>)
# Will copy pose information from the perception-obj to the belief-obj

source update-object-pose.soar


#### delete-object
# (<o> ^delete-object <obj-info>)
# Will delete the object from working memory and SVS
# (If the object is a task-object, will only delete from SVS)

source delete-object.soar


#### merge-perception-objects
# (<o> ^merge-perception-objects <merge>)
# (<merge> ^core-perception-id <core-id>
#          ^merging-perception-id <id1> <id2> ...)
# Will tell perception to merge the ids together to be the core-id

source merge-perception-objects.soar



#### merge-belief-objects
# (<o> ^merge-belief-objects <merge>)
# (<merge> ^core-object-info <core-obj-info>
#          ^merging-object-info <oi1> <oi2> ...)
# Will merge the given object-info's together into the core-object-info
# (copy predicates over and update all references to be the core-object-info)

source merge-belief-objects.soar
