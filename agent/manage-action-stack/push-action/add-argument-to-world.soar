# if object-instance, smem-obj, else, imagined-obj

sp {manage-action-stack*push-action*elaborate*add-object-to-world*object-slot
   (state <s> ^name push-action
              ^object-slots <slots>)
   (<slots> ^object-slot <obj-slot>
            ^implicit <obj-slot>)
   (<obj-slot> ^default <def>)
-->
   (<s> ^add-object-to-world <obj>)
   (<obj> ^handle (make-constant-symbol obj-hand-)
          ^predicates <def>)
}

sp {manage-action-stack*push-action*elaborate*add-object-to-world*object
   (state <s> ^name push-action
              ^action-to-push.execution-operator <a>
              ^top-state.world.objects <objs>)
   (<a> ^<arg-name> <arg>)
   (<arg> ^arg-type object
         -^arg-status abstract
          ^id <obj>)
   (<objs> -^object <obj>)
-->
   (<s> ^add-object-to-world <obj>)
} 

sp {manage-action-stack*push-action*elaborate*add-object-to-world*object*predicate
   (state <s> ^name push-action
              ^action-to-push.execution-operator <a>
              ^top-state.world.objects <objs>)
   (<a> ^<arg-name> <arg>)
   (<arg> ^arg-type predicate
         -^arg-status abstract
          ^2 <obj>)
   (<objs> -^object <obj>)
-->
   (<s> ^add-object-to-world <obj>)
}

sp {manage-action-stack*push-action*elaborate*add-object-to-world*object*until-clause
   (state <s> ^name push-action
              ^action-to-push.execution-operator <a>
              ^top-state.world.objects <objs>)
   (<a> ^<arg-name> <arg>)
   (<arg> ^arg-type until-clause
          ^predicate <pred>)
   (<pred> ^{ << 1 2 3 4 5 >> } <obj>)
-->
   (<s> ^add-object-to-world <obj>)
}

sp {manage-action-stack*push-action*elaborate*perception-monitor*changes*add-object*imagined-obj
   (state <s> ^name push-action
              ^add-object-to-world <obj>
              ^top-state.perception-monitor.changes <chgs>)
   (<obj> -^object-instance)
-->
   (<chgs> ^change <c>)
   (<c> ^type new-object
        ^imagined-obj <obj>)
}

sp {manage-action-stack*push-action*elaborate*perception-monitor*changes*add-object*smem-obj
   (state <s> ^name push-action
              ^add-object-to-world <obj>
              ^top-state.perception-monitor.changes <chgs>)
   (<obj> ^object-instance true)
-->
   (<chgs> ^change <c>)
   (<c> ^type new-object
        ^smem-obj <obj>)
}

sp {manage-action-stack*push-action*propose*replace-object-argument*linked-to
   (state <s> ^name push-action
              ^add-object-to-world <obj>
              ^top-state.world.objects.object <wobj>
             -^replaced <obj>)
   (<obj> ^linked-to <wobj>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name replace-object-argument
        ^old-object <obj>
        ^new-object <wobj>)
}

sp {manage-action-stack*push-action*propose*replace-object-argument*same*handle
   (state <s> ^name push-action
              ^add-object-to-world <obj>
              ^top-state.world.objects.object { <wobj> <> <obj> }
             -^replaced <obj>)
   (<obj> ^handle <h>)
   (<wobj> ^handle <h>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name replace-object-argument
        ^old-object <obj>
        ^new-object <wobj>)
}

sp {manage-action-stack*push-action*apply*replace-object-argument*mark*replaced
   (state <s> ^name push-action
              ^operator <o>)
   (<o> ^name replace-object-argument
        ^old-object <obj>)
-->
   (<s> ^replaced <obj>)
}

sp {manage-action-stack*push-action*apply*replace-object-argument*object
   (state <s> ^name push-action
              ^operator <o>
              ^action-to-push.execution-operator <a>)
   (<o> ^name replace-object-argument
        ^old-object <obj>
        ^new-object <wobj>)
   (<a> ^<arg-name> <arg>)
   (<arg> ^arg-type object
          ^id <obj>)
-->
   (<arg> ^id <obj> -
          ^id <wobj>)
}

sp {manage-action-stack*push-action*apply*replace-object-argument*predicate
   (state <s> ^name push-action
              ^operator <o>
              ^action-to-push.execution-operator <a>)
   (<o> ^name replace-object-argument
        ^old-object <obj>
        ^new-object <wobj>)
   (<a> ^<arg-name> <arg>)
   (<arg> ^arg-type predicate
          ^2 <obj>)
-->
   (<arg> ^2 <obj> -
          ^2 <wobj>)
}

sp {manage-action-stack*push-action*apply*replace-object-argument*until-clause
   (state <s> ^name push-action
              ^operator <o>
              ^action-to-push.execution-operator <a>)
   (<o> ^name replace-object-argument
        ^old-object <obj>
        ^new-object <wobj>)
   (<a> ^<arg-name> <arg>)
   (<arg> ^arg-type until-clause
          ^predicate <pred>)
   (<pred> ^{ <num> << 1 2 3 4 5 >> } <obj>)
-->
   (<pred> ^<num> <obj> -
           ^<num> <wobj>)
}

sp {manage-action-stack*push-action*propose*add-predicate-to-world
   (state <s> ^name push-action
              ^action-to-push.execution-operator <a>
              ^top-state.world.predicates.predicate <ts-pred>
              ^top-state.world.objects <objs>
              ^predicate-lti <lti>)
   (<a> ^<arg1-name> <arg1>
        ^<arg2-name> <arg2>)
   (<arg1> ^arg-type object
           ^arg-status real
           ^id <obj1>)
   (<arg2> ^arg-type predicate
           ^arg-status existing
           ^handle <pred-handle>
           ^2 <obj2>)
   (<lti> ^handle <pred-handle>
         -^spatial-relation)
   (<objs> ^object <obj1> <obj2>)
   (<ts-pred> ^handle <pred-handle>)
   -{(<ts-pred> ^instance <i>)
     (<i> ^1 <obj1> ^2 <obj2>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-predicate-to-world
        ^handle <pred-handle>
        ^1 <obj1>
        ^2 <obj2>)
}

sp {manage-action-stack*push-action*propose*add-predicate-to-world*spatial-relation
   (state <s> ^name push-action
              ^action-to-push.execution-operator <a>
              ^top-state.world.predicates.predicate <ts-pred>
              ^top-state.world.objects <objs>
              ^predicate-lti <lti>)
   (<a> ^<arg1-name> <arg1>
        ^<arg2-name> <arg2>)
   (<arg1> ^arg-type object
           ^arg-status real
           ^id <obj1>)
   (<arg2> ^arg-type predicate
           ^arg-status existing
           ^handle <pred-handle>
           ^2 <obj2>)
   (<lti> ^handle <pred-handle>
          ^spatial-relation.handle <sr-handle>)
   (<objs> ^object <obj1> <obj2>)
   (<ts-pred> ^handle <sr-handle>)
   -{(<ts-pred> ^instance <i>)
     (<i> ^1 <obj1> ^2 <obj2>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-predicate-to-world
        ^handle <sr-handle>
        ^1 <obj1>
        ^2 <obj2>)
}

sp {manage-action-stack*push-action*apply*add-predicate-to-world
   (state <s> ^name push-action
              ^operator <o>
              ^top-state.world.predicates.predicate <ts-pred>)
   (<o> ^name add-predicate-to-world
        ^handle <pred-handle>
        ^1 <obj1>
        ^2 <obj2>)
-->
   (<ts-pred> ^instance <i>)
   (<i> ^1 <obj1> ^2 <obj2>)
}

