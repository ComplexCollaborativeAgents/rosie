# When the generate-action-operator substate is finished (no other operators)
#    push the action onto the action-stack
                                                        
sp {generate-action-operator*propose*complete-generate-action-operator
   (state <s> ^name generate-action-operator
              ^action-operator <op>)
-->
   (<s> ^operator <o> +)
   (<o> ^name complete-generate-action-operator)
}

sp {generate-action-operator*apply*complete-generate-action-operator
   (state <s> ^name generate-action-operator
              ^operator.name complete-generate-action-operator
              ^command-message <msg>
              ^action-operator <op>
              ^top-state.action-stack.changes <c>)
   (<msg> -^action-source)
-->
   (<c> ^push <action>)
   (<action> ^execution-operator <op>)
   (<msg> ^pushed true)
}

sp {generate-action-operator*apply*complete-generate-action-operator*task-subaction
   (state <s> ^name generate-action-operator
              ^operator.name complete-generate-action-operator
              ^command-message <msg>
              ^action-operator <op>
              ^top-state.action-stack.changes <c>)
   (<msg> ^action-source <src>)
-->
   (<c> ^push <action>)
   (<action> ^action-source <src>
             ^execution-operator <op>)
   (<msg> ^pushed true)
}

sp {generate-action-operator*apply*complete-generate-action-operator*add*action-operator*to*segment
   (state <s> ^name generate-action-operator
              ^operator.name complete-generate-action-operator
              ^action-operator <op>
              ^top-state.interaction.stack.segment.purpose.parameters <params>)
-->
  (<params> ^action-operator <op>)
}
