############################### argument-info ##############################

## argument-info for messages (say or ask commands)
sp {generate-action-operator*elaborate*argument-info*message
   (state <s> ^name generate-action-operator
              ^command-message <msg>)
   (<msg> ^action.handle << say1 ask1 >>
          ^arg1.sentence <sentence>)
-->
  (<s> ^argument-info <arg-info>)
  (<arg-info> ^arg-name arg1
              ^arg-type object
              ^id <new-obj>)
   (<new-obj> ^handle (make-constant-symbol |obj-hand|)
   	          ^predicates <obj-preds>)
   (<obj-preds> ^category message
                ^sentence <sentence>)
}

## argument-info for objects 
sp {generate-action-operator*elaborate*argument-info*object
   (state <s> ^name generate-action-operator
              ^command-message <msg>)
  (<msg> ^<arg-name> <arg>)
  (<arg> ^item-type object
         -^linked-to)
-->
  (<s> ^argument-info <arg-info>)
  (<arg-info> ^arg-name <arg-name>
              ^arg-type object
              ^id <arg>)
}

# linked objects
sp {generate-action-operator*elaborate*argument-info*object*linked
   (state <s> ^name generate-action-operator
              ^command-message <msg>)
  (<msg> ^<arg-name> <arg>)
  (<arg> ^item-type object
         ^linked-to <other>)
-->
  (<s> ^argument-info <arg-info>)
  (<arg-info> ^arg-name <arg-name>
              ^arg-type object
              ^id <other>)
}

### arg-status
# Information about the status of the argument

# in general - copy from procedural
sp {generate-action-operator*elaborate*argument-info*object*arg-status*from*procedural
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type <any>
               ^procedural.arg-status <status>)
-->
   (<arg-info> ^arg-status <status>)
}

# object arg-status: default = real
sp {generate-action-operator*elaborate*argument-info*object*arg-status*default*real
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type object
              -^procedural.arg-status)
-->
   (<arg-info> ^arg-status real)
}

######################### create-procedural-argument ####################

# If there is an argument-info for an argument not on task-concept-network.procedural,
#   then create it and mark it to be stored

# propose when the argument name isn't on the procedural info
sp {generate-action-operator*propose*create-procedural-argument
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>
              ^task-concept-network.procedural <proc>)
   (<arg-info> ^arg-name <arg-name>
               ^arg-type << object concept predicate >>)
   (<proc> -^<arg-name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-procedural-argument
        ^argument-info <arg-info>)
}

# arg-type object
sp {generate-action-operator*apply*create-procedural-argument*object
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^task-concept-network.procedural <proc>)
   (<o> ^name create-procedural-argument
        ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>
               ^arg-type object
               ^arg-status <status>)
-->
   (<proc> ^<arg-name> <parg>)
   (<parg> ^arg-type object
           ^arg-status <status>
           ^importance unknown
           ^id <new-obj-slot>)
   (<arg-info> ^created-procedural-argument true)
   (<s> ^to-store <proc> <parg>)
}
   




######################### create-operator-argument ####################

##### Creates the proper representation of each argument on to the action-operator

# propose if the argument isn't on the action-operator yet
sp {generate-action-operator*propose*create-operator-argument
   (state <s> ^name generate-action-operator
              ^action-operator <op>
              ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>
              -^created <arg>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
}

sp {generate-action-operator*apply*create-operator-argument*copy*object*arg
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^action-operator <op>)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>
               ^arg-type object
               ^arg-status <status>
               ^id <obj>)
-->
   (<op> ^<arg-name> <arg>)
   (<arg> ^arg-type object
          ^arg-status <status>
          ^id <obj>)
   (<arg-info> ^created <arg>)
}



###################### add-object-reference-info  ############################
sp {generate-action-operator*propose*add-object-reference-info
   (state <s> ^name generate-action-operator
              ^command-message.reference-info <info>
              ^action-operator.<arg-name> <arg>)
   (<arg> ^arg-type object
          ^id <obj>
         -^reference-info.constraint <c>)
   (<info> ^referent <obj>
           ^constraint <c>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-object-reference-info
        ^info <info>
        ^argument <arg>)
}

sp {generate-action-operator*propose*add-object-reference-info*predicate
   (state <s> ^name generate-action-operator
              ^command-message.reference-info <info>
              ^action-operator.<arg-name> <arg>)
   (<arg> ^arg-type predicate
          ^2 <obj>
         -^reference-info.constraint <c>)
   (<info> ^referent <obj>
           ^constraint <c>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-object-reference-info
        ^info <info>
        ^argument <arg>)
}

sp {generate-action-operator*apply*add-object-reference-info*id
   (state <s> ^name generate-action-operator
              ^operator <o>)
   (<o> ^name add-object-reference-info
        ^argument <arg>)
-->
   (<arg> ^reference-info <info>)
}

sp {generate-action-operator*apply*add-object-reference-info*constraint
   (state <s> ^name generate-action-operator
              ^operator <o>)
   (<o> ^name add-object-reference-info
        ^info.constraint <c>
        ^argument <arg>)
   (<arg> ^reference-info <info>)
-->
   (<info> ^constraint <c>)
}



