###################### add-object-reference-info  ############################

sp {construct-task-argument*propose*add-object-reference-info*object
   (state <s> ^name construct-task-argument
              ^command-message.reference-info <ref-info>
              ^argument-info <arg-info>
              ^task-argument <task-arg>)
   (<arg-info> ^arg-type object 
               ^message-arg <marg>)
   (<ref-info> ^referent <marg>
               ^constraint <c>)
   (<task-arg> -^reference-info.constraint <c>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-object-reference-info
        ^reference-info <ref-info>)
}

sp {construct-task-argument*propose*add-object-reference-info*predicate
   (state <s> ^name construct-task-argument
              ^command-message.reference-info <ref-info>
              ^argument-info <arg-info>
              ^task-argument <task-arg>)
   (<arg-info> ^arg-type partial-predicate
               ^message-arg.{2} <obj>)
   (<ref-info> ^referent <obj>
               ^constraint <c>)
   (<task-arg> -^reference-info.constraint <c>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-object-reference-info
        ^reference-info <ref-info>)
}

sp {construct-task-argument*apply*add-object-reference-info*create*root*id
   (state <s> ^name construct-task-argument
              ^operator <o>
              ^task-argument <task-arg>)
   (<o> ^name add-object-reference-info)
-->
   (<task-arg> ^reference-info <new-ref-info>)
}

sp {construct-task-argument*apply*add-object-reference-info*copy*constraint
   (state <s> ^name construct-task-argument
              ^operator <o>
              ^task-argument.reference-info <new-ref-info>)
   (<o> ^name add-object-reference-info
        ^reference-info.constraint <c>)
-->
   (<new-ref-info> ^constraint <c>)
}



