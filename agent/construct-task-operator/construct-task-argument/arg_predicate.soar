############################### argument-info ##############################

## argument-info for predicate arg
sp {generate-action-operator*elaborate*argument-info*predicate*arg
   (state <s> ^name generate-action-operator
              ^command-message <msg>)
  (<msg> ^{ <arg-name> << arg1 arg2 arg3 arg4 arg5 >> } <arg>)
  (<arg> ^item-type predicate
        -^until-clause
         ^handle <handle>
         ^2 <obj2>)
-->
  (<s> ^argument-info <arg-info>)
  (<arg-info> ^arg-name <arg-name>
              ^arg-type predicate
              ^handle <handle>
              ^2 <obj2>)
}

sp {generate-action-operator*elaborate*argument-info*predicate*pred*rel*arg2
   (state <s> ^name generate-action-operator
              ^command-message <msg>)
  (<msg> ^{ << predicate relation >> } <arg>)
  (<arg> ^item-type predicate
        -^until-clause
         ^handle <handle>
         ^2 <obj2>)
-->
  (<s> ^argument-info <arg-info>)
  (<arg-info> ^arg-name arg2
              ^arg-type predicate
              ^handle <handle>
              ^2 <obj2>)
}

sp {generate-action-operator*elaborate*argument-info*predicate*arg2*relation*arg1
   (state <s> ^name generate-action-operator
              ^command-message <msg>)
   (<msg> ^arg2.{2}.relations <arg1>)
   (<arg1> ^handle <handle>
           ^2 <obj1>)
-->
   (<s> ^argument-info <arg-info>)
   (<arg-info> ^arg-name arg1
               ^arg-type predicate
               ^handle <handle>
               ^2 <obj1>)
}



### arg-status
# Information about the status of the argument

# in general - copy from procedural
sp {generate-action-operator*elaborate*argument-info*object*arg-status*from*procedural
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type <any>
               ^procedural.arg-status <status>)
-->
   (<arg-info> ^arg-status <status>)
}

# predicate arg-status: value depends on the type of predicate
sp {generate-action-operator*elaborate*argument-info*predicate*arg-status*existing
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>
              ^predicate-lti <pred-info>)
   (<arg-info> ^arg-type predicate
               ^handle <pred-handle>
              -^procedural.arg-status)
   (<pred-info> ^handle <pred-handle>
                ^relation-type existing)
-->
   (<arg-info> ^arg-status existing)
}

sp {generate-action-operator*elaborate*argument-info*predicate*arg-status*desired
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>
              ^predicate-lti <pred-info>)
   (<arg-info> ^arg-type predicate
               ^handle <pred-handle>
              -^procedural.arg-status)
   (<pred-info> ^handle <pred-handle>
                ^relation-type desired)
-->
   (<arg-info> ^arg-status desired)
}

######################### create-procedural-argument ####################

# If there is an argument-info for an argument not on task-concept-network.procedural,
#   then create it and mark it to be stored

# propose when the argument name isn't on the procedural info
sp {generate-action-operator*propose*create-procedural-argument
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>
              ^task-concept-network.procedural <proc>)
   (<arg-info> ^arg-name <arg-name>
               ^arg-type << object concept predicate >>)
   (<proc> -^<arg-name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-procedural-argument
        ^argument-info <arg-info>)
}

# arg-type predicate
sp {generate-action-operator*apply*create-procedural-argument*predicate
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^task-concept-network.procedural <proc>)
   (<o> ^name create-procedural-argument
        ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>
               ^arg-type predicate
               ^arg-status <status>)
-->
   (<proc> ^<arg-name> <parg>)
   (<parg> ^arg-type predicate
           ^arg-status <status>
           ^importance unknown
           ^id <new-pred-slot>
           ^2 <new-obj-slot>)
   (<arg-info> ^created-procedural-argument true)
   (<s> ^to-store <proc> <parg>)
}


######################### create-operator-argument ####################33


##### Creates the proper representation of each argument on to the action-operator

# propose if the argument isn't on the action-operator yet
sp {generate-action-operator*propose*create-operator-argument
   (state <s> ^name generate-action-operator
              ^action-operator <op>
              ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>
              -^created <arg>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
}

sp {generate-action-operator*apply*create-operator-argument*predicate
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^action-operator <op>)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>
               ^arg-type predicate
               ^arg-status <status>
               ^handle <pred-handle>
               ^2 <obj2>)
-->
   (<op> ^<arg-name> <arg>)
   (<arg> ^arg-type predicate
          ^arg-status <status>
          ^handle <pred-handle>
          ^2 <obj2>)
   (<arg-info> ^created <arg>)
}
