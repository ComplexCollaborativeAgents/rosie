TODO: 

- Fix which predicates are extracted, maybe sync with James? 
  Including making sure predicates are good in the magicbot domain

- game-learning/find-solution - change arm.grabbed

- Make sure tabletop arm and object tracking is ok, and how we hande perception of moving objects and don't delete

# Send the command to svs
#sp {anystate*apply*change-world-state*update-object-pose*svs*copy_node*grabbed
#   (state <s> ^operator <o>
#              ^top-state.svs.command <cmd>)
#   (<o> ^name change-world-state
#        ^update-object-pose <obj-info>)
#   (<obj-info> ^belief-obj.id <bel-id>
#               ^world-obj.predicates.is-grabbed1 grabbed1)
#-->
#   (<cmd> ^copy_transform <copy>)
#   (<copy> ^source robot
#           ^destination <bel-id>
#           ^position yes
#           ^rotation no
#           ^scale no)
#   (<obj-info> ^copy-command <copy>)
#}

- Handle task-objects better, including how we delete them

- Handle current-location and in1(obj, current-location) predicate

#
## Add in predicate for visible object
#sp {anystate*apply*change-world-state*add-object-to-world*visible*add*in*predicate
#   (state <s> ^operator <o>
#              ^top-state.world <world>
#             -^perception-monitor.input-link.self.arm.holding-object <h>)
#   (<o> ^name change-world-state
#        ^add-object-to-world <info>)
#   (<info> ^object <obj>
#           ^is-visible1 visible1)
#   (<obj> ^handle <h>)
#   (<world> ^robot.current-location <cur-loc>
#            ^predicates.predicate <in-pred>)
#   (<in-pred> ^handle in1)
#   -{(<in-pred> ^instance <curi>)
#     (<curi> ^1 <obj> ^2 <cur-loc>)}
#-->
#    (<in-pred> ^instance <i>)
#    (<i> ^1 <obj> ^2 <cur-loc>)
#}
#

