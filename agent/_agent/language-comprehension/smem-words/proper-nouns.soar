smem --add {
           (<rosix> ^spelling |Rosie|
                    ^structure-type ROSIE 
                    ^referent <rosie> 
                    ^number singular)
           (<rosie> ^handle rosie)
}

smem --add {
           (<rosix> ^spelling |rosie|
                    ^structure-type ROSIE  
                    ^referent <rosie> 
                    ^number singular)
           (<rosie> ^handle rosie)
}

smem --add {
           (<rosie> ^prior-word ROSIE
                     ^current-word |,|
                     ^spelling |rosie,|
                     ^structure-type ROSIE
                     ^assigners <rosie1>)
           (<rosie1> ^structure-type ROSIE
                     ^syntactic-structure complement
                     ^semantic-structure agent
                     ^required true)
}

smem --add {
           (<mex> ^spelling |me|
                    ^structure-type PN  
                    ^referent <me> 
                    ^number singular)
           (<me> ^handle me 
                    ^property <prop>
                    ^item-type object)
          (<prop> ^handle person1 #JK problem with multiple handle name instances 
                  ^type person 
                  ^item-type property)
}


smem --add {
           (<alice> ^spelling |alice|
                    ^structure-type PN  
                    ^referent @P4040 
                    ^number singular
                    ^specifier definite # AM: agent should look in semantic memory
                    ^singleton-DP true  # AM: signifies the DP is just a single word, no hierarchy
                    ^converts-to DP)
           (<bob> ^spelling |bob|
                    ^structure-type PN  
                    ^referent @P4041 
                    ^number singular
                    ^specifier definite
                    ^singleton-DP true
                    ^converts-to DP)
         (<charlie> ^spelling |charlie|
                    ^structure-type PN  
                    ^referent @P4042 
                    ^number singular
                    ^specifier definite
                    ^singleton-DP true
                    ^converts-to DP)

}

