###################################################################
#
# interpret-describe-object
#   Occurs when the instructor asks Rosie to describe the said object
#   Construction: Describe the DP-QT

###################################################################

#############################################################
# Apply rule from interpret-action-command
#############################################################

# When the object is parsed correctly
          
sp {interpret-message*apply*interpret-action-command*handle-describe
   (state <s> ^name interpret-message
              ^operator.name interpret-action-command
              ^instructor-message <msg>)
   (<msg> ^arg1 <obj>
          #-^arg1 {<obj2> <> <obj>} # PR - #TODO This is for clarifying which object needs to be selected
          ^action.handle describe)
   (<obj> -^sentence)
   -{ (<msg> ^arg1 {> <obj> <obj2>})}
-->
   (<s> ^new-segment-info <info>
        ^mark-interpreted <msg>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type feature-relation-description
        ^parameters <params>
        ^satisfaction <sat>)
   (<sat> ^dialog-event <de>)
   (<de> ^type explanation
         ^originator agent)
   (<params> ^object <obj>)
}

sp {interpret-message*apply*interpret-action-command*handle-game-action
   (state <s> ^name interpret-message
   			  ^operator.name interpret-action-command
   			  ^instructor-message <msg>)
   (<msg> ^arg1 <arg>
          ^action.handle describe)
   (<arg> ^sentence <sentence>)
-->
   (<s> ^new-segment-info <info>
        ^mark-interpreted <msg>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type agent-game-action-description
        ^parameters <params>
        ^satisfaction <sat>)
   (<sat> ^dialog-event <de>)
   (<de> ^type explanation
         ^originator agent)
   (<params> ^sentence <sentence>
             ^gtype action)
}