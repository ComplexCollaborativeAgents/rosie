sp {transfer-action-goal*elaborate*super-operator
   (state <s> ^name transfer-action-goal
              ^superstate.operator <o>)
    (<o> ^type <type>
         ^structure <st>
         ^handle-name <handle>)
    (<st> ^from <game>)
  -{(<st> ^from {<game2> < <game>})
    (<s> -^top-state.dialog-context.name <game2>)}
  -{(<s> ^top-state.dialog-context.name <game>)}
-->
    (<s> ^gtype <type>
         ^game <game>
         ^retrieve-handle <handle>)
}

sp {transfer-action-goal*learn-predicate*action
    :o-support
   (state <s> ^name transfer-action-goal
              ^gtype action
              ^retrieve-handle <handle>
              ^top-state <ts>)
   (<ts> ^dialog-context <dc> ^interaction.status <status> ^interaction.changes <changes>)
   (<dc> ^structure <pred>)
   (<pred> ^actions <act>)
-->
   (<act> ^retrieve-handle <handle>)
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type simple-message
          ^message-type already-learned-action)
   (<status> ^performed.learning-event <de>)
   (<de> ^type game-name
         ^originator agent)
}

sp {transfer-action-goal*learn-predicate*failure
    :o-support
   (state <s> ^name transfer-action-goal
              ^gtype failure
              ^retrieve-handle <handle>
              ^top-state <ts>)
   (<ts> ^dialog-context <dc> ^interaction.status <status> ^interaction.changes <changes>)
   (<dc> ^structure <pred>)
   (<pred> ^failures <act>)
-->
   (<act> ^retrieve-handle <handle>)
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type simple-message
          ^message-type already-learned-failure)
   (<status> ^performed.learning-event <de>)
   (<de> ^type game-name
         ^originator agent)
}

sp {transfer-action-goal*learn-predicate*goal
    :o-support
   (state <s> ^name transfer-action-goal
              ^gtype goal
              ^retrieve-handle <handle>
              ^top-state <ts>)
   (<ts> ^dialog-context <dc> ^interaction.status <status> ^interaction.changes <changes>)
   (<dc> ^structure <pred>)
   (<pred> ^goals <act>)
-->
   (<act> ^retrieve-handle <handle>)
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type simple-message
          ^message-type already-learned-goal)
   (<status> ^performed.learning-event <de>)
   (<de> ^type game-name
         ^originator agent)
}


#JK IF ASSUMING ONE NAME, don't need to relearn predicate UNCOMMENT ALL BELOW
#sp {transfer-action-goal*learn-predicate*goalacvtion
#   (state <s> ^name transfer-action-goal
#              ^<type> <t>
#              ^gtype <type>)
#-->
#   (<s> ^operator <o> + >)
#   (<o> ^name learn-predicate
#        ^structure (deep-copy <t>)
#        ^type <type>)
#}
#sp {learn-predicate*elaborate*from*transfer-action-goal
#   (state <s> ^name learn-predicate
#              ^top-state.dialog-context.name <name>
#              ^superstate <ss>)
#   (<ss> ^name transfer-action-goal ^operator.structure <t> ^gtype <type>)
#
#-->
#   (<s> ^gtype <type>
#      #  ^retrieve-handle <handle>
#        ^game <name>
#        ^<type> <t>
#        ^main-type <type>)
# }
#
#sp {learn-predicate*elaborate*dialog-context*action
#    :o-support
#   (state <s> ^name learn-predicate
#              ^top-state.dialog-context.structure.actions <act>
#              ^superstate <ss>)
#   (<ss> ^name transfer-action-goal ^retrieve-handle <handle> ^gtype action)
#
#-->
#   (<act> ^retrieve-handle <handle>)
# }
#sp {learn-predicate*elaborate*dialog-context*goal
#    :o-support
#   (state <s> ^name learn-predicate
#              ^top-state.dialog-context.structure.goals <act>
#              ^superstate <ss>)
#   (<ss> ^name transfer-action-goal ^retrieve-handle <handle> ^gtype goal)
#
#-->
#   (<act> ^retrieve-handle <handle>)
# }
#
#sp {learn-predicate*elaborate*dialog-context*failure
#    :o-support
#   (state <s> ^name learn-predicate
#              ^top-state.dialog-context.structure.failures <act>
#              ^superstate <ss>)
#   (<ss> ^name transfer-action-goal ^retrieve-handle <handle> ^gtype failure)
#
#-->
#   (<act> ^retrieve-handle <handle>)
# }
##if suceed store game from in smem and respond with (I know the task
#sp {learn-predicate*elaborate*on-smem*result
#   (state <s> ^name learn-predicate
#              ^operator <o>
#              ^smem.command <sc>
#              ^top-state.dialog-context.name <name>
#              ^superstate <ss>)
#   (<o> -^duplicate-of ^type <type>)
#   (<ss> ^name transfer-action-goal ^superstate.operator.structure <t> ^gtype <type>)
#
#-->
#    (<t> ^from <name>)
#   # (<sc> ^store <t>)
#    (<s> ^stored-transfer <t>)
# }
#sp {learn-predicate*elaborate*transfered-action
#   (state <s> ^name learn-predicate
#              ^operator <o>
#              ^smem.command <sc>
#              ^stored-transfer <t>
#              ^top-state.interaction.status <status>
#              ^top-state.interaction.changes <changes>)
#   (<o> -^duplicate-of ^type action)
#-->
#    (<sc> ^store <t>)
#   (<changes> ^outgoing-message <msg>)
#   (<msg> ^type simple-message
#          ^message-type already-learned-action)
#   (<status> ^performed.learning-event <de>)
#   (<de> ^type game-name
#         ^originator agent)
#}
#sp {learn-predicate*elaborate*transfered-goal
#   (state <s> ^name learn-predicate
#              ^operator <o>
#              ^smem.command <sc>
#              ^stored-transfer <t>
#              ^top-state.interaction.status <status>
#              ^top-state.interaction.changes <changes>)
#   (<o> -^duplicate-of ^type goal)
#-->
#    (<sc> ^store <t>)
#   (<changes> ^outgoing-message <msg>)
#   (<msg> ^type simple-message
#          ^message-type already-learned-goal)
#   (<status> ^performed.learning-event <de>)
#   (<de> ^type game-name
#         ^originator agent)
#}
#
#sp {learn-predicate*elaborate*transfered-failure
#   (state <s> ^name learn-predicate
#              ^operator <o>
#              ^smem.command <sc>
#              ^stored-transfer <t>
#              ^top-state.interaction.status <status>
#              ^top-state.interaction.changes <changes>)
#   (<o> -^duplicate-of ^type failure)
#-->
#    (<sc> ^store <t>)
#   (<changes> ^outgoing-message <msg>)
#   (<msg> ^type simple-message
#          ^message-type already-learned-failure)
#   (<status> ^performed.learning-event <de>)
#   (<de> ^type game-name
#         ^originator agent)
#}