###########################################################
#
# Operator: create-belief-object
#   Creates the belief object in SVS with the given metric info
#
# Operator Structure:
# (<o> ^name create-belief-object
#      ^belief-id <id>
#      ^position <pos>  # must have ^x ^y ^z under each of the prt transforms
#      ^rotation <rot>
#      ^scale <scl>)


##########################################################
# PROPOSALS

# Case: for epmem-obj if it matches a smem object with an existing object-info that has no belief, 
#   Create the belief object
sp {attend-to-new-object*epmem-obj*propose*create-belief-object
   (state <s> ^name attend-to-new-object
              ^source-type epmem-obj
              ^source-obj <src>
              ^smem-obj.handle <handle>
              ^top-state.perception-monitor.object-monitor.object-info <obj-info>)
   (<obj-info> ^object-handle <handle>
               ^belief-id <bel-id>
              -^belief-obj)
   (<src> ^position <pos>
          ^rotation <rot>
          ^scale <scl>)
-->
   (<s> ^operator <o> + >)
   (<o> ^name create-belief-object
        ^belief-id <bel-id>
        ^position <pos>
        ^rotation <rot>
        ^scale <scl>)
}

# Case: for epmem-obj that matches a world object with no belief-obj
sp {attend-to-new-object*epmem-obj*propose*create-belief-object*for*matching*world
   (state <s> ^name attend-to-new-object
              ^source-type epmem-obj
              ^source-obj <src>
              ^world-match-result <obj-info>)
   (<obj-info> ^belief-id <bel-id>
              -^belief-obj)
   (<src> ^position <pos>
          ^rotation <rot>
          ^scale <scl>)
-->
   (<s> ^operator <o> + >)
   (<o> ^name create-belief-object
        ^belief-id <bel-id>
        ^position <pos>
        ^rotation <rot>
        ^scale <scl>)
}

##########################################################
# APPLICATION

# Create the belief object
sp {attend-to-new-object*apply*create-belief-object
   (state <s> ^name attend-to-new-object
              ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name create-belief-object
        ^belief-id <bel-id>
        ^position <pos>
        ^rotation <rot>
        ^scale <scl>)
   (<pos> ^x <px> ^y <py> ^z <pz>)
   (<rot> ^x <rx> ^y <ry> ^z <rz>)
   (<scl> ^x <sx> ^y <sy> ^z <sz>)
-->
   (<cmd> ^add_node <add>)
   (<add> ^id <bel-id>
          ^parent world
          ^geometry box
          ^position <npos>
          ^rotation <nrot>
          ^scale <nscl>
          ^tags <tags>)
   (<npos> ^x <px> ^y <py> ^z <pz>)
   (<nrot> ^x <rx> ^y <ry> ^z <rz>)
   (<nscl> ^x <sx> ^y <sy> ^z <sz>)
   (<tags> ^object-source belief)
}
               
