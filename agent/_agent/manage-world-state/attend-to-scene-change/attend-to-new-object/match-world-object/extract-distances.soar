# Create a filter to find distances from svs-obj to all belief objects
sp {match-world-object*propose*extract-distances
   (state <s> ^name match-world-object
              ^svs-obj
             -^distance-results true)
-->
   (<s> ^operator <o> +)
   (<o> ^name extract-distances)
}

sp {match-world-object*apply*extract-distances*create*distance-filter
   (state <s> ^name match-world-object
              ^operator.name extract-distances
              ^svs-obj.id <svs-id>
              ^top-state.svs.command <svs-cmd>)
-->
   (<s> ^distance-filter <dist>)
   (<dist> ^type distance
           ^a <a>
           ^b <belief>
           ^distance_type centroid)
   (<a> ^type node
        ^id <svs-id>)
   (<belief> ^type tag_select
             ^a <all>
             ^tag_name object-source
             ^tag_value belief)
   (<all> ^type all_nodes)
   (<svs-cmd> ^extract_once <dist>)
}

sp {match-world-object*apply*extract-distances*result*copy*distance*info*candidate
   (state <s> ^name match-world-object
              ^operator.name extract-distances
              ^candidate-set.candidate <cand>
              ^distance-filter.result.record <r>)
   (<cand> ^object-info.belief-obj.id <bel-id>)
   (<r> ^value <d>
        ^params.b <bel-id>)
-->
   (<cand> ^distance <d>)
}

sp {match-world-object*apply*extract-distances*result*mark*distance-results*true
   (state <s> ^name match-world-object
              ^operator.name extract-distances
              ^distance-filter.result <res>)
-->
   (<s> ^distance-results true)
}

