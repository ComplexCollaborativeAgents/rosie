sp {retrospective-learning*propose*copy-action-operator
   (state <s> ^name retrospective-learning
              ^superstate.operator.action-operator <operator>
              ^world <w>
             -^copied-action-operator)

-->
   (<s> ^operator <o> +)
   (<o> ^name copy-action-operator
        ^action-operator <operator>)
}

sp {retrospective-learning*apply*copy-action-operator*create*operator
   (state <s> ^name retrospective-learning
              ^operator <o>)
   (<o> ^name copy-action-operator
        ^action-operator <operator>)
   (<operator> ^action-handle <handle>
              ^name <op-name>)
-->
   (<s> ^action-operator <operator-copy>)
   (<operator-copy> ^action-handle <handle>
                   ^name <op-name>)
}

sp {retrospective-learning*apply*copy-action-operator*mark*copied
   (state <s> ^name retrospective-learning
              ^operator.name copy-action-operator
              ^action-operator <c>)
-->
   (<s> ^copied-action-operator true)
}

sp {retrospective-learning*apply*copy-action-operator*copy*merged*info
   (state <s> ^name retrospective-learning
              ^operator <o>
              ^action-operator <operator>)
   (<o> ^name copy-action-operator
        ^action-operator.merged <m>)
   (<m> ^object1.handle <handle1>
        ^object2.handle <handle2>)
-->
   (<operator> ^merged.<handle1> <handle2>)
}

sp {retrospective-learning*apply*copy-action-operator*copy*object*arg
   (state <s> ^name retrospective-learning
              ^operator <o>
              ^world.objects.object <obj>
              ^action-operator <operator>)
   (<o> ^name copy-action-operator
        ^action-operator.<arg-name> <arg>)
   (<arg> ^arg-type object
          ^id.handle <obj-handle>)
   (<obj> ^handle <obj-handle>)
-->
   (<operator> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type object
              ^id <obj>)
}

sp {retrospective-learning*apply*copy-action-operator*copy*concept*arg
   (state <s> ^name retrospective-learning
              ^operator <o>
              ^action-operator <operator>)
   (<o> ^name copy-action-operator
        ^action-operator.<arg-name> <arg>)
   (<arg> ^arg-type concept
          ^handle <concept-handle>)
-->
   (<operator> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type concept
              ^handle <concept-handle>)
}

sp {retrospective-learning*apply*copy-action-operator*copy*predicate*arg
   (state <s> ^name retrospective-learning
              ^operator <o>
              ^world.objects.object <obj2>
              ^action-operator <operator>)
   (<o> ^name copy-action-operator
        ^action-operator.<arg-name> <arg>)
   (<arg> ^arg-type predicate
          ^handle <pred-handle>
          ^{2}.handle <obj2-handle>)
   (<obj2> ^handle <obj2-handle>)
-->
   (<operator> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type predicate
              ^handle <pred-handle>
              ^2 <obj2>)
}
