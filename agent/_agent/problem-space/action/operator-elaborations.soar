#
sp {action*elaborate*operator*until-clause*from*action-operator
   (state <s> ^problem-space.name action
              ^problem-space.action.type <any>
              ^match-action.matched <o>
              ^match-action.action-operator.until-clause <until>
              ^operator <o> +)
-->
   (<o> ^until-clause <until>)
}

sp {action*elaborate*put-down*relation*from*action-operator
   (state <s> ^problem-space.name action
              ^problem-space.action.type <any>
              ^action-to-match.arg2.handle <rel-handle>
              ^operator <o> +)
   (<o> ^name op_put-down1
        ^arg2 <arg2>)
-->
   (<arg2> ^handle <rel-handle>)
}

sp {action*elaborate*put-down*relation*from*desired
   (state <s> ^problem-space.name action
              ^problem-space.action.type <any>
              ^operator <o> +
              ^desired.predicate <rel-pred>)
   (<rel-pred> ^type relation
               ^handle <rel-handle>
               ^1 <obj1>
               ^2 <obj2>)
   (<o> ^name op_put-down1
        ^arg1.id <obj1>
        ^arg2 <arg2>)
   (<arg2> ^2 <obj2>)
-->
   (<arg2> ^handle <rel-handle>)
}

sp {action*elaborate*action*operator*predicate*default-handle
   (state <s> ^problem-space.name action
              ^problem-space.action.type <any>
              ^operator <o> +)
  (<o> ^name <op-name>
        ^arg2 <arg2>)
   (<arg2> ^arg-type predicate 
           ^default-handle <def>
          -^handle <> <def>)
-->
   (<arg2> ^handle <def>)
}


