sp {action*selection*elaborate*evaluate-operator*default-desired-copy
   (state <s> ^problem-space.name action
              ^operator <o> +)
   (<o> ^name evaluate-operator)
-->
   (<o> ^default-desired-copy yes)
   (<o> ^default-operator-copy yes)
}

################## EXPLORATION ########################

# KIRKMOVE
sp {games*selection*elaborate*evaluate-operator*default-desired-copy
   (state <s> ^problemspace games
              ^operator <o> +)
   (<o> ^name evaluate-operator)
-->
   (<o> ^default-desired-copy yes)
   (<o> ^default-operator-copy yes)
}

sp {action*selection*apply*init-current-evaluation-depth*max
   (state <s> ^problem-space.name action
              ^problem-space.learning.type exploration
              ^top-selection true
              ^superstate.desired.predicate <any>
              ^operator <o>
              ^agent-params.action-search-depth <d>)
   (<o> ^name init-current-evaluation-depth)
-->
   # Change to this set the iterative-deepening max search depth
   (<s> ^max-evaluation-depth <d>)
}

sp {action*selection*apply*init-current-evaluation-depth*zero*no*goal
   (state <s> ^problem-space.name action
              ^problem-space.learning.type exploration
              ^top-selection true
             -^superstate.desired.predicate
              ^operator <o>)
   (<o> ^name init-current-evaluation-depth)
-->
   (<s> ^max-evaluation-depth 0)
}

################## RETROSPECTIVE ######################

sp {action*selection*learning*retrospective*elaborate*current-subaction
   (state <s> ^name selection
              ^problem-space.name action
              ^problem-space.learning.type retrospective
              ^subactions.next <sub>)
-->
   (<s> ^match-action.action-operator <sub>)
}
