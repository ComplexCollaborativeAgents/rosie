### state.deep-copy-subactions

# Support structure used when deep copying a list of subactions
#   Elaborated automatically [see copy-type.soar]

sp {anystate*deep-copy-subactions*elaborate*copy
   (state <s> ^deep-copy-subactions <dcs>)
   (<dcs> ^source <source>)
-->
   (<dcs> ^copy <copy>
          ^copy-subactions-map <map>)
}

sp {anystate*deep-copy-subactions*elaborate*next*subaction
   (state <s> ^deep-copy-subactions <dcs>)
   (<dcs> ^source.next { <src-next-sub> <> none }
          ^copy <copy>
          ^copy-subactions-map <map>)
-->
   (<copy> ^next <new-next-sub>)
   (<map> ^entry <e>)
   (<e> ^source <src-next-sub> 
        ^copy <new-next-sub>)
}

sp {anystate*deep-copy-subactions*elaborate*answer
   (state <s> ^deep-copy-subactions <dcs>)
   (<dcs> ^source.answer <h>
          ^copy <copy>)
-->
   (<copy> ^answer <h>)
}


sp {anystate*deep-copy-subactions*elaborate*next*subaction*none
   (state <s> ^deep-copy-subactions <dcs>)
   (<dcs> ^source.next none
          ^copy <copy>)
-->
   (<copy> ^next none)
}

sp {anystate*deep-copy-subactions*elaborate*subaction*recursively
   (state <s> ^deep-copy-subactions.copy-subactions-map <map>)
   (<map> ^entry <e>)
   (<e> ^source <src-sub>
        ^copy <sub>)
   (<src-sub> ^next {<src-next-sub> <> none })
-->
   (<sub> ^next <new-next-sub>)
   (<map> ^entry <new-e>)
   (<new-e> ^source <src-next-sub>
            ^copy <new-next-sub>)
}

sp {anystate*deep-copy-subactions*elaborate*subaction*none
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <e>)
   (<e> ^source <src-sub>
        ^copy <sub>)
   (<src-sub> ^next none)
-->
   (<sub> ^next none)
}

sp {anystate*deep-copy-subactions*copy*subaction*name
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <e>)
   (<e> ^source <src-sub>
        ^copy <sub>)
   (<src-sub> ^action-handle <handle>)
-->
   (<sub> ^action-handle <handle>)
}

sp {anystate*deep-copy-subactions*copy*subaction*argument*arg-status
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <e>)
   (<e> ^source.<arg-name>.arg-status <status>
        ^copy.<arg-name> <copy-arg>)
-->
   (<copy-arg> ^arg-status <status>)
}

##### COPY OBJECT/LOCATION ARG #####

sp {anystate*deep-copy-subactions*copy*subaction*object*arg
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>
              ^deep-copy-world.copy-objects-map.entry <obj-e>)
   (<sub-e> ^source <src-sub>
            ^copy <sub>)
   (<src-sub> ^<arg-name> <src-arg>)
   (<src-arg> ^arg-type object
              ^id <src-obj>)
   (<obj-e> ^source <src-obj>
            ^copy <obj>)
-->
   (<sub> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type object
              ^id <obj>)
}

sp {anystate*deep-copy-subactions*copy*subaction*object*arg*abstract
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>
             -^deep-copy-world.copy-objects-map.entry.source <src-obj>)
   (<sub-e> ^source <src-sub>
            ^copy <sub>)
   (<src-sub> ^<arg-name> <src-arg>)
   (<src-arg> ^arg-type object
              ^id <src-obj>)
-->
   (<sub> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type object
              ^id <new-obj>)
   (<new-obj> ^item-type object
              ^predicates <preds>)
}

sp {anystate*deep-copy-subactions*copy*subaction*object*arg*abstract*handle
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>
             -^deep-copy-world.copy-objects-map.entry.source <src-obj>)
   (<sub-e> ^source.<arg-name> <src-arg>
            ^copy.<arg-name> <new-arg>)
   (<src-arg> ^arg-type object
              ^id <src-obj>)
   (<src-obj> ^handle <h>)
   (<new-arg> ^id <new-obj>)
   (<new-obj> -^handle <> <h>)
-->
   (<new-obj> ^handle <h>)
}

sp {anystate*deep-copy-subactions*copy*subaction*object*arg*abstract*predicates
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>
             -^deep-copy-world.copy-objects-map.entry.source <src-obj>)
   (<sub-e> ^source.<arg-name> <src-arg>
            ^copy.<arg-name> <new-arg>)
   (<src-arg> ^arg-type object
              ^id <src-obj>)
   (<src-obj> ^predicates.<prop-name> <pred-name>)
   (<new-arg> ^id.predicates <new-preds>)
-->
   (<new-preds> ^<prop-name> <pred-name>)
}

##### COPY CONCEPT ARG #####

sp {anystate*deep-copy-subactions*copy*subaction*concept*arg
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>)
   (<sub-e> ^source <src-sub>
            ^copy <sub>)
   (<src-sub> ^<arg-name> <src-arg>)
   (<src-arg> ^arg-type concept
              ^handle <concept-handle>)
-->
   (<sub> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type concept
              ^handle <concept-handle>)
}

##### COPY PREDICATE ARG #####

sp {anystate*deep-copy-subactions*copy*subaction*predicate*arg
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>
              ^deep-copy-world.copy-objects-map.entry <obj-e>)
   (<sub-e> ^source <src-sub>
            ^copy <sub>)
   (<src-sub> ^<arg-name> <src-arg>)
   (<src-arg> ^arg-type predicate
              ^handle <pred-handle>
              ^2 <src-obj>)
   (<obj-e> ^source <src-obj>
            ^copy <obj>)
-->
   (<sub> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type predicate
              ^handle <pred-handle>
              ^2 <obj>)
}

sp {anystate*deep-copy-subactions*copy*subaction*predicate*arg*abstract
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>
             -^deep-copy-world.copy-objects-map.entry.source <src-obj>)
   (<sub-e> ^source <src-sub>
            ^copy <sub>)
   (<src-sub> ^<arg-name> <src-arg>)
   (<src-arg> ^arg-type predicate
              ^handle <pred-handle>
              ^2 <src-obj>)
-->
   (<sub> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type predicate
              ^handle <pred-handle>
              ^2 <new-obj>)
   (<src-obj> ^item-type object
              ^predicates <preds>)
}

sp {anystate*deep-copy-subactions*copy*subaction*predicate*arg*absract*handle
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>
             -^deep-copy-world.copy-objects-map.entry.source <src-obj>)
   (<sub-e> ^source.<arg-name> <src-arg>
            ^copy.<arg-name> <new-arg>)
   (<src-arg> ^arg-type predicate
              ^2 <src-obj>)
   (<src-obj> ^handle <h>)
   (<new-arg> ^2 <new-obj>)
   (<new-obj> -^handle <> <h>)
-->
   (<new-obj> ^handle <h>)
}

sp {anystate*deep-copy-subactions*copy*subaction*predicate*arg*abstract*predicates
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>
             -^deep-copy-world.copy-objects-map.entry.source <src-obj>)
   (<sub-e> ^source.<arg-name> <src-arg>
            ^copy.<arg-name> <new-arg>)
   (<src-arg> ^arg-type predicate
              ^2 <src-obj>)
   (<src-obj> ^predicates.<prop-name> <pred-name>)
   (<new-arg> ^id.predicates <new-preds>)
-->
   (<new-preds> ^<prop-name> <pred-name>)
}

##### COPY UNTIL-CLAUSE #####

sp {anystate*deep-copy-subactions*copy*until-clause
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>)
   (<sub-e> ^source <src-sub>
            ^copy <sub>)
   (<src-sub> ^until-clause <src-until>)
-->
   (<sub> ^until-clause <new-until>)
}
   
sp {anystate*deep-copy-subactions*copy*until-clause*state*predicate
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>
              ^deep-copy-world.copy-objects-map <objs-map>)
   (<sub-e> ^source.until-clause.predicate <src-pred>
            ^copy.until-clause <new-until>)
   (<src-pred> ^type state
               ^handle <pred-handle>
               ^property-handle <prop-handle>
               ^1 <src-obj>)
   (<objs-map> ^entry <obj-e>)
   (<obj-e> ^source <src-obj>
            ^copy <obj>)
-->
   (<new-until> ^predicate <new-pred>)
   (<new-pred> ^type state
               ^handle <pred-handle>
               ^property-handle <prop-handle>
               ^1 <obj>)
}

sp {anystate*deep-copy-subactions*copy*until-clause*relation*predicate
   (state <s> ^deep-copy-subactions.copy-subactions-map.entry <sub-e>
              ^deep-copy-world.copy-objects-map <objs-map>)
   (<sub-e> ^source.until-clause.predicate <src-pred>
            ^copy.until-clause <new-until>)
   (<src-pred> ^type relation
               ^handle <pred-handle>
               ^1 <src-obj1>
               ^2 <src-obj2>)
   (<objs-map> ^entry <obj1-e> <obj2-e>)
   (<obj1-e> ^source <src-obj1>
            ^copy <obj1>)
   (<obj2-e> ^source <src-obj2>
            ^copy <obj2>)
-->
   (<new-until> ^predicate <new-pred>)
   (<new-pred> ^type relation
               ^handle <pred-handle>
               ^1 <obj1>
               ^2 <obj2>)
}
