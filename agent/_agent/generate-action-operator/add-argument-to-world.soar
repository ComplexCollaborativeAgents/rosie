# Add imagined object to the world
sp {generate-action-operator*propose*add-argument-to-world*object*imagined
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> -^arg-status abstract
               ^obj-source.<name> <src>
              -^<name> <obj>)
   (<src> -^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type imagined-obj
        ^source-obj <src>)
}

# Add imagined object to the world from an until-clause
sp {generate-action-operator*propose*add-argument-to-world*object*imagined*until-clause
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type until-clause
               ^predicate <pred>)
   (<pred> ^obj-source.<name> <src>
          -^<name> <obj>)
   (<src> -^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type imagined-obj
        ^source-obj <src>)
}

# smem object not on the top-state 
#   add the object to the world
sp {generate-action-operator*propose*add-argument-to-world*object*smem
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-status <any>
               ^obj-source.<name> <src>
              -^<name> <obj>)
   (<src> ^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type smem-obj
        ^source-obj <src>)
}


# smem object not on the top-state on an until-clause
#   add the object to the world
sp {generate-action-operator*propose*add-argument-to-world*object*smem*until-clause
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type until-clause
               ^predicate <pred>)
   (<pred> ^obj-source.<name> <src>
           -^<name> <obj>)
   (<src> ^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type smem-obj
        ^source-obj <src>)
}

# add a predicate instance to the topstate world if it doesn't exist
#   but the arg-status is existing
sp {generate-action-operator*propose*add-argument-to-world*predicate
   (state <s> ^name generate-action-operator
              ^argument-info <arg1-info>
              ^argument-info <arg2-info>
              ^top-state.world.predicates.predicate <ts-pred>
              ^predicate-lti <pred-lti>)
   (<arg1-info> ^arg-type object
                ^arg-status real
                ^id <obj1>)
   (<arg2-info> ^arg-type predicate
               ^arg-status existing
               ^handle <pred-handle>
               ^2 <obj2>)
   (<pred-lti> ^handle <pred-handle>
               -^spatial-relation)
   (<ts-pred> ^handle <pred-handle>)
   -{(<ts-pred> ^instance <i>)
     (<i> ^1 <obj1> ^2 <obj2>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type predicate
        ^handle <pred-handle>
        ^1 <obj1>
        ^2 <obj2>)
}
sp {generate-action-operator*propose*add-argument-to-world*predicate*with*spatial-relation
   (state <s> ^name generate-action-operator
              ^argument-info <arg1-info>
              ^argument-info <arg2-info>
              ^top-state.world.predicates.predicate <ts-pred>
              ^predicate-lti <pred-lti>)
   (<arg1-info> ^arg-type object
                ^arg-status real
                ^id <obj1>)
   (<arg2-info> ^arg-type predicate
               ^arg-status existing
               ^handle <pred-handle>
               ^2 <obj2>)
   (<pred-lti> ^handle <pred-handle>
               ^spatial-relation.handle <sr-handle>)
   (<ts-pred> ^handle <sr-handle>)
   -{(<ts-pred> ^instance <i>)
     (<i> ^1 <obj1> ^2 <obj2>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type predicate
        ^handle <sr-handle>
        ^1 <obj1>
        ^2 <obj2>)
}

## Application


## add object argument to world
sp {generate-action-operator*apply*add-argument-to-world*create*add-object*change
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^top-state.perception-monitor.changes <chgs>)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type <type>
        ^source-obj <obj>)
-->
   (<chgs> ^change <c>)
   (<c> ^type new-object
        ^<type> <obj>)
}

## Add predicate argument to world
sp {generate-action-operator*apply*add-argument-to-world*predicate
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^top-state.world.predicates.predicate <ts-pred>)
   (<o> ^name add-argument-to-world
        ^arg-type predicate
        ^handle <pred-handle>
        ^1 <obj1>
        ^2 <obj2>)
   (<ts-pred> ^handle <pred-handle>)
-->
   (<ts-pred> ^instance <i>)
   (<i> ^1 <obj1> ^2 <obj2>)
}
