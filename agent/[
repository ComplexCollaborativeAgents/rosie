# If we have the target-object but don't have its coordinate, query svs for its transform

sp {op_approach*propose*extract-target-transform
   (state <s> ^name op_approach1
              ^agent-params.domain magicbot
              ^problem-space.execution-type external
              ^target-object.svs-obj.id <perc-id>
              ^current-task-segment <seg>)
   (<seg> -^target-coord)
-->
   (<s> ^operator <o> + =)
   (<o> ^name extract-target-transform
        ^target-id <perc-id>)
}

sp {op_approach*apply*extract-target-transform*create*target*transform*filter
   (state <s> ^name op_approach1
              ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name extract-target-transform
        ^target-id <tar-id>)
-->
   (<cmd> ^extract_once <pos> <rot> <scl>)
   (<pos> ^type node_position ^a <node>)
   (<rot> ^type node_position ^a <node>)
               ^a <tar>)
    (<tar> ^type node
           ^id <tar-id>)
    (<s> ^target-transform-filter <tar-xform>)
}

#sp {op_approach*apply*extract-target-transform*copy*result
#   (state <s> ^name op_approach1
#              ^operator.name extract-target-transform
#              ^target-transform-filter <filter>
#              ^top-state.svs.command <cmd>
#              ^current-task-segment <seg>)
#   (<cmd> ^extract_once <filter>)
#   (<filter> ^result.record.value <tar-pos>)
#   (<tar-pos> ^x <tx> ^y <ty>)
#-->
#   (<seg> ^target-coord <coord>)
#   (<coord> ^x <tx> ^y <ty>)
#
#   (<s> ^target-transform-filter <filter> -)
#   (<cmd> ^extract_once <filter> -)
#}
#
