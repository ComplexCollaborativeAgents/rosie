##!
# @file
#
# @created plindes 20150610
# File: next-word.soar
# Author: Peter Lindes
# Created: 10 June 2015
#
# Desc: Receives the next word as requested
#

#    COMMENT OUT THIS PROPOSE RULE TO WORK
#    WITH VERSION 2 OF comprehend-word.
#    Propose an operator to request the word
sp {comprehend*propose*next-word
   (state <s> ^top-state <ts>
              ^problem-space comprehend
              ^input <i>
             -^no-more true
             -^comprehension.done true)
   (<ts> ^io.output-link <output>)
  -(<i> ^comprehended false)
  -(<output> ^request-word complete)
-->
   (<s> ^operator <o> +)
   (<o> ^name next-word
        ^debug-info (concat |Receive the input word that was requested.|))
}

sp {comprehend*apply*next-word*normal
   (state <s> ^top-state <ts>
              ^problem-space comprehend
              ^input <i>
              ^operator <o>)
   (<o> ^name next-word)
   (<ts> ^io.input-link.word <w>
         ^io.output-link <output>
         ^next-word <next-word>)
  -(<w> ^no-more true)
   (<i> ^word <old-w>
        ^count <old-c>
        ^comprehended true)
   (<w> ^word <text>)
-->
   (<i> ^word <old-w> -
        ^word <w>
        ^count <old-c> -
        ^count (+ <old-c> 1)
        ^comprehended true -
        ^comprehended false)
   #    DON'T TRY TO PUT THE WORD ON THE CURRENT STATE DIRECTLY
   #    OR THE GDS WILL BLOW YOU AWAY!!!!
   (write (crlf) (concat |Received word #| (+ <old-c> 2) |: | <text>))
   #	Clean up the output link
   (<output> ^request-word <next-word> -
             ^request-word complete)
   #    Update the word counter
   (<ts> ^next-word <next-word> -
         ^next-word (+ <next-word> 1))
}

#   Start accumulating the text of the sentence.
sp {comprehend*apply*next-word*normal*start-sentence
   (state <s> ^top-state <ts>
              ^problem-space comprehend
              ^input <i>
              ^operator <o>)
   (<o> ^name next-word)
   (<ts> ^io.input-link.word <w>
         ^io.output-link <output>)
  -(<w> ^no-more true)
   (<i> ^content nil)
   (<w> ^content <content>)
-->
   (<i> ^content nil -
        ^content <content>)
}

#   Continue accumulating the text of the sentence.
sp {comprehend*apply*next-word*normal*build-sentence
   (state <s> ^top-state <ts>
              ^problem-space comprehend
              ^input <i>
              ^operator <o>)
   (<o> ^name next-word)
   (<ts> ^io.input-link.word <w>
         ^io.output-link <output>)
  -(<w> ^no-more true)
   (<i> ^content { <sentence> <> nil })
   (<w> ^content <content>)
-->
   (<i> ^content <sentence> -
        ^content (concat <sentence> | | <content>))
}

sp {comprehend*apply*next-word*no-more
   (state <s> ^top-state <ts>
              ^problem-space comprehend
              ^operator <o>)
   (<o> ^name next-word)
   (<ts> ^io.input-link.word <w>)
   (<w> ^no-more true)
-->
   (<s> ^no-more true)
   (write (crlf) (concat |NO MORE INPUT|))
}
