##!
# @file
#
# @created Peter 20150602
# File: comprehend.soar
# Author: Peter Lindes
# Created: 2 June 2015
# Rewritten: 18 May 2017    Version to run within Rosie
#
# Desc: Comprehends a segment of language input
#

#	Propose an operator to comprehend a segment of language
#satisfaction of stack calls comprehension
sp {dialog-event*propose*comprehend
   (state <s> ^name dialog-event
              ^purpose <p>
              ^top-state.agent-params.language-mode lucia
             -^message )    # Quit if a message posted
   (<p> ^type process-sentence ^parameters.sentence <sentence>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name comprehend
        ^sentence <sentence>
        ^debug-info (concat |Comprehend a segment of language input.|))
}
#sp {comprehender*propose*comprehend
#   (state <s> ^superstate nil 
#         	  ^problem-space comprehender
#              ^discourse <d>
#              ^input <i>
#              ^count <count>)
#  -(<s> ^comprehension <c>)
#  -(<i> ^word no-more)
#-->
#   (<s> ^operator <o> +)
#   (<o> ^name comprehend
#        ^comprehension <c>
#        ^count (+ <count> 1)
#   		^debug-info (concat |Comprehend a segment of language input.|))
#   (<c> ^cxn-stack nil
#        ^cxn-set <c-set>
#        ^lex-stack nil
#        ^word-stack nil)
#}

#   Before dropping to the substate, clear out
#   any previous report-comprehension command
sp {comprehender*apply*comprehend*clear-report-comprehension
   (state <s> ^superstate nil 
              ^problem-space comprehender
              ^operator <o>
              ^io.output-link <output>)
   (<o> ^name comprehend)
   (<output> ^report-comprehension <rc>)
-->
   (<output> ^report-comprehension <rc> -)
}

##	This apply rule is just for when the substate is not implemented yet
#sp {comprehender*apply*comprehend
#   (state <s> ^top-state <s> 
#         	  ^problem-space comprehender
#              ^operator <o>)
#   (<o> ^name comprehend)
#-->
#   (<s> ^comprehension <c>)
#}
