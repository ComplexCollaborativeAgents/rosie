#   Soar code produced automatically 
#   from file '..\Lucia\Grammars\Rosie\ecg\x-prepositions.ecg'.

#   AdverbialPreposition construction
sp {comprehend-word*generalize-cxn*AdverbialPreposition*simple
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^<< cxn cxn-new >> <cxn>)
   (<o> ^name << lexical-access match-construction >>)
   (<cxn> ^subcase-of AdverbialPreposition
          ^is <a>)
   (<a> -^a AdverbialPreposition)
-->
   (<a> ^a AdverbialPreposition)
   (<cxn> ^subcase-of AdverbialPreposition -
          ^subcase-of Preposition)
}

#   FROM construction
sp {comprehend-word*apply*lexical-access*FROM-from
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |from|)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name FROM
          ^is <a>
          ^orth |from|
          ^f <form>
          ^m <meaning>
          ^subcase-of AdverbialPreposition)
   (<a> ^a FROM)
}

#   FROM self.m.name <-- "from" constraint
sp {comprehend-word*FROM-constraint*self-m-name*ASSIGN*from
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a FROM
          ^orth |from|
          ^m <l-slot1>)
   (<l-slot1> ^name { <target> <> |from| })
-->
   (<l-slot1> ^name <target> -
              ^name |from|)
}

