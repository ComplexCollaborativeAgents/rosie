#sp {create-condition*elaborate*condition-name
#   (state <s> ^name create-condition
#              ^superstate.operator <so>)
#   (<so> ^name create-condition 
#         ^condition-name <cn>)
#-->
#   (<s> ^condition-name <cn>)
#}
#
#
##if -then subclause object generalization
#exists in create-object need to fix there

#replace functionality of 
#handle-clause predicate,clause
#handle-clause parameter
#handle-property-predicate
#handle-predicate
#handle-subset
#handle-action
#handle-action-predicate
#handle-pref-action

#dont get all working just start simple first
#get basics, 3towers working
#make operator for retrieve
#retrieve-smem-version oerator for each version
#port preferences for create-condition
#make preferences condition.<a>.<x> <c2>, then prefer c2 over c1

sp {create-condition*elaborate*superstate*object-count
   (state <s> ^name create-condition
              ^superstate <ss>)
   (<ss> ^object-count <oc>)
-->
#(interrupt)
#(write (cmd print <ss> -d 3))
   (<s> ^object-count <oc>)
}


sp {create-condition*elaborate*superstate*action-count
   (state <s> ^name create-condition
              ^superstate <ss>)
   (<ss> ^action-count <oc>)
-->
   (<s> ^action-count <oc>)
}

sp {create-condition*elaborate*super-operator*condition
   (state <s> ^name create-condition
              ^superstate.operator <so>)
   (<so> ^name create-condition 
         ^condition <co>)
-->
   (<s> ^clause <co>)
}

sp {create-condition*elaborate*clause*condition-name
   (state <s> ^name create-condition
   		  	 -^param true
   		  	  ^clause <co>)
   (<co> ^<< handle name >> {<cname> <> of1})
-->
   (<s> ^condition-name <cname>)
}
sp {create-condition*elaborate*clause*condition-name*predicate
   (state <s> ^name create-condition
   		  	 -^param true
   		  	  ^clause.predicate <co>)
   (<co> ^<< handle name >> {<cname> <> of1})
-->
   (<s> ^condition-name <cname>)
}

sp {create-condition*elaborate*clause*action
   (state <s> ^name create-condition
   		   	  ^clause <co>)
   (<co> ^action <ac>)
   (<ac> -^handle << is has is1 has1 lose1 lose win win1 of1 >>) #not actual action
-->
   (<s> ^action <ac>)
}
sp {create-condition*elaborate*smem-result*return-type
   (state <s> ^name create-condition
   		  	  ^smem-result.property.handle numeric)
-->
   (<s> ^return-type number)
}

sp {create-condition*elaborate*function*return-type
   (state <s> ^name create-condition
   		  	  ^function <f>)
-->
   (<s> ^return-type number)
}

sp {create-condition*elaborate*clause*parameter*condition-name
   (state <s> ^name create-condition
   		  	  #^param true
   		  	  ^relation <r>)
   (<r> ^<< handle name >> {<cname> <> of1})
-->
   (<s> ^condition-name <cname>)
}

sp {create-condition*elaborate*clause*arg2*relation
   (state <s> ^name create-condition
   		  	  -^param true
   		  	  ^clause.{2} <r>)
   (<r> ^2 <x>)
-->
   (<s> ^relation <r>)
}

sp {create-condition*elaborate*action*condition-name
   (state <s> ^name create-condition
   		  	  ^action <co>)
   (<co> ^<< handle name >> <cname>)
-->
   (<s> ^condition-name <cname>)
}

sp {create-condition*elaborate*clause*equal-to
   (state <s> ^name create-condition
   		  	  ^clause <co>)
   (<co> ^equal-to <eq>)
-->
   (<s> ^equal-to <eq>)
}

sp {create-condition*elaborate*clause*modifier*negative
   (state <s> ^name create-condition
   		  	  ^clause <co>)
   (<co> ^modifier.handle negation)
-->
   (<s> ^negative true)
}

sp {create-condition*elaborate*parameter*modifier*negative
   (state <s> ^name create-condition
   		  	  ^param true
   		  	  ^relation <r>)
   (<r> ^predicates.handle negation)
-->
   (<s> ^negative true)
}

sp {create-condition*elaborate*clause*relation
   (state <s> ^name create-condition
   		  	  #^param true
   		  	  ^clause <co>)
   (<co> ^relation <r>)
-->
   (<s> ^relation <r>)
}
sp {create-condition*elaborate*num-args*3
   (state <s> ^name create-condition
   		  	  ^clause <co>)
   (<co> ^3 <r> -^4)
-->
   (<s> ^num-args 3)
}
sp {create-condition*elaborate*num-args*2
   (state <s> ^name create-condition
   		  	  ^clause <co>)
   (<co> ^2 <r> -^3)
-->
   (<s> ^num-args 2)
}
sp {create-condition*elaborate*predicate*num-args*3
   (state <s> ^name create-condition
   		  	  ^clause.predocate <co>)
   (<co> ^3 <r> -^4)
-->
   (<s> ^num-args 3)
}
sp {create-condition*elaborate*predicate*num-args*2
   (state <s> ^name create-condition
   		  	  ^clause.predicate <co>)
   (<co> ^2 <r> -^3)
-->
   (<s> ^num-args 2)
}

sp {create-condition*elaborate*relation*num-args*3
   (state <s> ^name create-condition
   		  	  ^relation <co>)
   (<co> ^3 <r> -^4)
-->
   (<s> ^num-args 3)
}
sp {create-condition*elaborate*relation*num-args*2
   (state <s> ^name create-condition
   		  	  ^relation <co>)
   (<co> ^2 <r> -^3)
-->
   (<s> ^num-args 2)
}
sp {create-condition*elaborate*num-params
   (state <s> ^name create-condition
   		  	  ^num-args <na>)
-->
   (<s> ^num-params <na>)
}

sp {create-condition*elaborate*param1*rtype
   (state <s> ^name create-condition
              ^param true
              ^parameter.{1} <p1>
   		  	  ^clause <co>)
   (<co> ^rtype <type>)
-->
   (<p1> ^type <type>)
}
sp {create-condition*elaborate*param1*no-rtype
   (state <s> ^name create-condition
              ^args.{1}.rtype <type>
              ^parameter.{1} <p1>)
  -{(<s> ^param true
         ^clause <co>)
    (<co> ^rtype <rt>)}
-->
   (<p1> ^type <type>)
}

sp {create-condition*elaborate*param1*no-rtype*attribute-of
   (state <s> ^name create-condition
              ^condition-type attribute-of
              ^rtype <type>
              ^equal-to.parameter-index <pid>
              -^arg1
              ^parameter.{1} <p1>)
   (<p1> ^param-id <pid>)
-->
   (<p1> ^type <type>)
}
sp {create-condition*elaborate*param2*rtype
   (state <s> ^name create-condition
              ^param true
              ^parameter.{2} <p1>
   		  	  ^relation <r>)
   (<r> ^2 <co>)
   (<co> ^rtype <type>)
-->
   (<p1> ^type <type>)
}
sp {create-condition*elaborate*param2*no-rtype
   (state <s> ^name create-condition
              ^args.{2}.rtype <type>
              ^parameter.{2} <p1>)
  -{(<s> ^param true
         ^relation <rr>)
    (<rr> ^2 <co>)
    (<co> ^rtype <rt>)}
-->
   (<p1> ^type <type>)
}

sp {create-condition*elaborate*param1
   (state <s> ^name create-condition
              ^param true
   		  	  ^clause <co>)
   (<co> ^parameter-index <pi>)
-->
   (<s> ^param1 <pi>)
}
sp {create-condition*elaborate*param2
   (state <s> ^name create-condition
              #^param true
   		  	  ^relation <r>)
   (<r> ^2 <co>)
   (<co> ^parameter-index <pi>)
-->
   (<s> ^param2 <pi>)
}
sp {create-condition*elaborate*parameter*2
   (state <s> ^name create-condition
              ^num-params 2
   		  	  ^param1 <a1>
          	  ^param2 <a2>)
-->
   (<s> ^parameter <a>)
   (<a> ^1 <p1> ^2 <p2>)
   (<p1> ^param-id <a1>)
   (<p2> ^param-id <a2>)
}


sp {create-condition*elaborate*parameter*1
   (state <s> ^name create-condition
              #-^num-params 
   		  	  ^param1 <a1>
          	  -^param2)
-->
   (<s> ^parameter <a>)
   (<a> ^1 <p1>)
   (<p1> ^param-id <a1>)
}

sp {create-condition*elaborate*parameter*2*attribute-of
   (state <s> ^name create-condition
              ^num-params 2
             -^equal-to.formatted
              ^args <aa>
              #^condition-type attribute-of
             -^smem-result.multiple true
   		  	  ^object-count <a1>
          	  ^param2 <a2>)
   (<aa> -^1 ^2 <x>)
-->
   (<s> ^increment-obj-count true)
   (<s> ^parameter <a>)
   (<a> ^1 <p1> ^2 <p2>)
   (<p1> ^param-id <a1> ^type single)
   (<p2> ^param-id <a2>)
}

sp {create-condition*elaborate*parameter*2*attribute-of*set
   (state <s> ^name create-condition
              ^num-params 2
              -^equal-to.formatted
              ^args <aa>
              #^condition-type attribute-of
              ^smem-result.multiple true
   		  	  ^object-count <a1>
          	  ^param2 <a2>)
   (<aa> -^1 ^2 <x>)
-->
   (<s> ^increment-obj-count true)
   (<s> ^parameter <a>)
   (<a> ^1 <p1> ^2 <p2>)
   (<p1> ^param-id <a1> ^type set)
   (<p2> ^param-id <a2>)
}

sp {create-condition*elaborate*parameter*3
   (state <s> ^name create-condition
              ^num-params 3
   		  	  ^param1 <a1>
          	  ^param2 <a2>
              ^param3 <a3>)
-->
   (<s> ^parameter <a>)
   (<a> ^1 <p1> ^2 <p2> ^3 <p3>)
   (<p1> ^param-id <a1>)
   (<p2> ^param-id <a2>)
   (<p3> ^param-id <a3>)
}

sp {create-condition*elaborate*rtype*parameter
   (state <s> ^name create-condition
              ^parameter.{1}.type <type>)
-->
   (<s> ^rtype <type>)
}

sp {create-condition*elaborate*rtype*set
   (state <s> ^name create-condition
              ^clause.predicates.multiple true
              -^parameter.{1} <r>)
-->
   (<s> ^rtype set)
}

sp {create-condition*elaborate*rtype*no-parameter
   (state <s> ^name create-condition
              ^args.{1}.rtype <type>
              -^clause.predicates.multiple true
              -^parameter.{1} <r>)
-->
   (<s> ^rtype <type>)
}

sp {create-condition*elaborate*param1*action
   (state <s> ^name create-condition
              #^action <a>
   		  	  ^clause.<< 1 arg1 >> <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param1 <pa>)
}
sp {create-condition*elaborate*param2*action
   (state <s> ^name create-condition
              ^action <a>
   		  	  ^clause.arg2.{2} <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param2 <pa>)
}
sp {create-condition*elaborate*param2*predicate
   (state <s> ^name create-condition
   		  	  ^clause.predicate.{2} <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param2 <pa>)
}

sp {create-condition*elaborate*param2*2
   (state <s> ^name create-condition
   		  	  ^clause.{2} <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param2 <pa>)
}
sp {create-condition*elaborate*param3*predicate
   (state <s> ^name create-condition
   		  	  ^clause.predicate.{3} <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param3 <pa>)
}
sp {create-condition*elaborate*action*verb-prep
   (state <s> ^name create-condition
              ^action <a>
   		  	  ^clause.arg2.handle <vp>)
-->
   (<s> ^verb-prep <vp>)
}

sp {create-condition*elaborate*arg1*formatted*equal-to*state-pair
   (state <s> ^name create-condition
              -^param true
              ^condition-type state-pair
              ^equal-to <co>
   		  	  ^clause <c>)
   (<c> -^1 -^arg1)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^arg1 <f>)
}


sp {create-condition*elaborate*param1*formatted*equal-to*state-pair
   (state <s> ^name create-condition
              -^param true
              ^condition-type state-pair 
              ^equal-to <co>
   		  	  ^clause <c>)
   (<c> -^1 -^arg1)
   (<co> ^parameter-index <id>)
-->
   (<s> ^param1 <id>)
}

sp {create-condition*elaborate*param1*formatted*equal-to*attribute-of
   (state <s> ^name create-condition
              ^condition-type attribute-of
              ^equal-to <co>)
   (<co> ^parameter-index <id>)
-->
   (<s> ^param1 <id>)
}
sp {create-condition*elaborate*rtype*formatted*equal-to*attribute-of
   (state <s> ^name create-condition
              ^condition-type attribute-of
              ^equal-to <co>)
   (<co> ^formatted <f>)
   (<f> ^rtype <rtype>)
 -{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^rtype <rtype>)
}

sp {create-condition*elaborate*arg1*formatted*parameter
   (state <s> ^name create-condition
              ^param true
   		  	  ^clause <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^arg1 <f>)
}

sp {create-condition*elaborate*arg1*formatted*predicate
   (state <s> ^name create-condition
             -^action
              -^param true
   		  	  ^clause.<< 1 arg1 >> <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^arg1 <f>)
}

sp {create-condition*elaborate*arg2*formatted*predicate*2
   (state <s> ^name create-condition
             -^action
              -^param true
   		  	  ^clause.<< 2 arg2 >> <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^arg2 <f>)
}

sp {create-condition*elaborate*arg2*formatted*predicate
   (state <s> ^name create-condition
             -^action
              -^param true
   		  	  ^clause.predicate.{2} <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^arg2 <f>)
}
sp {create-condition*elaborate*arg3*formatted*predicate
   (state <s> ^name create-condition
             -^action
              -^param true
   		  	  ^clause.predicate.{3} <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^arg3 <f>)
}

sp {create-condition*elaborate*arg2*formatted*parameter
   (state <s> ^name create-condition
              #^param true
   		  	  ^relation <r>)
   (<r> ^2 <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^arg2 <f>)
}

sp {create-condition*elaborate*args*2
   (state <s> ^name create-condition
              ^num-args 2
   		  	  ^arg1 <a1>
          	  ^arg2 <a2>)
-->
   (<s> ^args <a>)
   (<a> ^1 <a1> ^2 <a2>)
}

sp {create-condition*elaborate*args*1
   (state <s> ^name create-condition
              -^num-args
   		  	  ^arg1 <a1>
          	  -^arg2 )
-->
   (<s> ^args <a>)
   (<a> ^1 <a1>)
}
sp {create-condition*elaborate*args*1*function
   (state <s> ^name create-condition
              ^num-args 2
             -^param true
             # ^condition-type attribute-of
   		  	  -^arg1
          	  ^arg2 <a2>)
-->
   (<s> ^args <a>)
   (<a> ^2 <a2>)
}

sp {create-condition*elaborate*args*3
   (state <s> ^name create-condition
              ^num-args 3
   		  	  ^arg1 <a1>
          	  ^arg2 <a2>
              ^arg3 <a3>)
-->
   (<s> ^args <a>)
   (<a> ^1 <a1> ^2 <a2> ^3 <a3>)
}


sp {create-condition*elaborate*clause*parameter
   (state <s> ^name create-condition
   		  	  ^superstate.parameter <co>
   		  	  ^clause <co>)
-->
   (<s> ^param true)
}

#instead should see if smem has info (will do version that is state pair and possibly concept
#look at smem, might not be extracted yet...
sp {create-condition*elaborate*state-pair
   (state <s> ^name create-condition
   		  	  ^superstate.superstate.world.predicates.predicate.handle <name>
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type state-pair ^condition-attribute prepositions)
}
sp {create-condition*elaborate*not*state-pair
   (state <s> ^name create-condition
   		  	 -^superstate.superstate.world.predicates.predicate.handle <name>
   		  	  ^condition-name <name>)
-->
   (<s> ^not state-pair)
}
sp {create-condition*elaborate*not*attribute
   (state <s> ^name create-condition
   		  	 -^superstate.superstate.world.objects.object.predicates.<name>
             -^superstate.superstate.world.objects.object.predicates.<x> <name>
   		  	  ^condition-name <name>)
-->
   (<s> ^not attribute)
}
sp {create-condition*elaborate*type*concept
   (state <s> ^name create-condition
             -^action
   		  	  ^not attribute
          	  ^not state-pair
             -^condition-type attribute-of
             -^smem-result.function
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type concept)
}

sp {create-condition*elaborate*function
   (state <s> ^name create-condition
              ^smem-result.function <f>)
-->
   (<s> ^function <f>)
 }

sp {create-condition*elaborate*type*function
   (state <s> ^name create-condition
              ^smem-result.function <f>
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type function)
}
sp {create-condition*elaborate*attribute*concept
   (state <s> ^name create-condition
             -^action
   		  	  ^condition-type concept
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-attribute predicate)
}

sp {create-condition*elaborate*attribute*concept*action
   (state <s> ^name create-condition
              ^action <a>
   		  	  ^condition-type concept
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-attribute action)
}

sp {create-condition*elaborate*attribute*property
   (state <s> ^name create-condition
   		  	  ^smem-result <ss>
              ^smem-result.property <prop>
			  ^condition-type attribute)
   (<prop> ^handle <att> ^item-type property)
-->
#(interrupt)
(write (cmd print <ss> -d 3))
   (<s> ^condition-attribute <att>)
}

sp {create-condition*elaborate*primitive*type*attribute
   (state <s> ^name create-condition
   		  	  ^superstate.superstate.world.objects.object.predicates.<name>
             -^clause.handle << of of1 >>
             -^relation.handle << of of1 >>
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type attribute)
}
sp {create-condition*elaborate*primitive*type*attribute*2
   (state <s> ^name create-condition
   		  	  ^superstate.superstate.world.objects.object.predicates.<x> <name>
             -^clause.handle << of of1 >>
             -^relation.handle << of of1 >>
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type attribute)
}
#sp {create-condition*elaborate**type*not*attribute-of
#   (state <s> ^name create-condition
#   		  	  ^condition-name <name>)
#   -{(<s> ^relation.handle << of of1 >>)}
#   -{(<s> ^clause.handle << of of1 >>)}
#-->
#   (<s> ^not attribute-of)
#}

sp {create-condition*elaborate*type*attribute-of
   (state <s> ^name create-condition
   		  	  ^superstate.superstate.world.objects.object.predicates.<name>
          	  ^relation.handle << of of1 >>
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type attribute-of)
}
sp {create-condition*elaborate*type*attribute-of*clause
   (state <s> ^name create-condition
   		  	  ^superstate.superstate.world.objects.object.predicates.<name>
          	  ^clause.handle << of of1 >>
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type attribute-of)
}

sp {create-condition*elaborate*primitive*attribute*category
   (state <s> ^name create-condition
   		  	  ^smem-result.property <p>
   		  	  ^type attribute)
-->
   (<s> ^condition-attribute <p>)
}

sp {create-condition*elaborate*condition
   (state <s> ^name create-condition)
-->
   (<s> ^condition <c>)
}

#######################
###    smem-query   ###
#######################
#hmm maybe do this level above?
#or below...
#sp {create-condition*elaborate*smem-query
#   (state <s> ^name create-condition
#              ^smem.command <c>
#              ^condition-name <handle>)
#-->
#   (<c> ^query <cue>
#        ^link-to-ltm yes #need for prohibit#no#only for latest 9.6 dev
#        ^depth 5)
#   (<cue> ^handle <handle>)
#}
## copy up ltm so can use in prohibit for next version, for each condition create all possible here?, 
## but do args while building conditions so need to know which to connect to...
##figure out multiple versions later?
#sp {create-condition*elaborate*smem-query*result
#   (state <s> ^name create-condition
#              ^smem.results.handle <cn>)
#-->
#   (<s> ^condition-handle <cn>)
#}
sp {create-condition*propose*smem-version-retrieve
   (state <s> ^name create-condition
              ^condition <c>
              ^condition-name <handle>)
 -{(<s> ^smem-result <x>)}
-->
   (<s> ^operator <o> + >)
   (<o> ^name smem-version-retrieve
	    ^handle <handle>
	    ^condition <c>)
}
sp {smem-version-retrieve*elaborate*smem-query
   (state <s> ^name smem-version-retrieve
              ^smem.command <c>
              ^superstate.operator.handle <handle>)
-->
   (<c> ^query <cue>
        ^link-to-ltm yes #need for prohibit#no#only for latest 9.6 dev
        ^depth 5)
   (<cue> ^handle <handle>)
}
sp {smem-version-retrieve*elaborate*smem-query*result
:o-support
   (state <s> ^name smem-version-retrieve
              ^superstate <ss>
              ^smem.result.retrieved <rr>)
   (<rr> ^handle <cn>)
-->
   (<ss> ^condition-handle <cn>
         ^smem-result <rr>)
}
##########################
#####   Applications  ####
##########################
#todo
#maybe create multiple conditions and have that flagged with version numbers?
#bias here for version number?
sp {create-condition*apply*create-name
   (state <s> ^name create-condition
			  ^operator <o>
			  ^condition <c>
     		-^smem-result.function
              ^condition-handle <handle>)
   (<o> ^name create-name
   		^handle <handle>)
-->
   #(write (cmd print <o> -d 3))
   (<c> ^name <handle>)
}
sp {create-condition*apply*create-name*function
   (state <s> ^name create-condition
			  ^operator <o>
			  ^condition <c>
     		  ^smem-result.function <f>
              ^condition-handle <handle>)
   (<f> ^handle <name> ^function <func>)
   (<o> ^name create-name
   		^handle <handle>)
-->
#(write (cmd print <o> -d 3))
#(interrupt)
   (<c> ^name <name> ^function <func>)
}

sp {create-condition*apply*create-result
   (state <s> ^name create-condition
			  ^operator <o>)
   (<o> ^name create-result
   		^condition <c>)
-->
   (<c> ^result <r>)
   (<r> ^set <rs>)
}

sp {create-condition*apply*create-negative
   (state <s> ^name create-condition
   		  	  ^negative <n>
			  ^operator <o>)
   (<o> ^name create-negative
   		^condition <c>)
-->
   (<c> ^negative <n>)
}

sp {create-condition*apply*create-negative*default
   (state <s> ^name create-condition
   		  	  -^negative 
			  ^operator <o>)
   (<o> ^name create-negative
   		^condition <c>)
-->
   (<c> ^negative false)
}

sp {create-condition*apply*create-attribute
   (state <s> ^name create-condition
   		  	  ^condition-attribute <h>
			  ^operator <o>)
   (<o> ^name create-attribute
   		^condition <c>)
-->
   (<c> ^attribute <h>)
}

sp {create-condition*apply*create-type
   (state <s> ^name create-condition
   		  	  ^condition-type <h>
			  ^operator <o>)
   (<o> ^name create-type
   		^condition <c>)
-->
   (<c> ^type <h>)
}

sp {create-condition*apply*create-rtype
   (state <s> ^name create-condition
   		  	  ^rtype <rt>
			  ^operator <o>)
   (<o> ^name create-rtype
   		^condition <c>)
-->
   (<c> ^rtype <rt>)
}

sp {create-condition*apply*create-return-type
   (state <s> ^name create-condition
   		  	  ^return-type <rt>
			  ^operator <o>)
   (<o> ^name create-return-type
   		^condition <c>)
-->
   (<c> ^return-type <rt>)
}

sp {create-condition*apply*create-args
   (state <s> ^name create-condition
   		  	  ^args <ar>
			  ^operator <o>)
   (<o> ^name create-args
   		^condition <c>)
-->
   (<c> ^args <ar>)
}

sp {create-condition*apply*interrupt
   (state <s> ^name create-condition
   		  	  ^condition <c>
			  #^function <f>
			  ^condition-name larger-than1
			  ^operator <o>)
   (<o> ^name complete)
-->
#(write (cmd print <c> -d 5))
#(write (cmd matches))
#(interrupt)
}

sp {wait*apply*interrupt
   (state <s> #^superstate.name learn-condition
   		  	  ^superstate.superstate.name create-from-parse
   		  	  #^superstate.superstate.superstate.superstate.predicate.nlp-set <ss>
   		  	  ^superstate.superstate <ss>
			  #^condition <c>
			  #^function <f>
			  #^condition-name larger-than1
			  ^operator <o>)
   (<o> ^name wait)
-->
(write (cmd print <ss> -d 4))
(write (cmd matches))
(interrupt)
}

sp {create-type*apply*interrupt
   (state <s> #^superstate.superstate.name retrieve-predicate-structure
   		  	  ^superstate.name create-type
             ^superstate.superstate <ss>)
   		  	  #^superstate.superstate.superstate.operator <oo> +)
   		  	  #^superstate.superstate.superstate.nlp <ss>)
-->
(interrupt)
(write (cmd print <ss> -d 3))
#(write (cmd matches))
#(write (cmd print <oo> -d 15))
#(write (cmd pref <ss>))
}

sp {create-condition*apply*create-parameter
   (state <s> ^name create-condition
   		  	  ^parameter <p>
			  ^operator <o>)
   (<o> ^name create-parameter
   		^condition <c>)
-->
   (<c> ^parameter <p>)
}

sp {create-condition*apply*create-parameter*none
   (state <s> ^name create-condition
   		  	  -^parameter
			  ^operator <o>)
   (<o> ^name create-parameter
   		^condition <c>)
-->
   (<c> ^parameter <p>)
}

sp {create-condition*apply*complete
   (state <s> ^name create-condition
             -^relation
             -^action
   		  	  ^clause <c>
              ^condition <co>
			  ^superstate <ss>
			  ^operator <o>)
   (<o> ^name complete)
-->
   (<c> ^formatted <co>)
   (<ss> ^nlp <co>)
}

sp {create-condition*apply*complete*update-object-count
   (state <s> ^name create-condition
             -^action
              ^increment-obj-count true
   		  	  ^object-count <oc>
          	  ^clause <c>
			  ^superstate <ss>
			  ^operator <o>)
   (<o> ^name complete)
   (<ss> ^object-count <oc>)
-->
   (<c> ^parameter-index <oc>) #hmm not sure if best
   (<ss> ^object-count <oc> -)
   (<ss> ^object-count (+ <oc> 1))
}

sp {create-condition*apply*complete*parameter
   (state <s> ^name create-condition
              ^relation <c>
              ^clause <cc>
             -^action
              ^condition <co>
			  ^superstate <ss>
			  ^operator <o>)
   (<o> ^name complete)
-->
   (<c> ^formatted <co>)
   (<cc> ^formatted <co>)
   (<ss> ^nlp <co>)
}

##check efficiency change
sp {create-condition*apply*complete*update*parameter*formatted
   (state <s> ^name create-condition
             -^action
              ^condition <co>
			  ^superstate <ss>
			  ^operator <o>)
   (<o> ^name complete)
   (<ss> ^parameter <p>)
   (<p> ^parameter-index <pi>)
   (<co> ^parameter.{1}.param-id <pi>)
-->
   (<p> ^formatted <co>)
}

sp {create-condition*apply*create-action*2args
   (state <s> ^name create-condition
              ^action <a>
              ^action-count <an>
              ^condition-handle <handle>
			  ^superstate <ss>
			  #^linkstate <ls>
     		  ^param1 <pa>
         	  ^param2 <pa2>
              ^clause <cl>
              ^verb-prep <vp>
			  ^operator <o>)
   (<o> ^name create-action)
   (<a> ^procedural <pp>)
   (<pp> ^arg1 <pp1> ^arg2 <pp2>)
   (<ss> ^action-count <an> ^nlp-set.verb-structure <va2>)
-->
#(interrupt)
   (<cl> ^formatted true)
   (<ss> ^action-count <an> -)
   (<ss> ^action-count (+ <an> 1))
   (<ss> ^verb-structure <va2>)
#  (<ls> ^verb-structure <va2>)
   (<va2> ^<an> <va>)
   (<va> ^verb-name <handle> ^verb-prep <vp> ^1 <pa> ^2 <pa2>)
   (<a> ^formatted true) 
}



##########################
#####   Proposals    #####
##########################
sp {create-condition*propose*create-name
   (state <s> ^name create-condition
              ^condition <c>
              ^condition-handle <handle>)
 -{(<c> ^name <n>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name create-name
	    ^handle <handle>
	    ^condition <c>)
}

sp {create-condition*propose*create-action
   (state <s> ^name create-condition
              ^action <a>
              ^condition <c>)
-->
   (<s> ^operator <o> +)
   (<o> ^name create-action
        ^action <a>
	    ^condition <c>)
}

sp {create-condition*propose*create-negative
   (state <s> ^name create-condition
              ^condition <c>)
 -{(<c> ^negative <n>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name create-negative
	    ^condition <c>)
}

sp {create-condition*propose*create-rtype
   (state <s> ^name create-condition
              ^condition <c>)
 -{(<c> ^rtype <n>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name create-rtype
	    ^condition <c>)
}

sp {create-condition*propose*create-parameter
   (state <s> ^name create-condition
              ^condition <c>)
 -{(<c> ^parameter <n>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name create-parameter
	    ^condition <c>)
}

sp {create-condition*propose*create-args
   (state <s> ^name create-condition
              ^condition <c>)
 -{(<c> ^args <n>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name create-args
	    ^condition <c>)
}

sp {create-condition*propose*create-attribute
   (state <s> ^name create-condition
              ^condition-attribute <ac>
              ^condition <c>)
 -{(<c> ^attribute <n>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name create-attribute
	    ^condition <c>)
}

sp {create-condition*propose*create-type
   (state <s> ^name create-condition
              ^condition <c>)
 -{(<c> ^type <n>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name create-type
	    ^condition <c>)
}

sp {create-condition*propose*create-return-type
   (state <s> ^name create-condition
              ^return-type <rt>
              ^condition <c>)
 -{(<c> ^return-type <n>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name create-return-type
	    ^condition <c>)
}

sp {create-condition*propose*create-result
   (state <s> ^name create-condition
              ^condition <c>)
 -{(<c> ^result <n>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name create-result
	    ^condition <c>)
}

sp {create-condition*propose*complete
   (state <s> ^name create-condition
              ^condition <c>)
# -{(<c> ^formatted <n>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name complete)
}