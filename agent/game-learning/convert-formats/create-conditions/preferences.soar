####################################
## create-from-parse preferences  ##
####################################
sp {prefer*create-object*over*input-object*create-from-parse
   (state <s> ^name create-from-parse
              ^<< output-object-1 input-object-2 input-object-1 >> <p>
              ^operator <o1> +)
   (<o1> ^name create-object
         ^parameter <p>)
-->
   (<s> ^operator <o1> >)
}
#bias preference for order of mention hack, want real order
sp {prefer*create-object*lower*handle*create-from-parse
   (state <s> ^name create-from-parse
              -^input-object-1 <p>
              -^input-object-2 <p>
              -^output-object-1 <p>
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-object ^parameter.handle {<h1> < <h2>})
   (<o2> ^name create-object ^parameter <p>)
   (<p> ^handle <h2>)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-object*over*create-object*input-object*create-from-parse
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^<< output-object-1 input-object-1 >> <p>
              ^input-object-2 <p2>
              ^operator <o2> +)
   (<o1> ^name create-object ^parameter <p>)
   (<o2> ^name create-object ^parameter <p2>)
-->
   (<s> ^operator <o1> > <o2>)
}


#sp {preference*create-object*dispref*unary-predicate
#   (state <s> ^name create-object
#              ^operator <o> +)
#   (<o> ^name unary-predicate
#        ^attribute << relation property >>)
#-->
#   (<s> ^operator <o> <)
#}
#sp {preference*create-object*prefer*unary-predicate*over*complete
#   (state <s> ^name create-object
#              ^operator <o> +
#              ^operator <o2> +)
#    (<o> ^name unary-predicate)
#    (<o2> ^name complete)
#-->
#   (<s> ^operator <o> > <o2>)
#}

######################################################################
#####################################################################

sp {prefer*create-condition*over*create-condition*child*create-from-parse
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition
   		 ^condition <c>)
   (<o2> ^name create-condition
   		 ^condition.<x> <c>)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-condition*over*create-condition*child*create-from-parse*d2
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition
   		 ^condition <c>)
   (<o2> ^name create-condition
   		 ^condition.<x>.<y> <c>)
-->
   (<s> ^operator <o1> > <o2>)
}

####################################
## create-conditions preferences  ##
####################################
sp {prefer*smem-version-retrieve*over*create-name*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name smem-version-retrieve)
   (<o2> ^name create-name)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*smem-version-retrieve*over*create-action*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name smem-version-retrieve)
   (<o2> ^name create-action)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-action*over*rest*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-action)
   (<o2> -^name smem-version-retrieve -^name create-action)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-name*over*create-type*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-name)
   (<o2> ^name create-type)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-type*over*create-attribute*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-type)
   (<o2> ^name << create-negative create-attribute >>)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-attribute*over*create-negative*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-attribute)
   (<o2> ^name create-negative)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-negative*over*create-args*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-negative)
   (<o2> ^name create-args)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-args*over*create-parameter*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-args)
   (<o2> ^name create-parameter)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-parameter*over*create-rtype*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-parameter)
   (<o2> ^name create-rtype)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-rtype*over*create-return-type*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-rtype)
   (<o2> ^name << create-result create-return-type >>)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-return-type*over*create-result*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-return-type)
   (<o2> ^name create-result)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-return-type*over*complete*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-result)
   (<o2> ^name complete)
-->
   (<s> ^operator <o1> > <o2>)
}