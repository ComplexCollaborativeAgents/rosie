sp {soar-difference*propose*complete
   (state <s> ^name soar-difference
              ^instance <instance>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^instance <instance>)
}
sp {soar-difference*apply*complete
   (state <s> ^name soar-difference
              ^superstate.condition.result.set <res>
              ^operator <op>
              ^instance <s1>)  
   (<op> ^name complete ^instance <s1>)
-->
  (<res> ^instance <s1>)
}

#sp {soar-difference*apply
#    (state <s1> ^gtype <gtype> ^list <l1> ^<gtype> <a1>)
#    (<l1> ^game <g1>)
#    (<a1> ^condition <c1>)
#    (<c1> ^result.set.instance <p2>)
#    (<p2> ^soar_difference <thing>)
#-->
#   (<p2> ^1 (difference <thing>))
#}

sp {soar-difference*numeric-evaluate*value
   (state <s> ^name soar-difference
              ^linkstate <ls>
            #  ^superstate <ss>
              #^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^result.set.instance.{1} <set>)# ^parameter.result.link.link.<s2>.<o2>.<elem2> holder)  
   (<set> ^<n1> <num1> ^<n2> {<num2> > <num1>}) 
-{(<set> ^{<n3> <> <n1> <> <n2>} <y>)}
-->
   (<s> ^instance <p>)
   #(<p> ^soar_difference <set>)#<arg1> (difference <set>))
   (<p> ^1 (- <num2> <num1>))
}

sp {soar-difference*numeric-evaluate*value*equal
   (state <s> ^name soar-difference
              ^linkstate <ls>
            #  ^superstate <ss>
              #^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^result.set.instance.{1} <set>)# ^parameter.result.link.link.<s2>.<o2>.<elem2> holder)  
   (<set> ^<n1> <num1> ^{<n2> > <n1>} <num1>) 
-{(<set> ^{<n3> <> <n1> <> <n2>} <y>)}
-->
   (<s> ^instance <p>)
   #(<p> ^soar_difference <set>)#<arg1> (difference <set>))
   (<p> ^1 (- <num1> <num1>))
}

sp {soar-difference*numeric-evaluate*value*instance
   (state <s> ^name soar-difference
            #  ^superstate <ss>
              ^linkstate <ls>
              #^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-difference)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^result.set.instance.{1} <obja>)
   (<obja> ^<n1> <num1> ^<n2> {<num2> > <num1>}) 
-{(<obja> ^{<n3> <> <n1> <> <n2>} <y>)}
-->
#   (interrupt)
#   (<ss> ^result <res>)
   (<s> ^instance <instance>)
   #(<instance> ^2 <obja> ^soar_difference <obja>)
   (<instance> ^2 <obja> ^1 (- <num2> <num1>))
}

sp {soar-difference*numeric-evaluate*value*instance*equal
   (state <s> ^name soar-difference
            #  ^superstate <ss>
              ^linkstate <ls>
              #^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-difference)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^result.set.instance.{1} <obja>)
   (<obja> ^<n1> <num1> ^{<n2> > <n1>} <num1>) 
-{(<obja> ^{<n3> <> <n1> <> <n2>} <y>)}
-->
#   (interrupt)
#   (<ss> ^result <res>)
   (<s> ^instance <instance>)
   #(<instance> ^2 <obja> ^soar_difference <obja>)
   (<instance> ^2 <obja> ^1 (- <num1> <num1>))
}