
### VARIATION 1:
# Contains an action model for what the button on the watercooler does (dispenses water)

sp {problem-space*action*internal*apply*op_press1*watercooler*button
   (state <s> ^problem-space.name action
              ^problem-space.execution-type internal
              ^operator <o>
              ^world.predicates.predicate <in-pred>)
   (<o> ^name op_press1
        ^arg1.id <button>)
   (<in-pred> ^handle in1
              ^instance <ins1> <ins2>)
   (<ins1> ^1 <button> ^2 <cooler>)
   (<ins2> ^1 <vessel> ^2 <cooler>)
   (<cooler> ^root-category cooler1)
   (<vessel> ^predicates <vpreds>)
   (<vpreds> ^affordance1 fillable1
             ^contents1 empty1)
-->
   (<vpreds> ^contents1 empty1 -
             ^contents1 water1)
}


### Increase the search depth over the default
sp {search-for-next-subtask*elaborate*search-phase-info
   (state <s> ^name search-for-next-subtask)
-->
   (<s> ^number-phases 2
        ^search-phase-info <p1> <p2>)
   # First phase - only consider subtasks with all objects in common with the current task
   (<p1> ^num 1 ^max-depth 4 ^require-all-objects-match 1 ^reject-perc-ops 3)

   # Second phase - level 1: any subtasks, level 2: subtasks with 1+ matching objects, 
   #                level 3-4: only subtasks matching all objects
   (<p2> ^num 2 ^max-depth 4 ^require-matching-object 3 ^require-all-objects-match 4 ^reject-perc-ops 3)
}

excise problem-space*action*internal*apply*op_find1*make*others*unconfirmed
excise problem-space*action*internal*apply*op_find1*make*grabbable*others*unconfirmed
